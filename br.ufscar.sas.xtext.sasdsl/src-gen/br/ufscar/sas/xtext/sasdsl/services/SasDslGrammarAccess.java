/*
 * generated by Xtext 2.16.0
 */
package br.ufscar.sas.xtext.sasdsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class SasDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ArchitectureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.ArchitectureDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cArchitectureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cManagingAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cManagingDSLManagingParserRuleCall_3_0 = (RuleCall)cManagingAssignment_3.eContents().get(0);
		private final Assignment cManagedAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cManagedDSLManagedParserRuleCall_4_0 = (RuleCall)cManagedAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRulesKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cRulesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cRulesDSLRulesParserRuleCall_8_0 = (RuleCall)cRulesAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//ArchitectureDefinition:
		//	'Architecture' name=ID '{'
		//	managing+=DSLManaging+
		//	managed+=DSLManaged+
		//	'}'
		//	'Rules' '{' rules+=DSLRules* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Architecture' name=ID '{' managing+=DSLManaging+ managed+=DSLManaged+ '}' 'Rules' '{' rules+=DSLRules* '}'
		public Group getGroup() { return cGroup; }
		
		//'Architecture'
		public Keyword getArchitectureKeyword_0() { return cArchitectureKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//managing+=DSLManaging+
		public Assignment getManagingAssignment_3() { return cManagingAssignment_3; }
		
		//DSLManaging
		public RuleCall getManagingDSLManagingParserRuleCall_3_0() { return cManagingDSLManagingParserRuleCall_3_0; }
		
		//managed+=DSLManaged+
		public Assignment getManagedAssignment_4() { return cManagedAssignment_4; }
		
		//DSLManaged
		public RuleCall getManagedDSLManagedParserRuleCall_4_0() { return cManagedDSLManagedParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
		
		//'Rules'
		public Keyword getRulesKeyword_6() { return cRulesKeyword_6; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//rules+=DSLRules*
		public Assignment getRulesAssignment_8() { return cRulesAssignment_8; }
		
		//DSLRules
		public RuleCall getRulesDSLRulesParserRuleCall_8_0() { return cRulesDSLRulesParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class DSLRulesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLRules");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDSLRuleControllerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDSLRuleMonitorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDSLRuleAnalyzerParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDSLRulePlannerParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cDSLRuleExecutorParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cDSLRuleMOParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cDSLRuleMControllerParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//DSLRules:
		//	DSLRuleController | DSLRuleMonitor | DSLRuleAnalyzer | DSLRulePlanner | DSLRuleExecutor | DSLRuleMO |
		//	DSLRuleMController;
		@Override public ParserRule getRule() { return rule; }
		
		//DSLRuleController | DSLRuleMonitor | DSLRuleAnalyzer | DSLRulePlanner | DSLRuleExecutor | DSLRuleMO | DSLRuleMController
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DSLRuleController
		public RuleCall getDSLRuleControllerParserRuleCall_0() { return cDSLRuleControllerParserRuleCall_0; }
		
		//DSLRuleMonitor
		public RuleCall getDSLRuleMonitorParserRuleCall_1() { return cDSLRuleMonitorParserRuleCall_1; }
		
		//DSLRuleAnalyzer
		public RuleCall getDSLRuleAnalyzerParserRuleCall_2() { return cDSLRuleAnalyzerParserRuleCall_2; }
		
		//DSLRulePlanner
		public RuleCall getDSLRulePlannerParserRuleCall_3() { return cDSLRulePlannerParserRuleCall_3; }
		
		//DSLRuleExecutor
		public RuleCall getDSLRuleExecutorParserRuleCall_4() { return cDSLRuleExecutorParserRuleCall_4; }
		
		//DSLRuleMO
		public RuleCall getDSLRuleMOParserRuleCall_5() { return cDSLRuleMOParserRuleCall_5; }
		
		//DSLRuleMController
		public RuleCall getDSLRuleMControllerParserRuleCall_6() { return cDSLRuleMControllerParserRuleCall_6; }
	}
	public class DSLRuleMControllerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLRuleMController");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMcontrollerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMcontroller1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cMcontroller1DSLManagerControllerCrossReference_1_0 = (CrossReference)cMcontroller1Assignment_1.eContents().get(0);
		private final RuleCall cMcontroller1DSLManagerControllerIDTerminalRuleCall_1_0_1 = (RuleCall)cMcontroller1DSLManagerControllerCrossReference_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_2_0 = (RuleCall)cAccessAssignment_2.eContents().get(0);
		private final Keyword cMcontrollerKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMcontroller2Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cMcontroller2DSLManagerControllerCrossReference_4_0 = (CrossReference)cMcontroller2Assignment_4.eContents().get(0);
		private final RuleCall cMcontroller2DSLManagerControllerIDTerminalRuleCall_4_0_1 = (RuleCall)cMcontroller2DSLManagerControllerCrossReference_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DSLRuleMController:
		//	'mcontroller' mcontroller1=[DSLManagerController] access=DSLAccess 'mcontroller' mcontroller2=[DSLManagerController]
		//	';';
		@Override public ParserRule getRule() { return rule; }
		
		//'mcontroller' mcontroller1=[DSLManagerController] access=DSLAccess 'mcontroller' mcontroller2=[DSLManagerController] ';'
		public Group getGroup() { return cGroup; }
		
		//'mcontroller'
		public Keyword getMcontrollerKeyword_0() { return cMcontrollerKeyword_0; }
		
		//mcontroller1=[DSLManagerController]
		public Assignment getMcontroller1Assignment_1() { return cMcontroller1Assignment_1; }
		
		//[DSLManagerController]
		public CrossReference getMcontroller1DSLManagerControllerCrossReference_1_0() { return cMcontroller1DSLManagerControllerCrossReference_1_0; }
		
		//ID
		public RuleCall getMcontroller1DSLManagerControllerIDTerminalRuleCall_1_0_1() { return cMcontroller1DSLManagerControllerIDTerminalRuleCall_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_2() { return cAccessAssignment_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_2_0() { return cAccessDSLAccessParserRuleCall_2_0; }
		
		//'mcontroller'
		public Keyword getMcontrollerKeyword_3() { return cMcontrollerKeyword_3; }
		
		//mcontroller2=[DSLManagerController]
		public Assignment getMcontroller2Assignment_4() { return cMcontroller2Assignment_4; }
		
		//[DSLManagerController]
		public CrossReference getMcontroller2DSLManagerControllerCrossReference_4_0() { return cMcontroller2DSLManagerControllerCrossReference_4_0; }
		
		//ID
		public RuleCall getMcontroller2DSLManagerControllerIDTerminalRuleCall_4_0_1() { return cMcontroller2DSLManagerControllerIDTerminalRuleCall_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class DSLRuleControllerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLRuleController");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cControllerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cController1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cController1DSLControllerCrossReference_1_0 = (CrossReference)cController1Assignment_1.eContents().get(0);
		private final RuleCall cController1DSLControllerIDTerminalRuleCall_1_0_1 = (RuleCall)cController1DSLControllerCrossReference_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_2_0 = (RuleCall)cAccessAssignment_2.eContents().get(0);
		private final Keyword cControllerKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cController2Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cController2DSLControllerCrossReference_4_0 = (CrossReference)cController2Assignment_4.eContents().get(0);
		private final RuleCall cController2DSLControllerIDTerminalRuleCall_4_0_1 = (RuleCall)cController2DSLControllerCrossReference_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DSLRuleController:
		//	'controller' controller1=[DSLController] access=DSLAccess 'controller' controller2=[DSLController] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'controller' controller1=[DSLController] access=DSLAccess 'controller' controller2=[DSLController] ';'
		public Group getGroup() { return cGroup; }
		
		//'controller'
		public Keyword getControllerKeyword_0() { return cControllerKeyword_0; }
		
		//controller1=[DSLController]
		public Assignment getController1Assignment_1() { return cController1Assignment_1; }
		
		//[DSLController]
		public CrossReference getController1DSLControllerCrossReference_1_0() { return cController1DSLControllerCrossReference_1_0; }
		
		//ID
		public RuleCall getController1DSLControllerIDTerminalRuleCall_1_0_1() { return cController1DSLControllerIDTerminalRuleCall_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_2() { return cAccessAssignment_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_2_0() { return cAccessDSLAccessParserRuleCall_2_0; }
		
		//'controller'
		public Keyword getControllerKeyword_3() { return cControllerKeyword_3; }
		
		//controller2=[DSLController]
		public Assignment getController2Assignment_4() { return cController2Assignment_4; }
		
		//[DSLController]
		public CrossReference getController2DSLControllerCrossReference_4_0() { return cController2DSLControllerCrossReference_4_0; }
		
		//ID
		public RuleCall getController2DSLControllerIDTerminalRuleCall_4_0_1() { return cController2DSLControllerIDTerminalRuleCall_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class DSLRuleMonitorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLRuleMonitor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cMonitorKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cMonitorAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cMonitorDSLMonitorCrossReference_0_1_0 = (CrossReference)cMonitorAssignment_0_1.eContents().get(0);
		private final RuleCall cMonitorDSLMonitorIDTerminalRuleCall_0_1_0_1 = (RuleCall)cMonitorDSLMonitorCrossReference_0_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_0_2_0 = (RuleCall)cAccessAssignment_0_2.eContents().get(0);
		private final Keyword cSensorKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cSensorAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final CrossReference cSensorDSLSensorCrossReference_0_4_0 = (CrossReference)cSensorAssignment_0_4.eContents().get(0);
		private final RuleCall cSensorDSLSensorIDTerminalRuleCall_0_4_0_1 = (RuleCall)cSensorDSLSensorCrossReference_0_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cMonitorKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cMonitorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cMonitorDSLMonitorCrossReference_1_1_0 = (CrossReference)cMonitorAssignment_1_1.eContents().get(0);
		private final RuleCall cMonitorDSLMonitorIDTerminalRuleCall_1_1_0_1 = (RuleCall)cMonitorDSLMonitorCrossReference_1_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_1_2_0 = (RuleCall)cAccessAssignment_1_2.eContents().get(0);
		private final Keyword cKnowledgeKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cKnowledgeAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final CrossReference cKnowledgeDSLKnowledgeCrossReference_1_4_0 = (CrossReference)cKnowledgeAssignment_1_4.eContents().get(0);
		private final RuleCall cKnowledgeDSLKnowledgeIDTerminalRuleCall_1_4_0_1 = (RuleCall)cKnowledgeDSLKnowledgeCrossReference_1_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cMonitorKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cMonitorAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cMonitorDSLMonitorCrossReference_2_1_0 = (CrossReference)cMonitorAssignment_2_1.eContents().get(0);
		private final RuleCall cMonitorDSLMonitorIDTerminalRuleCall_2_1_0_1 = (RuleCall)cMonitorDSLMonitorCrossReference_2_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_2_2_0 = (RuleCall)cAccessAssignment_2_2.eContents().get(0);
		private final Keyword cAnalyzerKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cAnalyzerAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final CrossReference cAnalyzerDSLAnalyzerCrossReference_2_4_0 = (CrossReference)cAnalyzerAssignment_2_4.eContents().get(0);
		private final RuleCall cAnalyzerDSLAnalyzerIDTerminalRuleCall_2_4_0_1 = (RuleCall)cAnalyzerDSLAnalyzerCrossReference_2_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cMonitorKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMonitorAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cMonitorDSLMonitorCrossReference_3_1_0 = (CrossReference)cMonitorAssignment_3_1.eContents().get(0);
		private final RuleCall cMonitorDSLMonitorIDTerminalRuleCall_3_1_0_1 = (RuleCall)cMonitorDSLMonitorCrossReference_3_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_3_2_0 = (RuleCall)cAccessAssignment_3_2.eContents().get(0);
		private final Keyword cMonitorKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cMonitor2Assignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final CrossReference cMonitor2DSLMonitorCrossReference_3_4_0 = (CrossReference)cMonitor2Assignment_3_4.eContents().get(0);
		private final RuleCall cMonitor2DSLMonitorIDTerminalRuleCall_3_4_0_1 = (RuleCall)cMonitor2DSLMonitorCrossReference_3_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		
		//DSLRuleMonitor:
		//	'monitor' monitor=[DSLMonitor] access=DSLAccess 'sensor' sensor=[DSLSensor] ';' | 'monitor' monitor=[DSLMonitor]
		//	access=DSLAccess 'knowledge' knowledge=[DSLKnowledge] ';' | 'monitor' monitor=[DSLMonitor] access=DSLAccess 'analyzer'
		//	analyzer=[DSLAnalyzer] ';' | 'monitor' monitor=[DSLMonitor] access=DSLAccess 'monitor' monitor2=[DSLMonitor] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'monitor' monitor=[DSLMonitor] access=DSLAccess 'sensor' sensor=[DSLSensor] ';' | 'monitor' monitor=[DSLMonitor]
		//access=DSLAccess 'knowledge' knowledge=[DSLKnowledge] ';' | 'monitor' monitor=[DSLMonitor] access=DSLAccess 'analyzer'
		//analyzer=[DSLAnalyzer] ';' | 'monitor' monitor=[DSLMonitor] access=DSLAccess 'monitor' monitor2=[DSLMonitor] ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'monitor' monitor=[DSLMonitor] access=DSLAccess 'sensor' sensor=[DSLSensor] ';'
		public Group getGroup_0() { return cGroup_0; }
		
		//'monitor'
		public Keyword getMonitorKeyword_0_0() { return cMonitorKeyword_0_0; }
		
		//monitor=[DSLMonitor]
		public Assignment getMonitorAssignment_0_1() { return cMonitorAssignment_0_1; }
		
		//[DSLMonitor]
		public CrossReference getMonitorDSLMonitorCrossReference_0_1_0() { return cMonitorDSLMonitorCrossReference_0_1_0; }
		
		//ID
		public RuleCall getMonitorDSLMonitorIDTerminalRuleCall_0_1_0_1() { return cMonitorDSLMonitorIDTerminalRuleCall_0_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_0_2() { return cAccessAssignment_0_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_0_2_0() { return cAccessDSLAccessParserRuleCall_0_2_0; }
		
		//'sensor'
		public Keyword getSensorKeyword_0_3() { return cSensorKeyword_0_3; }
		
		//sensor=[DSLSensor]
		public Assignment getSensorAssignment_0_4() { return cSensorAssignment_0_4; }
		
		//[DSLSensor]
		public CrossReference getSensorDSLSensorCrossReference_0_4_0() { return cSensorDSLSensorCrossReference_0_4_0; }
		
		//ID
		public RuleCall getSensorDSLSensorIDTerminalRuleCall_0_4_0_1() { return cSensorDSLSensorIDTerminalRuleCall_0_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_0_5() { return cSemicolonKeyword_0_5; }
		
		//'monitor' monitor=[DSLMonitor] access=DSLAccess 'knowledge' knowledge=[DSLKnowledge] ';'
		public Group getGroup_1() { return cGroup_1; }
		
		//'monitor'
		public Keyword getMonitorKeyword_1_0() { return cMonitorKeyword_1_0; }
		
		//monitor=[DSLMonitor]
		public Assignment getMonitorAssignment_1_1() { return cMonitorAssignment_1_1; }
		
		//[DSLMonitor]
		public CrossReference getMonitorDSLMonitorCrossReference_1_1_0() { return cMonitorDSLMonitorCrossReference_1_1_0; }
		
		//ID
		public RuleCall getMonitorDSLMonitorIDTerminalRuleCall_1_1_0_1() { return cMonitorDSLMonitorIDTerminalRuleCall_1_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_1_2() { return cAccessAssignment_1_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_1_2_0() { return cAccessDSLAccessParserRuleCall_1_2_0; }
		
		//'knowledge'
		public Keyword getKnowledgeKeyword_1_3() { return cKnowledgeKeyword_1_3; }
		
		//knowledge=[DSLKnowledge]
		public Assignment getKnowledgeAssignment_1_4() { return cKnowledgeAssignment_1_4; }
		
		//[DSLKnowledge]
		public CrossReference getKnowledgeDSLKnowledgeCrossReference_1_4_0() { return cKnowledgeDSLKnowledgeCrossReference_1_4_0; }
		
		//ID
		public RuleCall getKnowledgeDSLKnowledgeIDTerminalRuleCall_1_4_0_1() { return cKnowledgeDSLKnowledgeIDTerminalRuleCall_1_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_5() { return cSemicolonKeyword_1_5; }
		
		//'monitor' monitor=[DSLMonitor] access=DSLAccess 'analyzer' analyzer=[DSLAnalyzer] ';'
		public Group getGroup_2() { return cGroup_2; }
		
		//'monitor'
		public Keyword getMonitorKeyword_2_0() { return cMonitorKeyword_2_0; }
		
		//monitor=[DSLMonitor]
		public Assignment getMonitorAssignment_2_1() { return cMonitorAssignment_2_1; }
		
		//[DSLMonitor]
		public CrossReference getMonitorDSLMonitorCrossReference_2_1_0() { return cMonitorDSLMonitorCrossReference_2_1_0; }
		
		//ID
		public RuleCall getMonitorDSLMonitorIDTerminalRuleCall_2_1_0_1() { return cMonitorDSLMonitorIDTerminalRuleCall_2_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_2_2() { return cAccessAssignment_2_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_2_2_0() { return cAccessDSLAccessParserRuleCall_2_2_0; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_2_3() { return cAnalyzerKeyword_2_3; }
		
		//analyzer=[DSLAnalyzer]
		public Assignment getAnalyzerAssignment_2_4() { return cAnalyzerAssignment_2_4; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzerDSLAnalyzerCrossReference_2_4_0() { return cAnalyzerDSLAnalyzerCrossReference_2_4_0; }
		
		//ID
		public RuleCall getAnalyzerDSLAnalyzerIDTerminalRuleCall_2_4_0_1() { return cAnalyzerDSLAnalyzerIDTerminalRuleCall_2_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2_5() { return cSemicolonKeyword_2_5; }
		
		//'monitor' monitor=[DSLMonitor] access=DSLAccess 'monitor' monitor2=[DSLMonitor] ';'
		public Group getGroup_3() { return cGroup_3; }
		
		//'monitor'
		public Keyword getMonitorKeyword_3_0() { return cMonitorKeyword_3_0; }
		
		//monitor=[DSLMonitor]
		public Assignment getMonitorAssignment_3_1() { return cMonitorAssignment_3_1; }
		
		//[DSLMonitor]
		public CrossReference getMonitorDSLMonitorCrossReference_3_1_0() { return cMonitorDSLMonitorCrossReference_3_1_0; }
		
		//ID
		public RuleCall getMonitorDSLMonitorIDTerminalRuleCall_3_1_0_1() { return cMonitorDSLMonitorIDTerminalRuleCall_3_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_3_2() { return cAccessAssignment_3_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_3_2_0() { return cAccessDSLAccessParserRuleCall_3_2_0; }
		
		//'monitor'
		public Keyword getMonitorKeyword_3_3() { return cMonitorKeyword_3_3; }
		
		//monitor2=[DSLMonitor]
		public Assignment getMonitor2Assignment_3_4() { return cMonitor2Assignment_3_4; }
		
		//[DSLMonitor]
		public CrossReference getMonitor2DSLMonitorCrossReference_3_4_0() { return cMonitor2DSLMonitorCrossReference_3_4_0; }
		
		//ID
		public RuleCall getMonitor2DSLMonitorIDTerminalRuleCall_3_4_0_1() { return cMonitor2DSLMonitorIDTerminalRuleCall_3_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3_5() { return cSemicolonKeyword_3_5; }
	}
	public class DSLRuleAnalyzerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLRuleAnalyzer");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cAnalyzerKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cAnalyzerAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cAnalyzerDSLAnalyzerCrossReference_0_1_0 = (CrossReference)cAnalyzerAssignment_0_1.eContents().get(0);
		private final RuleCall cAnalyzerDSLAnalyzerIDTerminalRuleCall_0_1_0_1 = (RuleCall)cAnalyzerDSLAnalyzerCrossReference_0_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_0_2_0 = (RuleCall)cAccessAssignment_0_2.eContents().get(0);
		private final Keyword cKnowledgeKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cKnowledgeAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final CrossReference cKnowledgeDSLKnowledgeCrossReference_0_4_0 = (CrossReference)cKnowledgeAssignment_0_4.eContents().get(0);
		private final RuleCall cKnowledgeDSLKnowledgeIDTerminalRuleCall_0_4_0_1 = (RuleCall)cKnowledgeDSLKnowledgeCrossReference_0_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cAnalyzerKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cAnalyzerAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cAnalyzerDSLAnalyzerCrossReference_1_1_0 = (CrossReference)cAnalyzerAssignment_1_1.eContents().get(0);
		private final RuleCall cAnalyzerDSLAnalyzerIDTerminalRuleCall_1_1_0_1 = (RuleCall)cAnalyzerDSLAnalyzerCrossReference_1_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_1_2_0 = (RuleCall)cAccessAssignment_1_2.eContents().get(0);
		private final Keyword cMonitorKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cMonitorAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final CrossReference cMonitorDSLMonitorCrossReference_1_4_0 = (CrossReference)cMonitorAssignment_1_4.eContents().get(0);
		private final RuleCall cMonitorDSLMonitorIDTerminalRuleCall_1_4_0_1 = (RuleCall)cMonitorDSLMonitorCrossReference_1_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cAnalyzerKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAnalyzerAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cAnalyzerDSLAnalyzerCrossReference_2_1_0 = (CrossReference)cAnalyzerAssignment_2_1.eContents().get(0);
		private final RuleCall cAnalyzerDSLAnalyzerIDTerminalRuleCall_2_1_0_1 = (RuleCall)cAnalyzerDSLAnalyzerCrossReference_2_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_2_2_0 = (RuleCall)cAccessAssignment_2_2.eContents().get(0);
		private final Keyword cPlannerKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cPlannerAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final CrossReference cPlannerDSLPlannerCrossReference_2_4_0 = (CrossReference)cPlannerAssignment_2_4.eContents().get(0);
		private final RuleCall cPlannerDSLPlannerIDTerminalRuleCall_2_4_0_1 = (RuleCall)cPlannerDSLPlannerCrossReference_2_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cAnalyzerKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAnalyzerAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cAnalyzerDSLAnalyzerCrossReference_3_1_0 = (CrossReference)cAnalyzerAssignment_3_1.eContents().get(0);
		private final RuleCall cAnalyzerDSLAnalyzerIDTerminalRuleCall_3_1_0_1 = (RuleCall)cAnalyzerDSLAnalyzerCrossReference_3_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_3_2_0 = (RuleCall)cAccessAssignment_3_2.eContents().get(0);
		private final Keyword cReferenceInputKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cRreferenceAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final CrossReference cRreferenceDSLReferenceInputCrossReference_3_4_0 = (CrossReference)cRreferenceAssignment_3_4.eContents().get(0);
		private final RuleCall cRreferenceDSLReferenceInputIDTerminalRuleCall_3_4_0_1 = (RuleCall)cRreferenceDSLReferenceInputCrossReference_3_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cAnalyzerKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAnalyzerAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cAnalyzerDSLAnalyzerCrossReference_4_1_0 = (CrossReference)cAnalyzerAssignment_4_1.eContents().get(0);
		private final RuleCall cAnalyzerDSLAnalyzerIDTerminalRuleCall_4_1_0_1 = (RuleCall)cAnalyzerDSLAnalyzerCrossReference_4_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_4_2_0 = (RuleCall)cAccessAssignment_4_2.eContents().get(0);
		private final Keyword cAnalyzerKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Assignment cAnalyzer2Assignment_4_4 = (Assignment)cGroup_4.eContents().get(4);
		private final CrossReference cAnalyzer2DSLAnalyzerCrossReference_4_4_0 = (CrossReference)cAnalyzer2Assignment_4_4.eContents().get(0);
		private final RuleCall cAnalyzer2DSLAnalyzerIDTerminalRuleCall_4_4_0_1 = (RuleCall)cAnalyzer2DSLAnalyzerCrossReference_4_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4_5 = (Keyword)cGroup_4.eContents().get(5);
		
		//DSLRuleAnalyzer:
		//	'analyzer' analyzer=[DSLAnalyzer] access=DSLAccess 'knowledge' knowledge=[DSLKnowledge] ';' | 'analyzer'
		//	analyzer=[DSLAnalyzer] access=DSLAccess 'monitor' monitor=[DSLMonitor] ';' | 'analyzer' analyzer=[DSLAnalyzer]
		//	access=DSLAccess 'planner' planner=[DSLPlanner] ';' | 'analyzer' analyzer=[DSLAnalyzer] access=DSLAccess
		//	'reference-input' rreference=[DSLReferenceInput] ';' | 'analyzer' analyzer=[DSLAnalyzer] access=DSLAccess 'analyzer'
		//	analyzer2=[DSLAnalyzer] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'analyzer' analyzer=[DSLAnalyzer] access=DSLAccess 'knowledge' knowledge=[DSLKnowledge] ';' | 'analyzer'
		//analyzer=[DSLAnalyzer] access=DSLAccess 'monitor' monitor=[DSLMonitor] ';' | 'analyzer' analyzer=[DSLAnalyzer]
		//access=DSLAccess 'planner' planner=[DSLPlanner] ';' | 'analyzer' analyzer=[DSLAnalyzer] access=DSLAccess
		//'reference-input' rreference=[DSLReferenceInput] ';' | 'analyzer' analyzer=[DSLAnalyzer] access=DSLAccess 'analyzer'
		//analyzer2=[DSLAnalyzer] ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'analyzer' analyzer=[DSLAnalyzer] access=DSLAccess 'knowledge' knowledge=[DSLKnowledge] ';'
		public Group getGroup_0() { return cGroup_0; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_0_0() { return cAnalyzerKeyword_0_0; }
		
		//analyzer=[DSLAnalyzer]
		public Assignment getAnalyzerAssignment_0_1() { return cAnalyzerAssignment_0_1; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzerDSLAnalyzerCrossReference_0_1_0() { return cAnalyzerDSLAnalyzerCrossReference_0_1_0; }
		
		//ID
		public RuleCall getAnalyzerDSLAnalyzerIDTerminalRuleCall_0_1_0_1() { return cAnalyzerDSLAnalyzerIDTerminalRuleCall_0_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_0_2() { return cAccessAssignment_0_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_0_2_0() { return cAccessDSLAccessParserRuleCall_0_2_0; }
		
		//'knowledge'
		public Keyword getKnowledgeKeyword_0_3() { return cKnowledgeKeyword_0_3; }
		
		//knowledge=[DSLKnowledge]
		public Assignment getKnowledgeAssignment_0_4() { return cKnowledgeAssignment_0_4; }
		
		//[DSLKnowledge]
		public CrossReference getKnowledgeDSLKnowledgeCrossReference_0_4_0() { return cKnowledgeDSLKnowledgeCrossReference_0_4_0; }
		
		//ID
		public RuleCall getKnowledgeDSLKnowledgeIDTerminalRuleCall_0_4_0_1() { return cKnowledgeDSLKnowledgeIDTerminalRuleCall_0_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_0_5() { return cSemicolonKeyword_0_5; }
		
		//'analyzer' analyzer=[DSLAnalyzer] access=DSLAccess 'monitor' monitor=[DSLMonitor] ';'
		public Group getGroup_1() { return cGroup_1; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_1_0() { return cAnalyzerKeyword_1_0; }
		
		//analyzer=[DSLAnalyzer]
		public Assignment getAnalyzerAssignment_1_1() { return cAnalyzerAssignment_1_1; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzerDSLAnalyzerCrossReference_1_1_0() { return cAnalyzerDSLAnalyzerCrossReference_1_1_0; }
		
		//ID
		public RuleCall getAnalyzerDSLAnalyzerIDTerminalRuleCall_1_1_0_1() { return cAnalyzerDSLAnalyzerIDTerminalRuleCall_1_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_1_2() { return cAccessAssignment_1_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_1_2_0() { return cAccessDSLAccessParserRuleCall_1_2_0; }
		
		//'monitor'
		public Keyword getMonitorKeyword_1_3() { return cMonitorKeyword_1_3; }
		
		//monitor=[DSLMonitor]
		public Assignment getMonitorAssignment_1_4() { return cMonitorAssignment_1_4; }
		
		//[DSLMonitor]
		public CrossReference getMonitorDSLMonitorCrossReference_1_4_0() { return cMonitorDSLMonitorCrossReference_1_4_0; }
		
		//ID
		public RuleCall getMonitorDSLMonitorIDTerminalRuleCall_1_4_0_1() { return cMonitorDSLMonitorIDTerminalRuleCall_1_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_5() { return cSemicolonKeyword_1_5; }
		
		//'analyzer' analyzer=[DSLAnalyzer] access=DSLAccess 'planner' planner=[DSLPlanner] ';'
		public Group getGroup_2() { return cGroup_2; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_2_0() { return cAnalyzerKeyword_2_0; }
		
		//analyzer=[DSLAnalyzer]
		public Assignment getAnalyzerAssignment_2_1() { return cAnalyzerAssignment_2_1; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzerDSLAnalyzerCrossReference_2_1_0() { return cAnalyzerDSLAnalyzerCrossReference_2_1_0; }
		
		//ID
		public RuleCall getAnalyzerDSLAnalyzerIDTerminalRuleCall_2_1_0_1() { return cAnalyzerDSLAnalyzerIDTerminalRuleCall_2_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_2_2() { return cAccessAssignment_2_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_2_2_0() { return cAccessDSLAccessParserRuleCall_2_2_0; }
		
		//'planner'
		public Keyword getPlannerKeyword_2_3() { return cPlannerKeyword_2_3; }
		
		//planner=[DSLPlanner]
		public Assignment getPlannerAssignment_2_4() { return cPlannerAssignment_2_4; }
		
		//[DSLPlanner]
		public CrossReference getPlannerDSLPlannerCrossReference_2_4_0() { return cPlannerDSLPlannerCrossReference_2_4_0; }
		
		//ID
		public RuleCall getPlannerDSLPlannerIDTerminalRuleCall_2_4_0_1() { return cPlannerDSLPlannerIDTerminalRuleCall_2_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2_5() { return cSemicolonKeyword_2_5; }
		
		//'analyzer' analyzer=[DSLAnalyzer] access=DSLAccess 'reference-input' rreference=[DSLReferenceInput] ';'
		public Group getGroup_3() { return cGroup_3; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_3_0() { return cAnalyzerKeyword_3_0; }
		
		//analyzer=[DSLAnalyzer]
		public Assignment getAnalyzerAssignment_3_1() { return cAnalyzerAssignment_3_1; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzerDSLAnalyzerCrossReference_3_1_0() { return cAnalyzerDSLAnalyzerCrossReference_3_1_0; }
		
		//ID
		public RuleCall getAnalyzerDSLAnalyzerIDTerminalRuleCall_3_1_0_1() { return cAnalyzerDSLAnalyzerIDTerminalRuleCall_3_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_3_2() { return cAccessAssignment_3_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_3_2_0() { return cAccessDSLAccessParserRuleCall_3_2_0; }
		
		//'reference-input'
		public Keyword getReferenceInputKeyword_3_3() { return cReferenceInputKeyword_3_3; }
		
		//rreference=[DSLReferenceInput]
		public Assignment getRreferenceAssignment_3_4() { return cRreferenceAssignment_3_4; }
		
		//[DSLReferenceInput]
		public CrossReference getRreferenceDSLReferenceInputCrossReference_3_4_0() { return cRreferenceDSLReferenceInputCrossReference_3_4_0; }
		
		//ID
		public RuleCall getRreferenceDSLReferenceInputIDTerminalRuleCall_3_4_0_1() { return cRreferenceDSLReferenceInputIDTerminalRuleCall_3_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3_5() { return cSemicolonKeyword_3_5; }
		
		//'analyzer' analyzer=[DSLAnalyzer] access=DSLAccess 'analyzer' analyzer2=[DSLAnalyzer] ';'
		public Group getGroup_4() { return cGroup_4; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_4_0() { return cAnalyzerKeyword_4_0; }
		
		//analyzer=[DSLAnalyzer]
		public Assignment getAnalyzerAssignment_4_1() { return cAnalyzerAssignment_4_1; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzerDSLAnalyzerCrossReference_4_1_0() { return cAnalyzerDSLAnalyzerCrossReference_4_1_0; }
		
		//ID
		public RuleCall getAnalyzerDSLAnalyzerIDTerminalRuleCall_4_1_0_1() { return cAnalyzerDSLAnalyzerIDTerminalRuleCall_4_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_4_2() { return cAccessAssignment_4_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_4_2_0() { return cAccessDSLAccessParserRuleCall_4_2_0; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_4_3() { return cAnalyzerKeyword_4_3; }
		
		//analyzer2=[DSLAnalyzer]
		public Assignment getAnalyzer2Assignment_4_4() { return cAnalyzer2Assignment_4_4; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzer2DSLAnalyzerCrossReference_4_4_0() { return cAnalyzer2DSLAnalyzerCrossReference_4_4_0; }
		
		//ID
		public RuleCall getAnalyzer2DSLAnalyzerIDTerminalRuleCall_4_4_0_1() { return cAnalyzer2DSLAnalyzerIDTerminalRuleCall_4_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_4_5() { return cSemicolonKeyword_4_5; }
	}
	public class DSLRulePlannerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLRulePlanner");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cPlannerKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cPlannerAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cPlannerDSLPlannerCrossReference_0_1_0 = (CrossReference)cPlannerAssignment_0_1.eContents().get(0);
		private final RuleCall cPlannerDSLPlannerIDTerminalRuleCall_0_1_0_1 = (RuleCall)cPlannerDSLPlannerCrossReference_0_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_0_2_0 = (RuleCall)cAccessAssignment_0_2.eContents().get(0);
		private final Keyword cKnowledgeKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cKnowledgeAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final CrossReference cKnowledgeDSLKnowledgeCrossReference_0_4_0 = (CrossReference)cKnowledgeAssignment_0_4.eContents().get(0);
		private final RuleCall cKnowledgeDSLKnowledgeIDTerminalRuleCall_0_4_0_1 = (RuleCall)cKnowledgeDSLKnowledgeCrossReference_0_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cPlannerKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cPlannerAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cPlannerDSLPlannerCrossReference_1_1_0 = (CrossReference)cPlannerAssignment_1_1.eContents().get(0);
		private final RuleCall cPlannerDSLPlannerIDTerminalRuleCall_1_1_0_1 = (RuleCall)cPlannerDSLPlannerCrossReference_1_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_1_2_0 = (RuleCall)cAccessAssignment_1_2.eContents().get(0);
		private final Keyword cAnalyzerKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cAnalyzerAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final CrossReference cAnalyzerDSLAnalyzerCrossReference_1_4_0 = (CrossReference)cAnalyzerAssignment_1_4.eContents().get(0);
		private final RuleCall cAnalyzerDSLAnalyzerIDTerminalRuleCall_1_4_0_1 = (RuleCall)cAnalyzerDSLAnalyzerCrossReference_1_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cPlannerKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPlannerAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cPlannerDSLPlannerCrossReference_2_1_0 = (CrossReference)cPlannerAssignment_2_1.eContents().get(0);
		private final RuleCall cPlannerDSLPlannerIDTerminalRuleCall_2_1_0_1 = (RuleCall)cPlannerDSLPlannerCrossReference_2_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_2_2_0 = (RuleCall)cAccessAssignment_2_2.eContents().get(0);
		private final Keyword cExecutorKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cExecutorAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final CrossReference cExecutorDSLExecutorCrossReference_2_4_0 = (CrossReference)cExecutorAssignment_2_4.eContents().get(0);
		private final RuleCall cExecutorDSLExecutorIDTerminalRuleCall_2_4_0_1 = (RuleCall)cExecutorDSLExecutorCrossReference_2_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cPlannerKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPlannerAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cPlannerDSLPlannerCrossReference_3_1_0 = (CrossReference)cPlannerAssignment_3_1.eContents().get(0);
		private final RuleCall cPlannerDSLPlannerIDTerminalRuleCall_3_1_0_1 = (RuleCall)cPlannerDSLPlannerCrossReference_3_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_3_2_0 = (RuleCall)cAccessAssignment_3_2.eContents().get(0);
		private final Keyword cPlannerKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cPlanner2Assignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final CrossReference cPlanner2DSLPlannerCrossReference_3_4_0 = (CrossReference)cPlanner2Assignment_3_4.eContents().get(0);
		private final RuleCall cPlanner2DSLPlannerIDTerminalRuleCall_3_4_0_1 = (RuleCall)cPlanner2DSLPlannerCrossReference_3_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		
		//DSLRulePlanner:
		//	'planner' planner=[DSLPlanner] access=DSLAccess 'knowledge' knowledge=[DSLKnowledge] ';' | 'planner'
		//	planner=[DSLPlanner] access=DSLAccess 'analyzer' analyzer=[DSLAnalyzer] ';' | 'planner' planner=[DSLPlanner]
		//	access=DSLAccess 'executor' executor=[DSLExecutor] ';' | 'planner' planner=[DSLPlanner] access=DSLAccess 'planner'
		//	planner2=[DSLPlanner] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'planner' planner=[DSLPlanner] access=DSLAccess 'knowledge' knowledge=[DSLKnowledge] ';' | 'planner'
		//planner=[DSLPlanner] access=DSLAccess 'analyzer' analyzer=[DSLAnalyzer] ';' | 'planner' planner=[DSLPlanner]
		//access=DSLAccess 'executor' executor=[DSLExecutor] ';' | 'planner' planner=[DSLPlanner] access=DSLAccess 'planner'
		//planner2=[DSLPlanner] ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'planner' planner=[DSLPlanner] access=DSLAccess 'knowledge' knowledge=[DSLKnowledge] ';'
		public Group getGroup_0() { return cGroup_0; }
		
		//'planner'
		public Keyword getPlannerKeyword_0_0() { return cPlannerKeyword_0_0; }
		
		//planner=[DSLPlanner]
		public Assignment getPlannerAssignment_0_1() { return cPlannerAssignment_0_1; }
		
		//[DSLPlanner]
		public CrossReference getPlannerDSLPlannerCrossReference_0_1_0() { return cPlannerDSLPlannerCrossReference_0_1_0; }
		
		//ID
		public RuleCall getPlannerDSLPlannerIDTerminalRuleCall_0_1_0_1() { return cPlannerDSLPlannerIDTerminalRuleCall_0_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_0_2() { return cAccessAssignment_0_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_0_2_0() { return cAccessDSLAccessParserRuleCall_0_2_0; }
		
		//'knowledge'
		public Keyword getKnowledgeKeyword_0_3() { return cKnowledgeKeyword_0_3; }
		
		//knowledge=[DSLKnowledge]
		public Assignment getKnowledgeAssignment_0_4() { return cKnowledgeAssignment_0_4; }
		
		//[DSLKnowledge]
		public CrossReference getKnowledgeDSLKnowledgeCrossReference_0_4_0() { return cKnowledgeDSLKnowledgeCrossReference_0_4_0; }
		
		//ID
		public RuleCall getKnowledgeDSLKnowledgeIDTerminalRuleCall_0_4_0_1() { return cKnowledgeDSLKnowledgeIDTerminalRuleCall_0_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_0_5() { return cSemicolonKeyword_0_5; }
		
		//'planner' planner=[DSLPlanner] access=DSLAccess 'analyzer' analyzer=[DSLAnalyzer] ';'
		public Group getGroup_1() { return cGroup_1; }
		
		//'planner'
		public Keyword getPlannerKeyword_1_0() { return cPlannerKeyword_1_0; }
		
		//planner=[DSLPlanner]
		public Assignment getPlannerAssignment_1_1() { return cPlannerAssignment_1_1; }
		
		//[DSLPlanner]
		public CrossReference getPlannerDSLPlannerCrossReference_1_1_0() { return cPlannerDSLPlannerCrossReference_1_1_0; }
		
		//ID
		public RuleCall getPlannerDSLPlannerIDTerminalRuleCall_1_1_0_1() { return cPlannerDSLPlannerIDTerminalRuleCall_1_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_1_2() { return cAccessAssignment_1_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_1_2_0() { return cAccessDSLAccessParserRuleCall_1_2_0; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_1_3() { return cAnalyzerKeyword_1_3; }
		
		//analyzer=[DSLAnalyzer]
		public Assignment getAnalyzerAssignment_1_4() { return cAnalyzerAssignment_1_4; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzerDSLAnalyzerCrossReference_1_4_0() { return cAnalyzerDSLAnalyzerCrossReference_1_4_0; }
		
		//ID
		public RuleCall getAnalyzerDSLAnalyzerIDTerminalRuleCall_1_4_0_1() { return cAnalyzerDSLAnalyzerIDTerminalRuleCall_1_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_5() { return cSemicolonKeyword_1_5; }
		
		//'planner' planner=[DSLPlanner] access=DSLAccess 'executor' executor=[DSLExecutor] ';'
		public Group getGroup_2() { return cGroup_2; }
		
		//'planner'
		public Keyword getPlannerKeyword_2_0() { return cPlannerKeyword_2_0; }
		
		//planner=[DSLPlanner]
		public Assignment getPlannerAssignment_2_1() { return cPlannerAssignment_2_1; }
		
		//[DSLPlanner]
		public CrossReference getPlannerDSLPlannerCrossReference_2_1_0() { return cPlannerDSLPlannerCrossReference_2_1_0; }
		
		//ID
		public RuleCall getPlannerDSLPlannerIDTerminalRuleCall_2_1_0_1() { return cPlannerDSLPlannerIDTerminalRuleCall_2_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_2_2() { return cAccessAssignment_2_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_2_2_0() { return cAccessDSLAccessParserRuleCall_2_2_0; }
		
		//'executor'
		public Keyword getExecutorKeyword_2_3() { return cExecutorKeyword_2_3; }
		
		//executor=[DSLExecutor]
		public Assignment getExecutorAssignment_2_4() { return cExecutorAssignment_2_4; }
		
		//[DSLExecutor]
		public CrossReference getExecutorDSLExecutorCrossReference_2_4_0() { return cExecutorDSLExecutorCrossReference_2_4_0; }
		
		//ID
		public RuleCall getExecutorDSLExecutorIDTerminalRuleCall_2_4_0_1() { return cExecutorDSLExecutorIDTerminalRuleCall_2_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2_5() { return cSemicolonKeyword_2_5; }
		
		//'planner' planner=[DSLPlanner] access=DSLAccess 'planner' planner2=[DSLPlanner] ';'
		public Group getGroup_3() { return cGroup_3; }
		
		//'planner'
		public Keyword getPlannerKeyword_3_0() { return cPlannerKeyword_3_0; }
		
		//planner=[DSLPlanner]
		public Assignment getPlannerAssignment_3_1() { return cPlannerAssignment_3_1; }
		
		//[DSLPlanner]
		public CrossReference getPlannerDSLPlannerCrossReference_3_1_0() { return cPlannerDSLPlannerCrossReference_3_1_0; }
		
		//ID
		public RuleCall getPlannerDSLPlannerIDTerminalRuleCall_3_1_0_1() { return cPlannerDSLPlannerIDTerminalRuleCall_3_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_3_2() { return cAccessAssignment_3_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_3_2_0() { return cAccessDSLAccessParserRuleCall_3_2_0; }
		
		//'planner'
		public Keyword getPlannerKeyword_3_3() { return cPlannerKeyword_3_3; }
		
		//planner2=[DSLPlanner]
		public Assignment getPlanner2Assignment_3_4() { return cPlanner2Assignment_3_4; }
		
		//[DSLPlanner]
		public CrossReference getPlanner2DSLPlannerCrossReference_3_4_0() { return cPlanner2DSLPlannerCrossReference_3_4_0; }
		
		//ID
		public RuleCall getPlanner2DSLPlannerIDTerminalRuleCall_3_4_0_1() { return cPlanner2DSLPlannerIDTerminalRuleCall_3_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3_5() { return cSemicolonKeyword_3_5; }
	}
	public class DSLRuleExecutorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLRuleExecutor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cExecutorKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cExecutorAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cExecutorDSLExecutorCrossReference_0_1_0 = (CrossReference)cExecutorAssignment_0_1.eContents().get(0);
		private final RuleCall cExecutorDSLExecutorIDTerminalRuleCall_0_1_0_1 = (RuleCall)cExecutorDSLExecutorCrossReference_0_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_0_2_0 = (RuleCall)cAccessAssignment_0_2.eContents().get(0);
		private final Keyword cEffectorKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cEffectorAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final CrossReference cEffectorDSLEffectorCrossReference_0_4_0 = (CrossReference)cEffectorAssignment_0_4.eContents().get(0);
		private final RuleCall cEffectorDSLEffectorIDTerminalRuleCall_0_4_0_1 = (RuleCall)cEffectorDSLEffectorCrossReference_0_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cExecutorKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cExecutorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cExecutorDSLExecutorCrossReference_1_1_0 = (CrossReference)cExecutorAssignment_1_1.eContents().get(0);
		private final RuleCall cExecutorDSLExecutorIDTerminalRuleCall_1_1_0_1 = (RuleCall)cExecutorDSLExecutorCrossReference_1_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_1_2_0 = (RuleCall)cAccessAssignment_1_2.eContents().get(0);
		private final Keyword cPlannerKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cPlannerAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final CrossReference cPlannerDSLPlannerCrossReference_1_4_0 = (CrossReference)cPlannerAssignment_1_4.eContents().get(0);
		private final RuleCall cPlannerDSLPlannerIDTerminalRuleCall_1_4_0_1 = (RuleCall)cPlannerDSLPlannerCrossReference_1_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cExecutorKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cExecutorAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cExecutorDSLExecutorCrossReference_2_1_0 = (CrossReference)cExecutorAssignment_2_1.eContents().get(0);
		private final RuleCall cExecutorDSLExecutorIDTerminalRuleCall_2_1_0_1 = (RuleCall)cExecutorDSLExecutorCrossReference_2_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_2_2_0 = (RuleCall)cAccessAssignment_2_2.eContents().get(0);
		private final Keyword cKnowledgeKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cKnowledgeAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final CrossReference cKnowledgeDSLKnowledgeCrossReference_2_4_0 = (CrossReference)cKnowledgeAssignment_2_4.eContents().get(0);
		private final RuleCall cKnowledgeDSLKnowledgeIDTerminalRuleCall_2_4_0_1 = (RuleCall)cKnowledgeDSLKnowledgeCrossReference_2_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cExecutorKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cExecutorAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cExecutorDSLExecutorCrossReference_3_1_0 = (CrossReference)cExecutorAssignment_3_1.eContents().get(0);
		private final RuleCall cExecutorDSLExecutorIDTerminalRuleCall_3_1_0_1 = (RuleCall)cExecutorDSLExecutorCrossReference_3_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_3_2_0 = (RuleCall)cAccessAssignment_3_2.eContents().get(0);
		private final Keyword cExecutorKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cExecutor2Assignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final CrossReference cExecutor2DSLExecutorCrossReference_3_4_0 = (CrossReference)cExecutor2Assignment_3_4.eContents().get(0);
		private final RuleCall cExecutor2DSLExecutorIDTerminalRuleCall_3_4_0_1 = (RuleCall)cExecutor2DSLExecutorCrossReference_3_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		
		//DSLRuleExecutor:
		//	'executor' executor=[DSLExecutor] access=DSLAccess 'effector' effector=[DSLEffector] ';' | 'executor'
		//	executor=[DSLExecutor] access=DSLAccess 'planner' planner=[DSLPlanner] ';' | 'executor' executor=[DSLExecutor]
		//	access=DSLAccess 'knowledge' knowledge=[DSLKnowledge] ';' | 'executor' executor=[DSLExecutor] access=DSLAccess
		//	'executor' executor2=[DSLExecutor] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'executor' executor=[DSLExecutor] access=DSLAccess 'effector' effector=[DSLEffector] ';' | 'executor'
		//executor=[DSLExecutor] access=DSLAccess 'planner' planner=[DSLPlanner] ';' | 'executor' executor=[DSLExecutor]
		//access=DSLAccess 'knowledge' knowledge=[DSLKnowledge] ';' | 'executor' executor=[DSLExecutor] access=DSLAccess
		//'executor' executor2=[DSLExecutor] ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'executor' executor=[DSLExecutor] access=DSLAccess 'effector' effector=[DSLEffector] ';'
		public Group getGroup_0() { return cGroup_0; }
		
		//'executor'
		public Keyword getExecutorKeyword_0_0() { return cExecutorKeyword_0_0; }
		
		//executor=[DSLExecutor]
		public Assignment getExecutorAssignment_0_1() { return cExecutorAssignment_0_1; }
		
		//[DSLExecutor]
		public CrossReference getExecutorDSLExecutorCrossReference_0_1_0() { return cExecutorDSLExecutorCrossReference_0_1_0; }
		
		//ID
		public RuleCall getExecutorDSLExecutorIDTerminalRuleCall_0_1_0_1() { return cExecutorDSLExecutorIDTerminalRuleCall_0_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_0_2() { return cAccessAssignment_0_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_0_2_0() { return cAccessDSLAccessParserRuleCall_0_2_0; }
		
		//'effector'
		public Keyword getEffectorKeyword_0_3() { return cEffectorKeyword_0_3; }
		
		//effector=[DSLEffector]
		public Assignment getEffectorAssignment_0_4() { return cEffectorAssignment_0_4; }
		
		//[DSLEffector]
		public CrossReference getEffectorDSLEffectorCrossReference_0_4_0() { return cEffectorDSLEffectorCrossReference_0_4_0; }
		
		//ID
		public RuleCall getEffectorDSLEffectorIDTerminalRuleCall_0_4_0_1() { return cEffectorDSLEffectorIDTerminalRuleCall_0_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_0_5() { return cSemicolonKeyword_0_5; }
		
		//'executor' executor=[DSLExecutor] access=DSLAccess 'planner' planner=[DSLPlanner] ';'
		public Group getGroup_1() { return cGroup_1; }
		
		//'executor'
		public Keyword getExecutorKeyword_1_0() { return cExecutorKeyword_1_0; }
		
		//executor=[DSLExecutor]
		public Assignment getExecutorAssignment_1_1() { return cExecutorAssignment_1_1; }
		
		//[DSLExecutor]
		public CrossReference getExecutorDSLExecutorCrossReference_1_1_0() { return cExecutorDSLExecutorCrossReference_1_1_0; }
		
		//ID
		public RuleCall getExecutorDSLExecutorIDTerminalRuleCall_1_1_0_1() { return cExecutorDSLExecutorIDTerminalRuleCall_1_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_1_2() { return cAccessAssignment_1_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_1_2_0() { return cAccessDSLAccessParserRuleCall_1_2_0; }
		
		//'planner'
		public Keyword getPlannerKeyword_1_3() { return cPlannerKeyword_1_3; }
		
		//planner=[DSLPlanner]
		public Assignment getPlannerAssignment_1_4() { return cPlannerAssignment_1_4; }
		
		//[DSLPlanner]
		public CrossReference getPlannerDSLPlannerCrossReference_1_4_0() { return cPlannerDSLPlannerCrossReference_1_4_0; }
		
		//ID
		public RuleCall getPlannerDSLPlannerIDTerminalRuleCall_1_4_0_1() { return cPlannerDSLPlannerIDTerminalRuleCall_1_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_5() { return cSemicolonKeyword_1_5; }
		
		//'executor' executor=[DSLExecutor] access=DSLAccess 'knowledge' knowledge=[DSLKnowledge] ';'
		public Group getGroup_2() { return cGroup_2; }
		
		//'executor'
		public Keyword getExecutorKeyword_2_0() { return cExecutorKeyword_2_0; }
		
		//executor=[DSLExecutor]
		public Assignment getExecutorAssignment_2_1() { return cExecutorAssignment_2_1; }
		
		//[DSLExecutor]
		public CrossReference getExecutorDSLExecutorCrossReference_2_1_0() { return cExecutorDSLExecutorCrossReference_2_1_0; }
		
		//ID
		public RuleCall getExecutorDSLExecutorIDTerminalRuleCall_2_1_0_1() { return cExecutorDSLExecutorIDTerminalRuleCall_2_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_2_2() { return cAccessAssignment_2_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_2_2_0() { return cAccessDSLAccessParserRuleCall_2_2_0; }
		
		//'knowledge'
		public Keyword getKnowledgeKeyword_2_3() { return cKnowledgeKeyword_2_3; }
		
		//knowledge=[DSLKnowledge]
		public Assignment getKnowledgeAssignment_2_4() { return cKnowledgeAssignment_2_4; }
		
		//[DSLKnowledge]
		public CrossReference getKnowledgeDSLKnowledgeCrossReference_2_4_0() { return cKnowledgeDSLKnowledgeCrossReference_2_4_0; }
		
		//ID
		public RuleCall getKnowledgeDSLKnowledgeIDTerminalRuleCall_2_4_0_1() { return cKnowledgeDSLKnowledgeIDTerminalRuleCall_2_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2_5() { return cSemicolonKeyword_2_5; }
		
		//'executor' executor=[DSLExecutor] access=DSLAccess 'executor' executor2=[DSLExecutor] ';'
		public Group getGroup_3() { return cGroup_3; }
		
		//'executor'
		public Keyword getExecutorKeyword_3_0() { return cExecutorKeyword_3_0; }
		
		//executor=[DSLExecutor]
		public Assignment getExecutorAssignment_3_1() { return cExecutorAssignment_3_1; }
		
		//[DSLExecutor]
		public CrossReference getExecutorDSLExecutorCrossReference_3_1_0() { return cExecutorDSLExecutorCrossReference_3_1_0; }
		
		//ID
		public RuleCall getExecutorDSLExecutorIDTerminalRuleCall_3_1_0_1() { return cExecutorDSLExecutorIDTerminalRuleCall_3_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_3_2() { return cAccessAssignment_3_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_3_2_0() { return cAccessDSLAccessParserRuleCall_3_2_0; }
		
		//'executor'
		public Keyword getExecutorKeyword_3_3() { return cExecutorKeyword_3_3; }
		
		//executor2=[DSLExecutor]
		public Assignment getExecutor2Assignment_3_4() { return cExecutor2Assignment_3_4; }
		
		//[DSLExecutor]
		public CrossReference getExecutor2DSLExecutorCrossReference_3_4_0() { return cExecutor2DSLExecutorCrossReference_3_4_0; }
		
		//ID
		public RuleCall getExecutor2DSLExecutorIDTerminalRuleCall_3_4_0_1() { return cExecutor2DSLExecutorIDTerminalRuleCall_3_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3_5() { return cSemicolonKeyword_3_5; }
	}
	public class DSLRuleMOElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLRuleMO");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSensorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSensorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSensorDSLSensorCrossReference_1_0 = (CrossReference)cSensorAssignment_1.eContents().get(0);
		private final RuleCall cSensorDSLSensorIDTerminalRuleCall_1_0_1 = (RuleCall)cSensorDSLSensorCrossReference_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAccessDSLAccessParserRuleCall_2_0 = (RuleCall)cAccessAssignment_2.eContents().get(0);
		private final Keyword cMeasuredOutputKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMeasuredAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cMeasuredDSLMeasuredOutputCrossReference_4_0 = (CrossReference)cMeasuredAssignment_4.eContents().get(0);
		private final RuleCall cMeasuredDSLMeasuredOutputIDTerminalRuleCall_4_0_1 = (RuleCall)cMeasuredDSLMeasuredOutputCrossReference_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DSLRuleMO:
		//	'sensor' sensor=[DSLSensor] access=DSLAccess 'measured-output' measured=[DSLMeasuredOutput] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'sensor' sensor=[DSLSensor] access=DSLAccess 'measured-output' measured=[DSLMeasuredOutput] ';'
		public Group getGroup() { return cGroup; }
		
		//'sensor'
		public Keyword getSensorKeyword_0() { return cSensorKeyword_0; }
		
		//sensor=[DSLSensor]
		public Assignment getSensorAssignment_1() { return cSensorAssignment_1; }
		
		//[DSLSensor]
		public CrossReference getSensorDSLSensorCrossReference_1_0() { return cSensorDSLSensorCrossReference_1_0; }
		
		//ID
		public RuleCall getSensorDSLSensorIDTerminalRuleCall_1_0_1() { return cSensorDSLSensorIDTerminalRuleCall_1_0_1; }
		
		//access=DSLAccess
		public Assignment getAccessAssignment_2() { return cAccessAssignment_2; }
		
		//DSLAccess
		public RuleCall getAccessDSLAccessParserRuleCall_2_0() { return cAccessDSLAccessParserRuleCall_2_0; }
		
		//'measured-output'
		public Keyword getMeasuredOutputKeyword_3() { return cMeasuredOutputKeyword_3; }
		
		//measured=[DSLMeasuredOutput]
		public Assignment getMeasuredAssignment_4() { return cMeasuredAssignment_4; }
		
		//[DSLMeasuredOutput]
		public CrossReference getMeasuredDSLMeasuredOutputCrossReference_4_0() { return cMeasuredDSLMeasuredOutputCrossReference_4_0; }
		
		//ID
		public RuleCall getMeasuredDSLMeasuredOutputIDTerminalRuleCall_4_0_1() { return cMeasuredDSLMeasuredOutputIDTerminalRuleCall_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class DSLAccessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLAccess");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cCanAccessKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cCannotAccessKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//DSLAccess:
		//	'can-access' | 'cannot-access';
		@Override public ParserRule getRule() { return rule; }
		
		//'can-access' | 'cannot-access'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'can-access'
		public Keyword getCanAccessKeyword_0() { return cCanAccessKeyword_0; }
		
		//'cannot-access'
		public Keyword getCannotAccessKeyword_1() { return cCannotAccessKeyword_1; }
	}
	public class DSLManagingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLManaging");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cManagingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cManagerControllerAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cManagerControllerDSLManagerControllerParserRuleCall_3_0 = (RuleCall)cManagerControllerAssignment_3.eContents().get(0);
		private final Assignment cControllerAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cControllerDSLControllerParserRuleCall_4_0 = (RuleCall)cControllerAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DSLManaging:
		//	'Managing' name=ID '{'
		//	managerController+=DSLManagerController*
		//	controller+=DSLController*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Managing' name=ID '{' managerController+=DSLManagerController* controller+=DSLController* '}'
		public Group getGroup() { return cGroup; }
		
		//'Managing'
		public Keyword getManagingKeyword_0() { return cManagingKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//managerController+=DSLManagerController*
		public Assignment getManagerControllerAssignment_3() { return cManagerControllerAssignment_3; }
		
		//DSLManagerController
		public RuleCall getManagerControllerDSLManagerControllerParserRuleCall_3_0() { return cManagerControllerDSLManagerControllerParserRuleCall_3_0; }
		
		//controller+=DSLController*
		public Assignment getControllerAssignment_4() { return cControllerAssignment_4; }
		
		//DSLController
		public RuleCall getControllerDSLControllerParserRuleCall_4_0() { return cControllerDSLControllerParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DSLManagedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLManaged");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cManagedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSensorAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSensorDSLSensorParserRuleCall_3_0 = (RuleCall)cSensorAssignment_3.eContents().get(0);
		private final Assignment cEffectorAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEffectorDSLEffectorParserRuleCall_4_0 = (RuleCall)cEffectorAssignment_4.eContents().get(0);
		private final Assignment cMeasuredOutputAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cMeasuredOutputDSLMeasuredOutputParserRuleCall_5_0 = (RuleCall)cMeasuredOutputAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//DSLManaged:
		//	'Managed' name=ID '{'
		//	sensor+=DSLSensor+
		//	effector+=DSLEffector+
		//	measuredOutput+=DSLMeasuredOutput+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Managed' name=ID '{' sensor+=DSLSensor+ effector+=DSLEffector+ measuredOutput+=DSLMeasuredOutput+ '}'
		public Group getGroup() { return cGroup; }
		
		//'Managed'
		public Keyword getManagedKeyword_0() { return cManagedKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//sensor+=DSLSensor+
		public Assignment getSensorAssignment_3() { return cSensorAssignment_3; }
		
		//DSLSensor
		public RuleCall getSensorDSLSensorParserRuleCall_3_0() { return cSensorDSLSensorParserRuleCall_3_0; }
		
		//effector+=DSLEffector+
		public Assignment getEffectorAssignment_4() { return cEffectorAssignment_4; }
		
		//DSLEffector
		public RuleCall getEffectorDSLEffectorParserRuleCall_4_0() { return cEffectorDSLEffectorParserRuleCall_4_0; }
		
		//measuredOutput+=DSLMeasuredOutput+
		public Assignment getMeasuredOutputAssignment_5() { return cMeasuredOutputAssignment_5; }
		
		//DSLMeasuredOutput
		public RuleCall getMeasuredOutputDSLMeasuredOutputParserRuleCall_5_0() { return cMeasuredOutputDSLMeasuredOutputParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class DSLManagerControllerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLManagerController");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cManagerControllerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cTypeOfKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cDSLTypeMCParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cControllerAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cControllerDSLControllerParserRuleCall_5_0 = (RuleCall)cControllerAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//DSLManagerController:
		//	'ManagerController' name=ID 'typeOf' DSLTypeMC '{'
		//	controller+=DSLController+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ManagerController' name=ID 'typeOf' DSLTypeMC '{' controller+=DSLController+ '}'
		public Group getGroup() { return cGroup; }
		
		//'ManagerController'
		public Keyword getManagerControllerKeyword_0() { return cManagerControllerKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'typeOf'
		public Keyword getTypeOfKeyword_2() { return cTypeOfKeyword_2; }
		
		//DSLTypeMC
		public RuleCall getDSLTypeMCParserRuleCall_3() { return cDSLTypeMCParserRuleCall_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//controller+=DSLController+
		public Assignment getControllerAssignment_5() { return cControllerAssignment_5; }
		
		//DSLController
		public RuleCall getControllerDSLControllerParserRuleCall_5_0() { return cControllerDSLControllerParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class DSLTypeMCElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLTypeMC");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSynchronizedKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cCoordinatedKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cIndependentKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//DSLTypeMC:
		//	'Synchronized' | 'Coordinated' | 'Independent';
		@Override public ParserRule getRule() { return rule; }
		
		//'Synchronized' | 'Coordinated' | 'Independent'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Synchronized'
		public Keyword getSynchronizedKeyword_0() { return cSynchronizedKeyword_0; }
		
		//'Coordinated'
		public Keyword getCoordinatedKeyword_1() { return cCoordinatedKeyword_1; }
		
		//'Independent'
		public Keyword getIndependentKeyword_2() { return cIndependentKeyword_2; }
	}
	public class DSLControllerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLController");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cControllerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMonitorAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMonitorDSLMonitorParserRuleCall_3_0 = (RuleCall)cMonitorAssignment_3.eContents().get(0);
		private final Assignment cAnalyzerAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAnalyzerDSLAnalyzerParserRuleCall_4_0 = (RuleCall)cAnalyzerAssignment_4.eContents().get(0);
		private final Assignment cPlannerAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPlannerDSLPlannerParserRuleCall_5_0 = (RuleCall)cPlannerAssignment_5.eContents().get(0);
		private final Assignment cExecutorAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cExecutorDSLExecutorParserRuleCall_6_0 = (RuleCall)cExecutorAssignment_6.eContents().get(0);
		private final Assignment cKnowledgeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cKnowledgeDSLKnowledgeParserRuleCall_7_0 = (RuleCall)cKnowledgeAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//DSLController:
		//	'Controller' name=ID '{'
		//	monitor+=DSLMonitor+
		//	analyzer+=DSLAnalyzer+
		//	planner+=DSLPlanner+
		//	executor+=DSLExecutor+
		//	knowledge+=DSLKnowledge+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Controller' name=ID '{' monitor+=DSLMonitor+ analyzer+=DSLAnalyzer+ planner+=DSLPlanner+ executor+=DSLExecutor+
		//knowledge+=DSLKnowledge+ '}'
		public Group getGroup() { return cGroup; }
		
		//'Controller'
		public Keyword getControllerKeyword_0() { return cControllerKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//monitor+=DSLMonitor+
		public Assignment getMonitorAssignment_3() { return cMonitorAssignment_3; }
		
		//DSLMonitor
		public RuleCall getMonitorDSLMonitorParserRuleCall_3_0() { return cMonitorDSLMonitorParserRuleCall_3_0; }
		
		//analyzer+=DSLAnalyzer+
		public Assignment getAnalyzerAssignment_4() { return cAnalyzerAssignment_4; }
		
		//DSLAnalyzer
		public RuleCall getAnalyzerDSLAnalyzerParserRuleCall_4_0() { return cAnalyzerDSLAnalyzerParserRuleCall_4_0; }
		
		//planner+=DSLPlanner+
		public Assignment getPlannerAssignment_5() { return cPlannerAssignment_5; }
		
		//DSLPlanner
		public RuleCall getPlannerDSLPlannerParserRuleCall_5_0() { return cPlannerDSLPlannerParserRuleCall_5_0; }
		
		//executor+=DSLExecutor+
		public Assignment getExecutorAssignment_6() { return cExecutorAssignment_6; }
		
		//DSLExecutor
		public RuleCall getExecutorDSLExecutorParserRuleCall_6_0() { return cExecutorDSLExecutorParserRuleCall_6_0; }
		
		//knowledge+=DSLKnowledge+
		public Assignment getKnowledgeAssignment_7() { return cKnowledgeAssignment_7; }
		
		//DSLKnowledge
		public RuleCall getKnowledgeDSLKnowledgeParserRuleCall_7_0() { return cKnowledgeDSLKnowledgeParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class DSLMonitorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLMonitor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMonitorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DSLMonitor:
		//	'Monitor' name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Monitor' name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'Monitor'
		public Keyword getMonitorKeyword_0() { return cMonitorKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class DSLAnalyzerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLAnalyzer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnalyzerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DSLAnalyzer:
		//	'Analyzer' name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Analyzer' name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'Analyzer'
		public Keyword getAnalyzerKeyword_0() { return cAnalyzerKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class DSLPlannerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLPlanner");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPlannerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DSLPlanner:
		//	'Planner' name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Planner' name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'Planner'
		public Keyword getPlannerKeyword_0() { return cPlannerKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class DSLExecutorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLExecutor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExecutorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DSLExecutor:
		//	'Executor' name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Executor' name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'Executor'
		public Keyword getExecutorKeyword_0() { return cExecutorKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class DSLKnowledgeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLKnowledge");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cKnowledgeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cReferenceInputAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cReferenceInputDSLReferenceInputParserRuleCall_3_0 = (RuleCall)cReferenceInputAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//DSLKnowledge:
		//	'Knowledge' name=ID '{'
		//	referenceInput+=DSLReferenceInput+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Knowledge' name=ID '{' referenceInput+=DSLReferenceInput+ '}'
		public Group getGroup() { return cGroup; }
		
		//'Knowledge'
		public Keyword getKnowledgeKeyword_0() { return cKnowledgeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//referenceInput+=DSLReferenceInput+
		public Assignment getReferenceInputAssignment_3() { return cReferenceInputAssignment_3; }
		
		//DSLReferenceInput
		public RuleCall getReferenceInputDSLReferenceInputParserRuleCall_3_0() { return cReferenceInputDSLReferenceInputParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class DSLSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSensorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DSLSensor:
		//	'Sensor' name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Sensor' name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'Sensor'
		public Keyword getSensorKeyword_0() { return cSensorKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class DSLEffectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLEffector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEffectorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DSLEffector:
		//	'Effector' name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Effector' name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'Effector'
		public Keyword getEffectorKeyword_0() { return cEffectorKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class DSLReferenceInputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLReferenceInput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReferenceInputKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DSLReferenceInput:
		//	'ReferenceInput' name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'ReferenceInput' name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'ReferenceInput'
		public Keyword getReferenceInputKeyword_0() { return cReferenceInputKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class DSLMeasuredOutputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLMeasuredOutput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMeasuredOutputKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DSLMeasuredOutput:
		//	'MeasuredOutput' name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'MeasuredOutput' name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'MeasuredOutput'
		public Keyword getMeasuredOutputKeyword_0() { return cMeasuredOutputKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	
	
	private final ArchitectureDefinitionElements pArchitectureDefinition;
	private final DSLRulesElements pDSLRules;
	private final DSLRuleMControllerElements pDSLRuleMController;
	private final DSLRuleControllerElements pDSLRuleController;
	private final DSLRuleMonitorElements pDSLRuleMonitor;
	private final DSLRuleAnalyzerElements pDSLRuleAnalyzer;
	private final DSLRulePlannerElements pDSLRulePlanner;
	private final DSLRuleExecutorElements pDSLRuleExecutor;
	private final DSLRuleMOElements pDSLRuleMO;
	private final DSLAccessElements pDSLAccess;
	private final DSLManagingElements pDSLManaging;
	private final DSLManagedElements pDSLManaged;
	private final DSLManagerControllerElements pDSLManagerController;
	private final DSLTypeMCElements pDSLTypeMC;
	private final DSLControllerElements pDSLController;
	private final DSLMonitorElements pDSLMonitor;
	private final DSLAnalyzerElements pDSLAnalyzer;
	private final DSLPlannerElements pDSLPlanner;
	private final DSLExecutorElements pDSLExecutor;
	private final DSLKnowledgeElements pDSLKnowledge;
	private final DSLSensorElements pDSLSensor;
	private final DSLEffectorElements pDSLEffector;
	private final DSLReferenceInputElements pDSLReferenceInput;
	private final DSLMeasuredOutputElements pDSLMeasuredOutput;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public SasDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pArchitectureDefinition = new ArchitectureDefinitionElements();
		this.pDSLRules = new DSLRulesElements();
		this.pDSLRuleMController = new DSLRuleMControllerElements();
		this.pDSLRuleController = new DSLRuleControllerElements();
		this.pDSLRuleMonitor = new DSLRuleMonitorElements();
		this.pDSLRuleAnalyzer = new DSLRuleAnalyzerElements();
		this.pDSLRulePlanner = new DSLRulePlannerElements();
		this.pDSLRuleExecutor = new DSLRuleExecutorElements();
		this.pDSLRuleMO = new DSLRuleMOElements();
		this.pDSLAccess = new DSLAccessElements();
		this.pDSLManaging = new DSLManagingElements();
		this.pDSLManaged = new DSLManagedElements();
		this.pDSLManagerController = new DSLManagerControllerElements();
		this.pDSLTypeMC = new DSLTypeMCElements();
		this.pDSLController = new DSLControllerElements();
		this.pDSLMonitor = new DSLMonitorElements();
		this.pDSLAnalyzer = new DSLAnalyzerElements();
		this.pDSLPlanner = new DSLPlannerElements();
		this.pDSLExecutor = new DSLExecutorElements();
		this.pDSLKnowledge = new DSLKnowledgeElements();
		this.pDSLSensor = new DSLSensorElements();
		this.pDSLEffector = new DSLEffectorElements();
		this.pDSLReferenceInput = new DSLReferenceInputElements();
		this.pDSLMeasuredOutput = new DSLMeasuredOutputElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("br.ufscar.sas.xtext.sasdsl.SasDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ArchitectureDefinition:
	//	'Architecture' name=ID '{'
	//	managing+=DSLManaging+
	//	managed+=DSLManaged+
	//	'}'
	//	'Rules' '{' rules+=DSLRules* '}';
	public ArchitectureDefinitionElements getArchitectureDefinitionAccess() {
		return pArchitectureDefinition;
	}
	
	public ParserRule getArchitectureDefinitionRule() {
		return getArchitectureDefinitionAccess().getRule();
	}
	
	//DSLRules:
	//	DSLRuleController | DSLRuleMonitor | DSLRuleAnalyzer | DSLRulePlanner | DSLRuleExecutor | DSLRuleMO |
	//	DSLRuleMController;
	public DSLRulesElements getDSLRulesAccess() {
		return pDSLRules;
	}
	
	public ParserRule getDSLRulesRule() {
		return getDSLRulesAccess().getRule();
	}
	
	//DSLRuleMController:
	//	'mcontroller' mcontroller1=[DSLManagerController] access=DSLAccess 'mcontroller' mcontroller2=[DSLManagerController]
	//	';';
	public DSLRuleMControllerElements getDSLRuleMControllerAccess() {
		return pDSLRuleMController;
	}
	
	public ParserRule getDSLRuleMControllerRule() {
		return getDSLRuleMControllerAccess().getRule();
	}
	
	//DSLRuleController:
	//	'controller' controller1=[DSLController] access=DSLAccess 'controller' controller2=[DSLController] ';';
	public DSLRuleControllerElements getDSLRuleControllerAccess() {
		return pDSLRuleController;
	}
	
	public ParserRule getDSLRuleControllerRule() {
		return getDSLRuleControllerAccess().getRule();
	}
	
	//DSLRuleMonitor:
	//	'monitor' monitor=[DSLMonitor] access=DSLAccess 'sensor' sensor=[DSLSensor] ';' | 'monitor' monitor=[DSLMonitor]
	//	access=DSLAccess 'knowledge' knowledge=[DSLKnowledge] ';' | 'monitor' monitor=[DSLMonitor] access=DSLAccess 'analyzer'
	//	analyzer=[DSLAnalyzer] ';' | 'monitor' monitor=[DSLMonitor] access=DSLAccess 'monitor' monitor2=[DSLMonitor] ';';
	public DSLRuleMonitorElements getDSLRuleMonitorAccess() {
		return pDSLRuleMonitor;
	}
	
	public ParserRule getDSLRuleMonitorRule() {
		return getDSLRuleMonitorAccess().getRule();
	}
	
	//DSLRuleAnalyzer:
	//	'analyzer' analyzer=[DSLAnalyzer] access=DSLAccess 'knowledge' knowledge=[DSLKnowledge] ';' | 'analyzer'
	//	analyzer=[DSLAnalyzer] access=DSLAccess 'monitor' monitor=[DSLMonitor] ';' | 'analyzer' analyzer=[DSLAnalyzer]
	//	access=DSLAccess 'planner' planner=[DSLPlanner] ';' | 'analyzer' analyzer=[DSLAnalyzer] access=DSLAccess
	//	'reference-input' rreference=[DSLReferenceInput] ';' | 'analyzer' analyzer=[DSLAnalyzer] access=DSLAccess 'analyzer'
	//	analyzer2=[DSLAnalyzer] ';';
	public DSLRuleAnalyzerElements getDSLRuleAnalyzerAccess() {
		return pDSLRuleAnalyzer;
	}
	
	public ParserRule getDSLRuleAnalyzerRule() {
		return getDSLRuleAnalyzerAccess().getRule();
	}
	
	//DSLRulePlanner:
	//	'planner' planner=[DSLPlanner] access=DSLAccess 'knowledge' knowledge=[DSLKnowledge] ';' | 'planner'
	//	planner=[DSLPlanner] access=DSLAccess 'analyzer' analyzer=[DSLAnalyzer] ';' | 'planner' planner=[DSLPlanner]
	//	access=DSLAccess 'executor' executor=[DSLExecutor] ';' | 'planner' planner=[DSLPlanner] access=DSLAccess 'planner'
	//	planner2=[DSLPlanner] ';';
	public DSLRulePlannerElements getDSLRulePlannerAccess() {
		return pDSLRulePlanner;
	}
	
	public ParserRule getDSLRulePlannerRule() {
		return getDSLRulePlannerAccess().getRule();
	}
	
	//DSLRuleExecutor:
	//	'executor' executor=[DSLExecutor] access=DSLAccess 'effector' effector=[DSLEffector] ';' | 'executor'
	//	executor=[DSLExecutor] access=DSLAccess 'planner' planner=[DSLPlanner] ';' | 'executor' executor=[DSLExecutor]
	//	access=DSLAccess 'knowledge' knowledge=[DSLKnowledge] ';' | 'executor' executor=[DSLExecutor] access=DSLAccess
	//	'executor' executor2=[DSLExecutor] ';';
	public DSLRuleExecutorElements getDSLRuleExecutorAccess() {
		return pDSLRuleExecutor;
	}
	
	public ParserRule getDSLRuleExecutorRule() {
		return getDSLRuleExecutorAccess().getRule();
	}
	
	//DSLRuleMO:
	//	'sensor' sensor=[DSLSensor] access=DSLAccess 'measured-output' measured=[DSLMeasuredOutput] ';';
	public DSLRuleMOElements getDSLRuleMOAccess() {
		return pDSLRuleMO;
	}
	
	public ParserRule getDSLRuleMORule() {
		return getDSLRuleMOAccess().getRule();
	}
	
	//DSLAccess:
	//	'can-access' | 'cannot-access';
	public DSLAccessElements getDSLAccessAccess() {
		return pDSLAccess;
	}
	
	public ParserRule getDSLAccessRule() {
		return getDSLAccessAccess().getRule();
	}
	
	//DSLManaging:
	//	'Managing' name=ID '{'
	//	managerController+=DSLManagerController*
	//	controller+=DSLController*
	//	'}';
	public DSLManagingElements getDSLManagingAccess() {
		return pDSLManaging;
	}
	
	public ParserRule getDSLManagingRule() {
		return getDSLManagingAccess().getRule();
	}
	
	//DSLManaged:
	//	'Managed' name=ID '{'
	//	sensor+=DSLSensor+
	//	effector+=DSLEffector+
	//	measuredOutput+=DSLMeasuredOutput+
	//	'}';
	public DSLManagedElements getDSLManagedAccess() {
		return pDSLManaged;
	}
	
	public ParserRule getDSLManagedRule() {
		return getDSLManagedAccess().getRule();
	}
	
	//DSLManagerController:
	//	'ManagerController' name=ID 'typeOf' DSLTypeMC '{'
	//	controller+=DSLController+
	//	'}';
	public DSLManagerControllerElements getDSLManagerControllerAccess() {
		return pDSLManagerController;
	}
	
	public ParserRule getDSLManagerControllerRule() {
		return getDSLManagerControllerAccess().getRule();
	}
	
	//DSLTypeMC:
	//	'Synchronized' | 'Coordinated' | 'Independent';
	public DSLTypeMCElements getDSLTypeMCAccess() {
		return pDSLTypeMC;
	}
	
	public ParserRule getDSLTypeMCRule() {
		return getDSLTypeMCAccess().getRule();
	}
	
	//DSLController:
	//	'Controller' name=ID '{'
	//	monitor+=DSLMonitor+
	//	analyzer+=DSLAnalyzer+
	//	planner+=DSLPlanner+
	//	executor+=DSLExecutor+
	//	knowledge+=DSLKnowledge+
	//	'}';
	public DSLControllerElements getDSLControllerAccess() {
		return pDSLController;
	}
	
	public ParserRule getDSLControllerRule() {
		return getDSLControllerAccess().getRule();
	}
	
	//DSLMonitor:
	//	'Monitor' name=ID ';';
	public DSLMonitorElements getDSLMonitorAccess() {
		return pDSLMonitor;
	}
	
	public ParserRule getDSLMonitorRule() {
		return getDSLMonitorAccess().getRule();
	}
	
	//DSLAnalyzer:
	//	'Analyzer' name=ID ';';
	public DSLAnalyzerElements getDSLAnalyzerAccess() {
		return pDSLAnalyzer;
	}
	
	public ParserRule getDSLAnalyzerRule() {
		return getDSLAnalyzerAccess().getRule();
	}
	
	//DSLPlanner:
	//	'Planner' name=ID ';';
	public DSLPlannerElements getDSLPlannerAccess() {
		return pDSLPlanner;
	}
	
	public ParserRule getDSLPlannerRule() {
		return getDSLPlannerAccess().getRule();
	}
	
	//DSLExecutor:
	//	'Executor' name=ID ';';
	public DSLExecutorElements getDSLExecutorAccess() {
		return pDSLExecutor;
	}
	
	public ParserRule getDSLExecutorRule() {
		return getDSLExecutorAccess().getRule();
	}
	
	//DSLKnowledge:
	//	'Knowledge' name=ID '{'
	//	referenceInput+=DSLReferenceInput+
	//	'}';
	public DSLKnowledgeElements getDSLKnowledgeAccess() {
		return pDSLKnowledge;
	}
	
	public ParserRule getDSLKnowledgeRule() {
		return getDSLKnowledgeAccess().getRule();
	}
	
	//DSLSensor:
	//	'Sensor' name=ID ';';
	public DSLSensorElements getDSLSensorAccess() {
		return pDSLSensor;
	}
	
	public ParserRule getDSLSensorRule() {
		return getDSLSensorAccess().getRule();
	}
	
	//DSLEffector:
	//	'Effector' name=ID ';';
	public DSLEffectorElements getDSLEffectorAccess() {
		return pDSLEffector;
	}
	
	public ParserRule getDSLEffectorRule() {
		return getDSLEffectorAccess().getRule();
	}
	
	//DSLReferenceInput:
	//	'ReferenceInput' name=ID ';';
	public DSLReferenceInputElements getDSLReferenceInputAccess() {
		return pDSLReferenceInput;
	}
	
	public ParserRule getDSLReferenceInputRule() {
		return getDSLReferenceInputAccess().getRule();
	}
	
	//DSLMeasuredOutput:
	//	'MeasuredOutput' name=ID ';';
	public DSLMeasuredOutputElements getDSLMeasuredOutputAccess() {
		return pDSLMeasuredOutput;
	}
	
	public ParserRule getDSLMeasuredOutputRule() {
		return getDSLMeasuredOutputAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
