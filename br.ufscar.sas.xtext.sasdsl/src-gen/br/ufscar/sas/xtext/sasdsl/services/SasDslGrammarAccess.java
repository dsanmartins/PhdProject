/*
 * generated by Xtext 2.21.0
 */
package br.ufscar.sas.xtext.sasdsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class SasDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ArchitectureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.ArchitectureDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cArchitectureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cManagingAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cManagingDSLManagingParserRuleCall_3_0 = (RuleCall)cManagingAssignment_3.eContents().get(0);
		private final Assignment cManagedAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cManagedDSLManagedParserRuleCall_4_0 = (RuleCall)cManagedAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRulesKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cRulesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cRulesDSLRulesParserRuleCall_8_0 = (RuleCall)cRulesAssignment_8.eContents().get(0);
		private final Assignment cDCDeclAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cDCDeclDCDeclParserRuleCall_9_0 = (RuleCall)cDCDeclAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//ArchitectureDefinition:
		//	'Architecture' name=ID '{'
		//	managing+=DSLManaging+
		//	managed+=DSLManaged+
		//	'}'
		//	'Rules' '{'
		//	rules+=DSLRules*
		//	dCDecl+=DCDecl*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Architecture' name=ID '{' managing+=DSLManaging+ managed+=DSLManaged+ '}' 'Rules' '{' rules+=DSLRules* dCDecl+=DCDecl*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Architecture'
		public Keyword getArchitectureKeyword_0() { return cArchitectureKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//managing+=DSLManaging+
		public Assignment getManagingAssignment_3() { return cManagingAssignment_3; }
		
		//DSLManaging
		public RuleCall getManagingDSLManagingParserRuleCall_3_0() { return cManagingDSLManagingParserRuleCall_3_0; }
		
		//managed+=DSLManaged+
		public Assignment getManagedAssignment_4() { return cManagedAssignment_4; }
		
		//DSLManaged
		public RuleCall getManagedDSLManagedParserRuleCall_4_0() { return cManagedDSLManagedParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
		
		//'Rules'
		public Keyword getRulesKeyword_6() { return cRulesKeyword_6; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//rules+=DSLRules*
		public Assignment getRulesAssignment_8() { return cRulesAssignment_8; }
		
		//DSLRules
		public RuleCall getRulesDSLRulesParserRuleCall_8_0() { return cRulesDSLRulesParserRuleCall_8_0; }
		
		//dCDecl+=DCDecl*
		public Assignment getDCDeclAssignment_9() { return cDCDeclAssignment_9; }
		
		//DCDecl
		public RuleCall getDCDeclDCDeclParserRuleCall_9_0() { return cDCDeclDCDeclParserRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class DSLRulesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLRules");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDSLRuleControllerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDSLRuleMonitorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDSLRuleAnalyzerParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDSLRulePlannerParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cDSLRuleExecutorParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cDSLRuleMOParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cDSLRuleMControllerParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cDSLRuleKnowledgeParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cDSLRuleGenericParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		
		//DSLRules:
		//	DSLRuleController | DSLRuleMonitor | DSLRuleAnalyzer | DSLRulePlanner | DSLRuleExecutor | DSLRuleMO |
		//	DSLRuleMController | DSLRuleKnowledge | DSLRuleGeneric;
		@Override public ParserRule getRule() { return rule; }
		
		//DSLRuleController | DSLRuleMonitor | DSLRuleAnalyzer | DSLRulePlanner | DSLRuleExecutor | DSLRuleMO | DSLRuleMController
		//| DSLRuleKnowledge | DSLRuleGeneric
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DSLRuleController
		public RuleCall getDSLRuleControllerParserRuleCall_0() { return cDSLRuleControllerParserRuleCall_0; }
		
		//DSLRuleMonitor
		public RuleCall getDSLRuleMonitorParserRuleCall_1() { return cDSLRuleMonitorParserRuleCall_1; }
		
		//DSLRuleAnalyzer
		public RuleCall getDSLRuleAnalyzerParserRuleCall_2() { return cDSLRuleAnalyzerParserRuleCall_2; }
		
		//DSLRulePlanner
		public RuleCall getDSLRulePlannerParserRuleCall_3() { return cDSLRulePlannerParserRuleCall_3; }
		
		//DSLRuleExecutor
		public RuleCall getDSLRuleExecutorParserRuleCall_4() { return cDSLRuleExecutorParserRuleCall_4; }
		
		//DSLRuleMO
		public RuleCall getDSLRuleMOParserRuleCall_5() { return cDSLRuleMOParserRuleCall_5; }
		
		//DSLRuleMController
		public RuleCall getDSLRuleMControllerParserRuleCall_6() { return cDSLRuleMControllerParserRuleCall_6; }
		
		//DSLRuleKnowledge
		public RuleCall getDSLRuleKnowledgeParserRuleCall_7() { return cDSLRuleKnowledgeParserRuleCall_7; }
		
		//DSLRuleGeneric
		public RuleCall getDSLRuleGenericParserRuleCall_8() { return cDSLRuleGenericParserRuleCall_8; }
	}
	public class DSLRuleMControllerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLRuleMController");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLoopManagerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMcontroller1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cMcontroller1DSLManagerControllerCrossReference_1_0 = (CrossReference)cMcontroller1Assignment_1.eContents().get(0);
		private final RuleCall cMcontroller1DSLManagerControllerIDTerminalRuleCall_1_0_1 = (RuleCall)cMcontroller1DSLManagerControllerCrossReference_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cAccessAlternatives_2_0 = (Alternatives)cAccessAssignment_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_2_0_0 = (Keyword)cAccessAlternatives_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_2_0_1 = (Keyword)cAccessAlternatives_2_0.eContents().get(1);
		private final Keyword cLoopManagerKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMcontroller2Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cMcontroller2DSLManagerControllerCrossReference_4_0 = (CrossReference)cMcontroller2Assignment_4.eContents().get(0);
		private final RuleCall cMcontroller2DSLManagerControllerIDTerminalRuleCall_4_0_1 = (RuleCall)cMcontroller2DSLManagerControllerCrossReference_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DSLRuleMController:
		//	'loopManager' mcontroller1=[DSLManagerController] access=('must-use' | 'must-not-use') 'loopManager'
		//	mcontroller2=[DSLManagerController] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'loopManager' mcontroller1=[DSLManagerController] access=('must-use' | 'must-not-use') 'loopManager'
		//mcontroller2=[DSLManagerController] ';'
		public Group getGroup() { return cGroup; }
		
		//'loopManager'
		public Keyword getLoopManagerKeyword_0() { return cLoopManagerKeyword_0; }
		
		//mcontroller1=[DSLManagerController]
		public Assignment getMcontroller1Assignment_1() { return cMcontroller1Assignment_1; }
		
		//[DSLManagerController]
		public CrossReference getMcontroller1DSLManagerControllerCrossReference_1_0() { return cMcontroller1DSLManagerControllerCrossReference_1_0; }
		
		//ID
		public RuleCall getMcontroller1DSLManagerControllerIDTerminalRuleCall_1_0_1() { return cMcontroller1DSLManagerControllerIDTerminalRuleCall_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_2() { return cAccessAssignment_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_2_0() { return cAccessAlternatives_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_2_0_0() { return cAccessMustUseKeyword_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_2_0_1() { return cAccessMustNotUseKeyword_2_0_1; }
		
		//'loopManager'
		public Keyword getLoopManagerKeyword_3() { return cLoopManagerKeyword_3; }
		
		//mcontroller2=[DSLManagerController]
		public Assignment getMcontroller2Assignment_4() { return cMcontroller2Assignment_4; }
		
		//[DSLManagerController]
		public CrossReference getMcontroller2DSLManagerControllerCrossReference_4_0() { return cMcontroller2DSLManagerControllerCrossReference_4_0; }
		
		//ID
		public RuleCall getMcontroller2DSLManagerControllerIDTerminalRuleCall_4_0_1() { return cMcontroller2DSLManagerControllerIDTerminalRuleCall_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class DSLRuleControllerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLRuleController");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLoopKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cController1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cController1DSLControllerCrossReference_1_0 = (CrossReference)cController1Assignment_1.eContents().get(0);
		private final RuleCall cController1DSLControllerIDTerminalRuleCall_1_0_1 = (RuleCall)cController1DSLControllerCrossReference_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cAccessAlternatives_2_0 = (Alternatives)cAccessAssignment_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_2_0_0 = (Keyword)cAccessAlternatives_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_2_0_1 = (Keyword)cAccessAlternatives_2_0.eContents().get(1);
		private final Keyword cLoopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cController2Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cController2DSLControllerCrossReference_4_0 = (CrossReference)cController2Assignment_4.eContents().get(0);
		private final RuleCall cController2DSLControllerIDTerminalRuleCall_4_0_1 = (RuleCall)cController2DSLControllerCrossReference_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DSLRuleController:
		//	'loop' controller1=[DSLController] access=('must-use' | 'must-not-use') 'loop' controller2=[DSLController] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'loop' controller1=[DSLController] access=('must-use' | 'must-not-use') 'loop' controller2=[DSLController] ';'
		public Group getGroup() { return cGroup; }
		
		//'loop'
		public Keyword getLoopKeyword_0() { return cLoopKeyword_0; }
		
		//controller1=[DSLController]
		public Assignment getController1Assignment_1() { return cController1Assignment_1; }
		
		//[DSLController]
		public CrossReference getController1DSLControllerCrossReference_1_0() { return cController1DSLControllerCrossReference_1_0; }
		
		//ID
		public RuleCall getController1DSLControllerIDTerminalRuleCall_1_0_1() { return cController1DSLControllerIDTerminalRuleCall_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_2() { return cAccessAssignment_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_2_0() { return cAccessAlternatives_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_2_0_0() { return cAccessMustUseKeyword_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_2_0_1() { return cAccessMustNotUseKeyword_2_0_1; }
		
		//'loop'
		public Keyword getLoopKeyword_3() { return cLoopKeyword_3; }
		
		//controller2=[DSLController]
		public Assignment getController2Assignment_4() { return cController2Assignment_4; }
		
		//[DSLController]
		public CrossReference getController2DSLControllerCrossReference_4_0() { return cController2DSLControllerCrossReference_4_0; }
		
		//ID
		public RuleCall getController2DSLControllerIDTerminalRuleCall_4_0_1() { return cController2DSLControllerIDTerminalRuleCall_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class DSLRuleMonitorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLRuleMonitor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cMonitorKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cMonitorAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cMonitorDSLMonitorCrossReference_0_1_0 = (CrossReference)cMonitorAssignment_0_1.eContents().get(0);
		private final RuleCall cMonitorDSLMonitorIDTerminalRuleCall_0_1_0_1 = (RuleCall)cMonitorDSLMonitorCrossReference_0_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final Alternatives cAccessAlternatives_0_2_0 = (Alternatives)cAccessAssignment_0_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_0_2_0_0 = (Keyword)cAccessAlternatives_0_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_0_2_0_1 = (Keyword)cAccessAlternatives_0_2_0.eContents().get(1);
		private final Keyword cMonitorKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cMonitor2Assignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final CrossReference cMonitor2DSLMonitorCrossReference_0_4_0 = (CrossReference)cMonitor2Assignment_0_4.eContents().get(0);
		private final RuleCall cMonitor2DSLMonitorIDTerminalRuleCall_0_4_0_1 = (RuleCall)cMonitor2DSLMonitorCrossReference_0_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cMonitorKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cMonitorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cMonitorDSLMonitorCrossReference_1_1_0 = (CrossReference)cMonitorAssignment_1_1.eContents().get(0);
		private final RuleCall cMonitorDSLMonitorIDTerminalRuleCall_1_1_0_1 = (RuleCall)cMonitorDSLMonitorCrossReference_1_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final Alternatives cAccessAlternatives_1_2_0 = (Alternatives)cAccessAssignment_1_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_1_2_0_0 = (Keyword)cAccessAlternatives_1_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_1_2_0_1 = (Keyword)cAccessAlternatives_1_2_0.eContents().get(1);
		private final Keyword cAnalyzerKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cAnalyzerAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final CrossReference cAnalyzerDSLAnalyzerCrossReference_1_4_0 = (CrossReference)cAnalyzerAssignment_1_4.eContents().get(0);
		private final RuleCall cAnalyzerDSLAnalyzerIDTerminalRuleCall_1_4_0_1 = (RuleCall)cAnalyzerDSLAnalyzerCrossReference_1_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cMonitorKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cMonitorAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cMonitorDSLMonitorCrossReference_2_1_0 = (CrossReference)cMonitorAssignment_2_1.eContents().get(0);
		private final RuleCall cMonitorDSLMonitorIDTerminalRuleCall_2_1_0_1 = (RuleCall)cMonitorDSLMonitorCrossReference_2_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final Alternatives cAccessAlternatives_2_2_0 = (Alternatives)cAccessAssignment_2_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_2_2_0_0 = (Keyword)cAccessAlternatives_2_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_2_2_0_1 = (Keyword)cAccessAlternatives_2_2_0.eContents().get(1);
		private final Keyword cPlannerKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cPlannerAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final CrossReference cPlannerDSLPlannerCrossReference_2_4_0 = (CrossReference)cPlannerAssignment_2_4.eContents().get(0);
		private final RuleCall cPlannerDSLPlannerIDTerminalRuleCall_2_4_0_1 = (RuleCall)cPlannerDSLPlannerCrossReference_2_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cMonitorKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMonitorAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cMonitorDSLMonitorCrossReference_3_1_0 = (CrossReference)cMonitorAssignment_3_1.eContents().get(0);
		private final RuleCall cMonitorDSLMonitorIDTerminalRuleCall_3_1_0_1 = (RuleCall)cMonitorDSLMonitorCrossReference_3_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final Alternatives cAccessAlternatives_3_2_0 = (Alternatives)cAccessAssignment_3_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_3_2_0_0 = (Keyword)cAccessAlternatives_3_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_3_2_0_1 = (Keyword)cAccessAlternatives_3_2_0.eContents().get(1);
		private final Keyword cExecutorKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cExecutorAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final CrossReference cExecutorDSLExecutorCrossReference_3_4_0 = (CrossReference)cExecutorAssignment_3_4.eContents().get(0);
		private final RuleCall cExecutorDSLExecutorIDTerminalRuleCall_3_4_0_1 = (RuleCall)cExecutorDSLExecutorCrossReference_3_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cMonitorKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cMonitorAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cMonitorDSLMonitorCrossReference_4_1_0 = (CrossReference)cMonitorAssignment_4_1.eContents().get(0);
		private final RuleCall cMonitorDSLMonitorIDTerminalRuleCall_4_1_0_1 = (RuleCall)cMonitorDSLMonitorCrossReference_4_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final Alternatives cAccessAlternatives_4_2_0 = (Alternatives)cAccessAssignment_4_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_4_2_0_0 = (Keyword)cAccessAlternatives_4_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_4_2_0_1 = (Keyword)cAccessAlternatives_4_2_0.eContents().get(1);
		private final Keyword cKnowledgeKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Assignment cKnowledgeAssignment_4_4 = (Assignment)cGroup_4.eContents().get(4);
		private final CrossReference cKnowledgeDSLKnowledgeCrossReference_4_4_0 = (CrossReference)cKnowledgeAssignment_4_4.eContents().get(0);
		private final RuleCall cKnowledgeDSLKnowledgeIDTerminalRuleCall_4_4_0_1 = (RuleCall)cKnowledgeDSLKnowledgeCrossReference_4_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4_5 = (Keyword)cGroup_4.eContents().get(5);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Keyword cMonitorKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMonitorAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cMonitorDSLMonitorCrossReference_5_1_0 = (CrossReference)cMonitorAssignment_5_1.eContents().get(0);
		private final RuleCall cMonitorDSLMonitorIDTerminalRuleCall_5_1_0_1 = (RuleCall)cMonitorDSLMonitorCrossReference_5_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final Alternatives cAccessAlternatives_5_2_0 = (Alternatives)cAccessAssignment_5_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_5_2_0_0 = (Keyword)cAccessAlternatives_5_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_5_2_0_1 = (Keyword)cAccessAlternatives_5_2_0.eContents().get(1);
		private final Keyword cSensorKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Assignment cSensorAssignment_5_4 = (Assignment)cGroup_5.eContents().get(4);
		private final CrossReference cSensorDSLSensorCrossReference_5_4_0 = (CrossReference)cSensorAssignment_5_4.eContents().get(0);
		private final RuleCall cSensorDSLSensorIDTerminalRuleCall_5_4_0_1 = (RuleCall)cSensorDSLSensorCrossReference_5_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5_5 = (Keyword)cGroup_5.eContents().get(5);
		
		//DSLRuleMonitor:
		//	'monitor' monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'monitor' monitor2=[DSLMonitor] ';' | 'monitor'
		//	monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'analyzer' analyzer=[DSLAnalyzer] ';' | 'monitor'
		//	monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'planner' planner=[DSLPlanner] ';' | 'monitor'
		//	monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'executor' executor=[DSLExecutor] ';' | 'monitor'
		//	monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'knowledge' knowledge=[DSLKnowledge] ';' | 'monitor'
		//	monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'sensor' sensor=[DSLSensor] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'monitor' monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'monitor' monitor2=[DSLMonitor] ';' | 'monitor'
		//monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'analyzer' analyzer=[DSLAnalyzer] ';' | 'monitor'
		//monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'planner' planner=[DSLPlanner] ';' | 'monitor'
		//monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'executor' executor=[DSLExecutor] ';' | 'monitor'
		//monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'knowledge' knowledge=[DSLKnowledge] ';' | 'monitor'
		//monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'sensor' sensor=[DSLSensor] ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'monitor' monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'monitor' monitor2=[DSLMonitor] ';'
		public Group getGroup_0() { return cGroup_0; }
		
		//'monitor'
		public Keyword getMonitorKeyword_0_0() { return cMonitorKeyword_0_0; }
		
		//monitor=[DSLMonitor]
		public Assignment getMonitorAssignment_0_1() { return cMonitorAssignment_0_1; }
		
		//[DSLMonitor]
		public CrossReference getMonitorDSLMonitorCrossReference_0_1_0() { return cMonitorDSLMonitorCrossReference_0_1_0; }
		
		//ID
		public RuleCall getMonitorDSLMonitorIDTerminalRuleCall_0_1_0_1() { return cMonitorDSLMonitorIDTerminalRuleCall_0_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_0_2() { return cAccessAssignment_0_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_0_2_0() { return cAccessAlternatives_0_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_0_2_0_0() { return cAccessMustUseKeyword_0_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_0_2_0_1() { return cAccessMustNotUseKeyword_0_2_0_1; }
		
		//'monitor'
		public Keyword getMonitorKeyword_0_3() { return cMonitorKeyword_0_3; }
		
		//monitor2=[DSLMonitor]
		public Assignment getMonitor2Assignment_0_4() { return cMonitor2Assignment_0_4; }
		
		//[DSLMonitor]
		public CrossReference getMonitor2DSLMonitorCrossReference_0_4_0() { return cMonitor2DSLMonitorCrossReference_0_4_0; }
		
		//ID
		public RuleCall getMonitor2DSLMonitorIDTerminalRuleCall_0_4_0_1() { return cMonitor2DSLMonitorIDTerminalRuleCall_0_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_0_5() { return cSemicolonKeyword_0_5; }
		
		//'monitor' monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'analyzer' analyzer=[DSLAnalyzer] ';'
		public Group getGroup_1() { return cGroup_1; }
		
		//'monitor'
		public Keyword getMonitorKeyword_1_0() { return cMonitorKeyword_1_0; }
		
		//monitor=[DSLMonitor]
		public Assignment getMonitorAssignment_1_1() { return cMonitorAssignment_1_1; }
		
		//[DSLMonitor]
		public CrossReference getMonitorDSLMonitorCrossReference_1_1_0() { return cMonitorDSLMonitorCrossReference_1_1_0; }
		
		//ID
		public RuleCall getMonitorDSLMonitorIDTerminalRuleCall_1_1_0_1() { return cMonitorDSLMonitorIDTerminalRuleCall_1_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_1_2() { return cAccessAssignment_1_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_1_2_0() { return cAccessAlternatives_1_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_1_2_0_0() { return cAccessMustUseKeyword_1_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_1_2_0_1() { return cAccessMustNotUseKeyword_1_2_0_1; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_1_3() { return cAnalyzerKeyword_1_3; }
		
		//analyzer=[DSLAnalyzer]
		public Assignment getAnalyzerAssignment_1_4() { return cAnalyzerAssignment_1_4; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzerDSLAnalyzerCrossReference_1_4_0() { return cAnalyzerDSLAnalyzerCrossReference_1_4_0; }
		
		//ID
		public RuleCall getAnalyzerDSLAnalyzerIDTerminalRuleCall_1_4_0_1() { return cAnalyzerDSLAnalyzerIDTerminalRuleCall_1_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_5() { return cSemicolonKeyword_1_5; }
		
		//'monitor' monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'planner' planner=[DSLPlanner] ';'
		public Group getGroup_2() { return cGroup_2; }
		
		//'monitor'
		public Keyword getMonitorKeyword_2_0() { return cMonitorKeyword_2_0; }
		
		//monitor=[DSLMonitor]
		public Assignment getMonitorAssignment_2_1() { return cMonitorAssignment_2_1; }
		
		//[DSLMonitor]
		public CrossReference getMonitorDSLMonitorCrossReference_2_1_0() { return cMonitorDSLMonitorCrossReference_2_1_0; }
		
		//ID
		public RuleCall getMonitorDSLMonitorIDTerminalRuleCall_2_1_0_1() { return cMonitorDSLMonitorIDTerminalRuleCall_2_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_2_2() { return cAccessAssignment_2_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_2_2_0() { return cAccessAlternatives_2_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_2_2_0_0() { return cAccessMustUseKeyword_2_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_2_2_0_1() { return cAccessMustNotUseKeyword_2_2_0_1; }
		
		//'planner'
		public Keyword getPlannerKeyword_2_3() { return cPlannerKeyword_2_3; }
		
		//planner=[DSLPlanner]
		public Assignment getPlannerAssignment_2_4() { return cPlannerAssignment_2_4; }
		
		//[DSLPlanner]
		public CrossReference getPlannerDSLPlannerCrossReference_2_4_0() { return cPlannerDSLPlannerCrossReference_2_4_0; }
		
		//ID
		public RuleCall getPlannerDSLPlannerIDTerminalRuleCall_2_4_0_1() { return cPlannerDSLPlannerIDTerminalRuleCall_2_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2_5() { return cSemicolonKeyword_2_5; }
		
		//'monitor' monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'executor' executor=[DSLExecutor] ';'
		public Group getGroup_3() { return cGroup_3; }
		
		//'monitor'
		public Keyword getMonitorKeyword_3_0() { return cMonitorKeyword_3_0; }
		
		//monitor=[DSLMonitor]
		public Assignment getMonitorAssignment_3_1() { return cMonitorAssignment_3_1; }
		
		//[DSLMonitor]
		public CrossReference getMonitorDSLMonitorCrossReference_3_1_0() { return cMonitorDSLMonitorCrossReference_3_1_0; }
		
		//ID
		public RuleCall getMonitorDSLMonitorIDTerminalRuleCall_3_1_0_1() { return cMonitorDSLMonitorIDTerminalRuleCall_3_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_3_2() { return cAccessAssignment_3_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_3_2_0() { return cAccessAlternatives_3_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_3_2_0_0() { return cAccessMustUseKeyword_3_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_3_2_0_1() { return cAccessMustNotUseKeyword_3_2_0_1; }
		
		//'executor'
		public Keyword getExecutorKeyword_3_3() { return cExecutorKeyword_3_3; }
		
		//executor=[DSLExecutor]
		public Assignment getExecutorAssignment_3_4() { return cExecutorAssignment_3_4; }
		
		//[DSLExecutor]
		public CrossReference getExecutorDSLExecutorCrossReference_3_4_0() { return cExecutorDSLExecutorCrossReference_3_4_0; }
		
		//ID
		public RuleCall getExecutorDSLExecutorIDTerminalRuleCall_3_4_0_1() { return cExecutorDSLExecutorIDTerminalRuleCall_3_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3_5() { return cSemicolonKeyword_3_5; }
		
		//'monitor' monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'knowledge' knowledge=[DSLKnowledge] ';'
		public Group getGroup_4() { return cGroup_4; }
		
		//'monitor'
		public Keyword getMonitorKeyword_4_0() { return cMonitorKeyword_4_0; }
		
		//monitor=[DSLMonitor]
		public Assignment getMonitorAssignment_4_1() { return cMonitorAssignment_4_1; }
		
		//[DSLMonitor]
		public CrossReference getMonitorDSLMonitorCrossReference_4_1_0() { return cMonitorDSLMonitorCrossReference_4_1_0; }
		
		//ID
		public RuleCall getMonitorDSLMonitorIDTerminalRuleCall_4_1_0_1() { return cMonitorDSLMonitorIDTerminalRuleCall_4_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_4_2() { return cAccessAssignment_4_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_4_2_0() { return cAccessAlternatives_4_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_4_2_0_0() { return cAccessMustUseKeyword_4_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_4_2_0_1() { return cAccessMustNotUseKeyword_4_2_0_1; }
		
		//'knowledge'
		public Keyword getKnowledgeKeyword_4_3() { return cKnowledgeKeyword_4_3; }
		
		//knowledge=[DSLKnowledge]
		public Assignment getKnowledgeAssignment_4_4() { return cKnowledgeAssignment_4_4; }
		
		//[DSLKnowledge]
		public CrossReference getKnowledgeDSLKnowledgeCrossReference_4_4_0() { return cKnowledgeDSLKnowledgeCrossReference_4_4_0; }
		
		//ID
		public RuleCall getKnowledgeDSLKnowledgeIDTerminalRuleCall_4_4_0_1() { return cKnowledgeDSLKnowledgeIDTerminalRuleCall_4_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_4_5() { return cSemicolonKeyword_4_5; }
		
		//'monitor' monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'sensor' sensor=[DSLSensor] ';'
		public Group getGroup_5() { return cGroup_5; }
		
		//'monitor'
		public Keyword getMonitorKeyword_5_0() { return cMonitorKeyword_5_0; }
		
		//monitor=[DSLMonitor]
		public Assignment getMonitorAssignment_5_1() { return cMonitorAssignment_5_1; }
		
		//[DSLMonitor]
		public CrossReference getMonitorDSLMonitorCrossReference_5_1_0() { return cMonitorDSLMonitorCrossReference_5_1_0; }
		
		//ID
		public RuleCall getMonitorDSLMonitorIDTerminalRuleCall_5_1_0_1() { return cMonitorDSLMonitorIDTerminalRuleCall_5_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_5_2() { return cAccessAssignment_5_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_5_2_0() { return cAccessAlternatives_5_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_5_2_0_0() { return cAccessMustUseKeyword_5_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_5_2_0_1() { return cAccessMustNotUseKeyword_5_2_0_1; }
		
		//'sensor'
		public Keyword getSensorKeyword_5_3() { return cSensorKeyword_5_3; }
		
		//sensor=[DSLSensor]
		public Assignment getSensorAssignment_5_4() { return cSensorAssignment_5_4; }
		
		//[DSLSensor]
		public CrossReference getSensorDSLSensorCrossReference_5_4_0() { return cSensorDSLSensorCrossReference_5_4_0; }
		
		//ID
		public RuleCall getSensorDSLSensorIDTerminalRuleCall_5_4_0_1() { return cSensorDSLSensorIDTerminalRuleCall_5_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5_5() { return cSemicolonKeyword_5_5; }
	}
	public class DSLRuleAnalyzerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLRuleAnalyzer");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cAnalyzerKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cAnalyzerAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cAnalyzerDSLAnalyzerCrossReference_0_1_0 = (CrossReference)cAnalyzerAssignment_0_1.eContents().get(0);
		private final RuleCall cAnalyzerDSLAnalyzerIDTerminalRuleCall_0_1_0_1 = (RuleCall)cAnalyzerDSLAnalyzerCrossReference_0_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final Alternatives cAccessAlternatives_0_2_0 = (Alternatives)cAccessAssignment_0_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_0_2_0_0 = (Keyword)cAccessAlternatives_0_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_0_2_0_1 = (Keyword)cAccessAlternatives_0_2_0.eContents().get(1);
		private final Keyword cMonitorKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cMonitorAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final CrossReference cMonitorDSLMonitorCrossReference_0_4_0 = (CrossReference)cMonitorAssignment_0_4.eContents().get(0);
		private final RuleCall cMonitorDSLMonitorIDTerminalRuleCall_0_4_0_1 = (RuleCall)cMonitorDSLMonitorCrossReference_0_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cAnalyzerKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cAnalyzerAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cAnalyzerDSLAnalyzerCrossReference_1_1_0 = (CrossReference)cAnalyzerAssignment_1_1.eContents().get(0);
		private final RuleCall cAnalyzerDSLAnalyzerIDTerminalRuleCall_1_1_0_1 = (RuleCall)cAnalyzerDSLAnalyzerCrossReference_1_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final Alternatives cAccessAlternatives_1_2_0 = (Alternatives)cAccessAssignment_1_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_1_2_0_0 = (Keyword)cAccessAlternatives_1_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_1_2_0_1 = (Keyword)cAccessAlternatives_1_2_0.eContents().get(1);
		private final Keyword cAnalyzerKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cAnalyzer2Assignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final CrossReference cAnalyzer2DSLAnalyzerCrossReference_1_4_0 = (CrossReference)cAnalyzer2Assignment_1_4.eContents().get(0);
		private final RuleCall cAnalyzer2DSLAnalyzerIDTerminalRuleCall_1_4_0_1 = (RuleCall)cAnalyzer2DSLAnalyzerCrossReference_1_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cAnalyzerKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAnalyzerAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cAnalyzerDSLAnalyzerCrossReference_2_1_0 = (CrossReference)cAnalyzerAssignment_2_1.eContents().get(0);
		private final RuleCall cAnalyzerDSLAnalyzerIDTerminalRuleCall_2_1_0_1 = (RuleCall)cAnalyzerDSLAnalyzerCrossReference_2_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final Alternatives cAccessAlternatives_2_2_0 = (Alternatives)cAccessAssignment_2_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_2_2_0_0 = (Keyword)cAccessAlternatives_2_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_2_2_0_1 = (Keyword)cAccessAlternatives_2_2_0.eContents().get(1);
		private final Keyword cPlannerKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cPlannerAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final CrossReference cPlannerDSLPlannerCrossReference_2_4_0 = (CrossReference)cPlannerAssignment_2_4.eContents().get(0);
		private final RuleCall cPlannerDSLPlannerIDTerminalRuleCall_2_4_0_1 = (RuleCall)cPlannerDSLPlannerCrossReference_2_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cAnalyzerKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAnalyzerAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cAnalyzerDSLAnalyzerCrossReference_3_1_0 = (CrossReference)cAnalyzerAssignment_3_1.eContents().get(0);
		private final RuleCall cAnalyzerDSLAnalyzerIDTerminalRuleCall_3_1_0_1 = (RuleCall)cAnalyzerDSLAnalyzerCrossReference_3_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final Alternatives cAccessAlternatives_3_2_0 = (Alternatives)cAccessAssignment_3_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_3_2_0_0 = (Keyword)cAccessAlternatives_3_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_3_2_0_1 = (Keyword)cAccessAlternatives_3_2_0.eContents().get(1);
		private final Keyword cExecutorKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cExecutorAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final CrossReference cExecutorDSLExecutorCrossReference_3_4_0 = (CrossReference)cExecutorAssignment_3_4.eContents().get(0);
		private final RuleCall cExecutorDSLExecutorIDTerminalRuleCall_3_4_0_1 = (RuleCall)cExecutorDSLExecutorCrossReference_3_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cAnalyzerKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAnalyzerAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cAnalyzerDSLAnalyzerCrossReference_4_1_0 = (CrossReference)cAnalyzerAssignment_4_1.eContents().get(0);
		private final RuleCall cAnalyzerDSLAnalyzerIDTerminalRuleCall_4_1_0_1 = (RuleCall)cAnalyzerDSLAnalyzerCrossReference_4_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final Alternatives cAccessAlternatives_4_2_0 = (Alternatives)cAccessAssignment_4_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_4_2_0_0 = (Keyword)cAccessAlternatives_4_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_4_2_0_1 = (Keyword)cAccessAlternatives_4_2_0.eContents().get(1);
		private final Keyword cKnowledgeKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Assignment cKnowledgeAssignment_4_4 = (Assignment)cGroup_4.eContents().get(4);
		private final CrossReference cKnowledgeDSLKnowledgeCrossReference_4_4_0 = (CrossReference)cKnowledgeAssignment_4_4.eContents().get(0);
		private final RuleCall cKnowledgeDSLKnowledgeIDTerminalRuleCall_4_4_0_1 = (RuleCall)cKnowledgeDSLKnowledgeCrossReference_4_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4_5 = (Keyword)cGroup_4.eContents().get(5);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Keyword cAnalyzerKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAnalyzerAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cAnalyzerDSLAnalyzerCrossReference_5_1_0 = (CrossReference)cAnalyzerAssignment_5_1.eContents().get(0);
		private final RuleCall cAnalyzerDSLAnalyzerIDTerminalRuleCall_5_1_0_1 = (RuleCall)cAnalyzerDSLAnalyzerCrossReference_5_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final Alternatives cAccessAlternatives_5_2_0 = (Alternatives)cAccessAssignment_5_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_5_2_0_0 = (Keyword)cAccessAlternatives_5_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_5_2_0_1 = (Keyword)cAccessAlternatives_5_2_0.eContents().get(1);
		private final Keyword cReferenceInputKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Assignment cRreferenceAssignment_5_4 = (Assignment)cGroup_5.eContents().get(4);
		private final CrossReference cRreferenceDSLReferenceInputCrossReference_5_4_0 = (CrossReference)cRreferenceAssignment_5_4.eContents().get(0);
		private final RuleCall cRreferenceDSLReferenceInputIDTerminalRuleCall_5_4_0_1 = (RuleCall)cRreferenceDSLReferenceInputCrossReference_5_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5_5 = (Keyword)cGroup_5.eContents().get(5);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Keyword cAnalyzerKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cAnalyzerAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cAnalyzerDSLAnalyzerCrossReference_6_1_0 = (CrossReference)cAnalyzerAssignment_6_1.eContents().get(0);
		private final RuleCall cAnalyzerDSLAnalyzerIDTerminalRuleCall_6_1_0_1 = (RuleCall)cAnalyzerDSLAnalyzerCrossReference_6_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final Alternatives cAccessAlternatives_6_2_0 = (Alternatives)cAccessAssignment_6_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_6_2_0_0 = (Keyword)cAccessAlternatives_6_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_6_2_0_1 = (Keyword)cAccessAlternatives_6_2_0.eContents().get(1);
		private final Keyword cAlternativeKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Assignment cShaltAssignment_6_4 = (Assignment)cGroup_6.eContents().get(4);
		private final CrossReference cShaltDSLAlternativeCrossReference_6_4_0 = (CrossReference)cShaltAssignment_6_4.eContents().get(0);
		private final RuleCall cShaltDSLAlternativeIDTerminalRuleCall_6_4_0_1 = (RuleCall)cShaltDSLAlternativeCrossReference_6_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6_5 = (Keyword)cGroup_6.eContents().get(5);
		
		//DSLRuleAnalyzer:
		//	'analyzer' analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'monitor' monitor=[DSLMonitor] ';' | 'analyzer'
		//	analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'analyzer' analyzer2=[DSLAnalyzer] ';' | 'analyzer'
		//	analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'planner' planner=[DSLPlanner] ';' | 'analyzer'
		//	analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'executor' executor=[DSLExecutor] ';' | 'analyzer'
		//	analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'knowledge' knowledge=[DSLKnowledge] ';' | 'analyzer'
		//	analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'reference-input' rreference=[DSLReferenceInput] ';' |
		//	'analyzer' analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'alternative' shalt=[DSLAlternative] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'analyzer' analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'monitor' monitor=[DSLMonitor] ';' | 'analyzer'
		//analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'analyzer' analyzer2=[DSLAnalyzer] ';' | 'analyzer'
		//analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'planner' planner=[DSLPlanner] ';' | 'analyzer'
		//analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'executor' executor=[DSLExecutor] ';' | 'analyzer'
		//analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'knowledge' knowledge=[DSLKnowledge] ';' | 'analyzer'
		//analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'reference-input' rreference=[DSLReferenceInput] ';' |
		//'analyzer' analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'alternative' shalt=[DSLAlternative] ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'analyzer' analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'monitor' monitor=[DSLMonitor] ';'
		public Group getGroup_0() { return cGroup_0; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_0_0() { return cAnalyzerKeyword_0_0; }
		
		//analyzer=[DSLAnalyzer]
		public Assignment getAnalyzerAssignment_0_1() { return cAnalyzerAssignment_0_1; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzerDSLAnalyzerCrossReference_0_1_0() { return cAnalyzerDSLAnalyzerCrossReference_0_1_0; }
		
		//ID
		public RuleCall getAnalyzerDSLAnalyzerIDTerminalRuleCall_0_1_0_1() { return cAnalyzerDSLAnalyzerIDTerminalRuleCall_0_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_0_2() { return cAccessAssignment_0_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_0_2_0() { return cAccessAlternatives_0_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_0_2_0_0() { return cAccessMustUseKeyword_0_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_0_2_0_1() { return cAccessMustNotUseKeyword_0_2_0_1; }
		
		//'monitor'
		public Keyword getMonitorKeyword_0_3() { return cMonitorKeyword_0_3; }
		
		//monitor=[DSLMonitor]
		public Assignment getMonitorAssignment_0_4() { return cMonitorAssignment_0_4; }
		
		//[DSLMonitor]
		public CrossReference getMonitorDSLMonitorCrossReference_0_4_0() { return cMonitorDSLMonitorCrossReference_0_4_0; }
		
		//ID
		public RuleCall getMonitorDSLMonitorIDTerminalRuleCall_0_4_0_1() { return cMonitorDSLMonitorIDTerminalRuleCall_0_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_0_5() { return cSemicolonKeyword_0_5; }
		
		//'analyzer' analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'analyzer' analyzer2=[DSLAnalyzer] ';'
		public Group getGroup_1() { return cGroup_1; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_1_0() { return cAnalyzerKeyword_1_0; }
		
		//analyzer=[DSLAnalyzer]
		public Assignment getAnalyzerAssignment_1_1() { return cAnalyzerAssignment_1_1; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzerDSLAnalyzerCrossReference_1_1_0() { return cAnalyzerDSLAnalyzerCrossReference_1_1_0; }
		
		//ID
		public RuleCall getAnalyzerDSLAnalyzerIDTerminalRuleCall_1_1_0_1() { return cAnalyzerDSLAnalyzerIDTerminalRuleCall_1_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_1_2() { return cAccessAssignment_1_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_1_2_0() { return cAccessAlternatives_1_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_1_2_0_0() { return cAccessMustUseKeyword_1_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_1_2_0_1() { return cAccessMustNotUseKeyword_1_2_0_1; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_1_3() { return cAnalyzerKeyword_1_3; }
		
		//analyzer2=[DSLAnalyzer]
		public Assignment getAnalyzer2Assignment_1_4() { return cAnalyzer2Assignment_1_4; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzer2DSLAnalyzerCrossReference_1_4_0() { return cAnalyzer2DSLAnalyzerCrossReference_1_4_0; }
		
		//ID
		public RuleCall getAnalyzer2DSLAnalyzerIDTerminalRuleCall_1_4_0_1() { return cAnalyzer2DSLAnalyzerIDTerminalRuleCall_1_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_5() { return cSemicolonKeyword_1_5; }
		
		//'analyzer' analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'planner' planner=[DSLPlanner] ';'
		public Group getGroup_2() { return cGroup_2; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_2_0() { return cAnalyzerKeyword_2_0; }
		
		//analyzer=[DSLAnalyzer]
		public Assignment getAnalyzerAssignment_2_1() { return cAnalyzerAssignment_2_1; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzerDSLAnalyzerCrossReference_2_1_0() { return cAnalyzerDSLAnalyzerCrossReference_2_1_0; }
		
		//ID
		public RuleCall getAnalyzerDSLAnalyzerIDTerminalRuleCall_2_1_0_1() { return cAnalyzerDSLAnalyzerIDTerminalRuleCall_2_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_2_2() { return cAccessAssignment_2_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_2_2_0() { return cAccessAlternatives_2_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_2_2_0_0() { return cAccessMustUseKeyword_2_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_2_2_0_1() { return cAccessMustNotUseKeyword_2_2_0_1; }
		
		//'planner'
		public Keyword getPlannerKeyword_2_3() { return cPlannerKeyword_2_3; }
		
		//planner=[DSLPlanner]
		public Assignment getPlannerAssignment_2_4() { return cPlannerAssignment_2_4; }
		
		//[DSLPlanner]
		public CrossReference getPlannerDSLPlannerCrossReference_2_4_0() { return cPlannerDSLPlannerCrossReference_2_4_0; }
		
		//ID
		public RuleCall getPlannerDSLPlannerIDTerminalRuleCall_2_4_0_1() { return cPlannerDSLPlannerIDTerminalRuleCall_2_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2_5() { return cSemicolonKeyword_2_5; }
		
		//'analyzer' analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'executor' executor=[DSLExecutor] ';'
		public Group getGroup_3() { return cGroup_3; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_3_0() { return cAnalyzerKeyword_3_0; }
		
		//analyzer=[DSLAnalyzer]
		public Assignment getAnalyzerAssignment_3_1() { return cAnalyzerAssignment_3_1; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzerDSLAnalyzerCrossReference_3_1_0() { return cAnalyzerDSLAnalyzerCrossReference_3_1_0; }
		
		//ID
		public RuleCall getAnalyzerDSLAnalyzerIDTerminalRuleCall_3_1_0_1() { return cAnalyzerDSLAnalyzerIDTerminalRuleCall_3_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_3_2() { return cAccessAssignment_3_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_3_2_0() { return cAccessAlternatives_3_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_3_2_0_0() { return cAccessMustUseKeyword_3_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_3_2_0_1() { return cAccessMustNotUseKeyword_3_2_0_1; }
		
		//'executor'
		public Keyword getExecutorKeyword_3_3() { return cExecutorKeyword_3_3; }
		
		//executor=[DSLExecutor]
		public Assignment getExecutorAssignment_3_4() { return cExecutorAssignment_3_4; }
		
		//[DSLExecutor]
		public CrossReference getExecutorDSLExecutorCrossReference_3_4_0() { return cExecutorDSLExecutorCrossReference_3_4_0; }
		
		//ID
		public RuleCall getExecutorDSLExecutorIDTerminalRuleCall_3_4_0_1() { return cExecutorDSLExecutorIDTerminalRuleCall_3_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3_5() { return cSemicolonKeyword_3_5; }
		
		//'analyzer' analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'knowledge' knowledge=[DSLKnowledge] ';'
		public Group getGroup_4() { return cGroup_4; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_4_0() { return cAnalyzerKeyword_4_0; }
		
		//analyzer=[DSLAnalyzer]
		public Assignment getAnalyzerAssignment_4_1() { return cAnalyzerAssignment_4_1; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzerDSLAnalyzerCrossReference_4_1_0() { return cAnalyzerDSLAnalyzerCrossReference_4_1_0; }
		
		//ID
		public RuleCall getAnalyzerDSLAnalyzerIDTerminalRuleCall_4_1_0_1() { return cAnalyzerDSLAnalyzerIDTerminalRuleCall_4_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_4_2() { return cAccessAssignment_4_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_4_2_0() { return cAccessAlternatives_4_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_4_2_0_0() { return cAccessMustUseKeyword_4_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_4_2_0_1() { return cAccessMustNotUseKeyword_4_2_0_1; }
		
		//'knowledge'
		public Keyword getKnowledgeKeyword_4_3() { return cKnowledgeKeyword_4_3; }
		
		//knowledge=[DSLKnowledge]
		public Assignment getKnowledgeAssignment_4_4() { return cKnowledgeAssignment_4_4; }
		
		//[DSLKnowledge]
		public CrossReference getKnowledgeDSLKnowledgeCrossReference_4_4_0() { return cKnowledgeDSLKnowledgeCrossReference_4_4_0; }
		
		//ID
		public RuleCall getKnowledgeDSLKnowledgeIDTerminalRuleCall_4_4_0_1() { return cKnowledgeDSLKnowledgeIDTerminalRuleCall_4_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_4_5() { return cSemicolonKeyword_4_5; }
		
		//'analyzer' analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'reference-input' rreference=[DSLReferenceInput]
		//';'
		public Group getGroup_5() { return cGroup_5; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_5_0() { return cAnalyzerKeyword_5_0; }
		
		//analyzer=[DSLAnalyzer]
		public Assignment getAnalyzerAssignment_5_1() { return cAnalyzerAssignment_5_1; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzerDSLAnalyzerCrossReference_5_1_0() { return cAnalyzerDSLAnalyzerCrossReference_5_1_0; }
		
		//ID
		public RuleCall getAnalyzerDSLAnalyzerIDTerminalRuleCall_5_1_0_1() { return cAnalyzerDSLAnalyzerIDTerminalRuleCall_5_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_5_2() { return cAccessAssignment_5_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_5_2_0() { return cAccessAlternatives_5_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_5_2_0_0() { return cAccessMustUseKeyword_5_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_5_2_0_1() { return cAccessMustNotUseKeyword_5_2_0_1; }
		
		//'reference-input'
		public Keyword getReferenceInputKeyword_5_3() { return cReferenceInputKeyword_5_3; }
		
		//rreference=[DSLReferenceInput]
		public Assignment getRreferenceAssignment_5_4() { return cRreferenceAssignment_5_4; }
		
		//[DSLReferenceInput]
		public CrossReference getRreferenceDSLReferenceInputCrossReference_5_4_0() { return cRreferenceDSLReferenceInputCrossReference_5_4_0; }
		
		//ID
		public RuleCall getRreferenceDSLReferenceInputIDTerminalRuleCall_5_4_0_1() { return cRreferenceDSLReferenceInputIDTerminalRuleCall_5_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5_5() { return cSemicolonKeyword_5_5; }
		
		//'analyzer' analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'alternative' shalt=[DSLAlternative] ';'
		public Group getGroup_6() { return cGroup_6; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_6_0() { return cAnalyzerKeyword_6_0; }
		
		//analyzer=[DSLAnalyzer]
		public Assignment getAnalyzerAssignment_6_1() { return cAnalyzerAssignment_6_1; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzerDSLAnalyzerCrossReference_6_1_0() { return cAnalyzerDSLAnalyzerCrossReference_6_1_0; }
		
		//ID
		public RuleCall getAnalyzerDSLAnalyzerIDTerminalRuleCall_6_1_0_1() { return cAnalyzerDSLAnalyzerIDTerminalRuleCall_6_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_6_2() { return cAccessAssignment_6_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_6_2_0() { return cAccessAlternatives_6_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_6_2_0_0() { return cAccessMustUseKeyword_6_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_6_2_0_1() { return cAccessMustNotUseKeyword_6_2_0_1; }
		
		//'alternative'
		public Keyword getAlternativeKeyword_6_3() { return cAlternativeKeyword_6_3; }
		
		//shalt=[DSLAlternative]
		public Assignment getShaltAssignment_6_4() { return cShaltAssignment_6_4; }
		
		//[DSLAlternative]
		public CrossReference getShaltDSLAlternativeCrossReference_6_4_0() { return cShaltDSLAlternativeCrossReference_6_4_0; }
		
		//ID
		public RuleCall getShaltDSLAlternativeIDTerminalRuleCall_6_4_0_1() { return cShaltDSLAlternativeIDTerminalRuleCall_6_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_6_5() { return cSemicolonKeyword_6_5; }
	}
	public class DSLRulePlannerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLRulePlanner");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cPlannerKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cPlannerAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cPlannerDSLPlannerCrossReference_0_1_0 = (CrossReference)cPlannerAssignment_0_1.eContents().get(0);
		private final RuleCall cPlannerDSLPlannerIDTerminalRuleCall_0_1_0_1 = (RuleCall)cPlannerDSLPlannerCrossReference_0_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final Alternatives cAccessAlternatives_0_2_0 = (Alternatives)cAccessAssignment_0_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_0_2_0_0 = (Keyword)cAccessAlternatives_0_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_0_2_0_1 = (Keyword)cAccessAlternatives_0_2_0.eContents().get(1);
		private final Keyword cMonitorKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cMonitorAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final CrossReference cMonitorDSLMonitorCrossReference_0_4_0 = (CrossReference)cMonitorAssignment_0_4.eContents().get(0);
		private final RuleCall cMonitorDSLMonitorIDTerminalRuleCall_0_4_0_1 = (RuleCall)cMonitorDSLMonitorCrossReference_0_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cPlannerKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cPlannerAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cPlannerDSLPlannerCrossReference_1_1_0 = (CrossReference)cPlannerAssignment_1_1.eContents().get(0);
		private final RuleCall cPlannerDSLPlannerIDTerminalRuleCall_1_1_0_1 = (RuleCall)cPlannerDSLPlannerCrossReference_1_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final Alternatives cAccessAlternatives_1_2_0 = (Alternatives)cAccessAssignment_1_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_1_2_0_0 = (Keyword)cAccessAlternatives_1_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_1_2_0_1 = (Keyword)cAccessAlternatives_1_2_0.eContents().get(1);
		private final Keyword cAnalyzerKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cAnalyzerAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final CrossReference cAnalyzerDSLAnalyzerCrossReference_1_4_0 = (CrossReference)cAnalyzerAssignment_1_4.eContents().get(0);
		private final RuleCall cAnalyzerDSLAnalyzerIDTerminalRuleCall_1_4_0_1 = (RuleCall)cAnalyzerDSLAnalyzerCrossReference_1_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cPlannerKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPlannerAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cPlannerDSLPlannerCrossReference_2_1_0 = (CrossReference)cPlannerAssignment_2_1.eContents().get(0);
		private final RuleCall cPlannerDSLPlannerIDTerminalRuleCall_2_1_0_1 = (RuleCall)cPlannerDSLPlannerCrossReference_2_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final Alternatives cAccessAlternatives_2_2_0 = (Alternatives)cAccessAssignment_2_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_2_2_0_0 = (Keyword)cAccessAlternatives_2_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_2_2_0_1 = (Keyword)cAccessAlternatives_2_2_0.eContents().get(1);
		private final Keyword cPlannerKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cPlanner2Assignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final CrossReference cPlanner2DSLPlannerCrossReference_2_4_0 = (CrossReference)cPlanner2Assignment_2_4.eContents().get(0);
		private final RuleCall cPlanner2DSLPlannerIDTerminalRuleCall_2_4_0_1 = (RuleCall)cPlanner2DSLPlannerCrossReference_2_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cPlannerKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPlannerAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cPlannerDSLPlannerCrossReference_3_1_0 = (CrossReference)cPlannerAssignment_3_1.eContents().get(0);
		private final RuleCall cPlannerDSLPlannerIDTerminalRuleCall_3_1_0_1 = (RuleCall)cPlannerDSLPlannerCrossReference_3_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final Alternatives cAccessAlternatives_3_2_0 = (Alternatives)cAccessAssignment_3_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_3_2_0_0 = (Keyword)cAccessAlternatives_3_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_3_2_0_1 = (Keyword)cAccessAlternatives_3_2_0.eContents().get(1);
		private final Keyword cExecutorKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cExecutorAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final CrossReference cExecutorDSLExecutorCrossReference_3_4_0 = (CrossReference)cExecutorAssignment_3_4.eContents().get(0);
		private final RuleCall cExecutorDSLExecutorIDTerminalRuleCall_3_4_0_1 = (RuleCall)cExecutorDSLExecutorCrossReference_3_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cPlannerKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPlannerAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cPlannerDSLPlannerCrossReference_4_1_0 = (CrossReference)cPlannerAssignment_4_1.eContents().get(0);
		private final RuleCall cPlannerDSLPlannerIDTerminalRuleCall_4_1_0_1 = (RuleCall)cPlannerDSLPlannerCrossReference_4_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final Alternatives cAccessAlternatives_4_2_0 = (Alternatives)cAccessAssignment_4_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_4_2_0_0 = (Keyword)cAccessAlternatives_4_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_4_2_0_1 = (Keyword)cAccessAlternatives_4_2_0.eContents().get(1);
		private final Keyword cKnowledgeKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Assignment cKnowledgeAssignment_4_4 = (Assignment)cGroup_4.eContents().get(4);
		private final CrossReference cKnowledgeDSLKnowledgeCrossReference_4_4_0 = (CrossReference)cKnowledgeAssignment_4_4.eContents().get(0);
		private final RuleCall cKnowledgeDSLKnowledgeIDTerminalRuleCall_4_4_0_1 = (RuleCall)cKnowledgeDSLKnowledgeCrossReference_4_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4_5 = (Keyword)cGroup_4.eContents().get(5);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Keyword cPlannerKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cPlannerAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cPlannerDSLPlannerCrossReference_5_1_0 = (CrossReference)cPlannerAssignment_5_1.eContents().get(0);
		private final RuleCall cPlannerDSLPlannerIDTerminalRuleCall_5_1_0_1 = (RuleCall)cPlannerDSLPlannerCrossReference_5_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final Alternatives cAccessAlternatives_5_2_0 = (Alternatives)cAccessAssignment_5_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_5_2_0_0 = (Keyword)cAccessAlternatives_5_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_5_2_0_1 = (Keyword)cAccessAlternatives_5_2_0.eContents().get(1);
		private final Keyword cAlternativeKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Assignment cShaltAssignment_5_4 = (Assignment)cGroup_5.eContents().get(4);
		private final CrossReference cShaltDSLAlternativeCrossReference_5_4_0 = (CrossReference)cShaltAssignment_5_4.eContents().get(0);
		private final RuleCall cShaltDSLAlternativeIDTerminalRuleCall_5_4_0_1 = (RuleCall)cShaltDSLAlternativeCrossReference_5_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5_5 = (Keyword)cGroup_5.eContents().get(5);
		
		//DSLRulePlanner:
		//	'planner' planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'monitor' monitor=[DSLMonitor] ';' | 'planner'
		//	planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'analyzer' analyzer=[DSLAnalyzer] ';' | 'planner'
		//	planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'planner' planner2=[DSLPlanner] ';' | 'planner'
		//	planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'executor' executor=[DSLExecutor] ';' | 'planner'
		//	planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'knowledge' knowledge=[DSLKnowledge] ';' | 'planner'
		//	planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'alternative' shalt=[DSLAlternative] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'planner' planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'monitor' monitor=[DSLMonitor] ';' | 'planner'
		//planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'analyzer' analyzer=[DSLAnalyzer] ';' | 'planner'
		//planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'planner' planner2=[DSLPlanner] ';' | 'planner'
		//planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'executor' executor=[DSLExecutor] ';' | 'planner'
		//planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'knowledge' knowledge=[DSLKnowledge] ';' | 'planner'
		//planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'alternative' shalt=[DSLAlternative] ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'planner' planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'monitor' monitor=[DSLMonitor] ';'
		public Group getGroup_0() { return cGroup_0; }
		
		//'planner'
		public Keyword getPlannerKeyword_0_0() { return cPlannerKeyword_0_0; }
		
		//planner=[DSLPlanner]
		public Assignment getPlannerAssignment_0_1() { return cPlannerAssignment_0_1; }
		
		//[DSLPlanner]
		public CrossReference getPlannerDSLPlannerCrossReference_0_1_0() { return cPlannerDSLPlannerCrossReference_0_1_0; }
		
		//ID
		public RuleCall getPlannerDSLPlannerIDTerminalRuleCall_0_1_0_1() { return cPlannerDSLPlannerIDTerminalRuleCall_0_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_0_2() { return cAccessAssignment_0_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_0_2_0() { return cAccessAlternatives_0_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_0_2_0_0() { return cAccessMustUseKeyword_0_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_0_2_0_1() { return cAccessMustNotUseKeyword_0_2_0_1; }
		
		//'monitor'
		public Keyword getMonitorKeyword_0_3() { return cMonitorKeyword_0_3; }
		
		//monitor=[DSLMonitor]
		public Assignment getMonitorAssignment_0_4() { return cMonitorAssignment_0_4; }
		
		//[DSLMonitor]
		public CrossReference getMonitorDSLMonitorCrossReference_0_4_0() { return cMonitorDSLMonitorCrossReference_0_4_0; }
		
		//ID
		public RuleCall getMonitorDSLMonitorIDTerminalRuleCall_0_4_0_1() { return cMonitorDSLMonitorIDTerminalRuleCall_0_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_0_5() { return cSemicolonKeyword_0_5; }
		
		//'planner' planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'analyzer' analyzer=[DSLAnalyzer] ';'
		public Group getGroup_1() { return cGroup_1; }
		
		//'planner'
		public Keyword getPlannerKeyword_1_0() { return cPlannerKeyword_1_0; }
		
		//planner=[DSLPlanner]
		public Assignment getPlannerAssignment_1_1() { return cPlannerAssignment_1_1; }
		
		//[DSLPlanner]
		public CrossReference getPlannerDSLPlannerCrossReference_1_1_0() { return cPlannerDSLPlannerCrossReference_1_1_0; }
		
		//ID
		public RuleCall getPlannerDSLPlannerIDTerminalRuleCall_1_1_0_1() { return cPlannerDSLPlannerIDTerminalRuleCall_1_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_1_2() { return cAccessAssignment_1_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_1_2_0() { return cAccessAlternatives_1_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_1_2_0_0() { return cAccessMustUseKeyword_1_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_1_2_0_1() { return cAccessMustNotUseKeyword_1_2_0_1; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_1_3() { return cAnalyzerKeyword_1_3; }
		
		//analyzer=[DSLAnalyzer]
		public Assignment getAnalyzerAssignment_1_4() { return cAnalyzerAssignment_1_4; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzerDSLAnalyzerCrossReference_1_4_0() { return cAnalyzerDSLAnalyzerCrossReference_1_4_0; }
		
		//ID
		public RuleCall getAnalyzerDSLAnalyzerIDTerminalRuleCall_1_4_0_1() { return cAnalyzerDSLAnalyzerIDTerminalRuleCall_1_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_5() { return cSemicolonKeyword_1_5; }
		
		//'planner' planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'planner' planner2=[DSLPlanner] ';'
		public Group getGroup_2() { return cGroup_2; }
		
		//'planner'
		public Keyword getPlannerKeyword_2_0() { return cPlannerKeyword_2_0; }
		
		//planner=[DSLPlanner]
		public Assignment getPlannerAssignment_2_1() { return cPlannerAssignment_2_1; }
		
		//[DSLPlanner]
		public CrossReference getPlannerDSLPlannerCrossReference_2_1_0() { return cPlannerDSLPlannerCrossReference_2_1_0; }
		
		//ID
		public RuleCall getPlannerDSLPlannerIDTerminalRuleCall_2_1_0_1() { return cPlannerDSLPlannerIDTerminalRuleCall_2_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_2_2() { return cAccessAssignment_2_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_2_2_0() { return cAccessAlternatives_2_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_2_2_0_0() { return cAccessMustUseKeyword_2_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_2_2_0_1() { return cAccessMustNotUseKeyword_2_2_0_1; }
		
		//'planner'
		public Keyword getPlannerKeyword_2_3() { return cPlannerKeyword_2_3; }
		
		//planner2=[DSLPlanner]
		public Assignment getPlanner2Assignment_2_4() { return cPlanner2Assignment_2_4; }
		
		//[DSLPlanner]
		public CrossReference getPlanner2DSLPlannerCrossReference_2_4_0() { return cPlanner2DSLPlannerCrossReference_2_4_0; }
		
		//ID
		public RuleCall getPlanner2DSLPlannerIDTerminalRuleCall_2_4_0_1() { return cPlanner2DSLPlannerIDTerminalRuleCall_2_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2_5() { return cSemicolonKeyword_2_5; }
		
		//'planner' planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'executor' executor=[DSLExecutor] ';'
		public Group getGroup_3() { return cGroup_3; }
		
		//'planner'
		public Keyword getPlannerKeyword_3_0() { return cPlannerKeyword_3_0; }
		
		//planner=[DSLPlanner]
		public Assignment getPlannerAssignment_3_1() { return cPlannerAssignment_3_1; }
		
		//[DSLPlanner]
		public CrossReference getPlannerDSLPlannerCrossReference_3_1_0() { return cPlannerDSLPlannerCrossReference_3_1_0; }
		
		//ID
		public RuleCall getPlannerDSLPlannerIDTerminalRuleCall_3_1_0_1() { return cPlannerDSLPlannerIDTerminalRuleCall_3_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_3_2() { return cAccessAssignment_3_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_3_2_0() { return cAccessAlternatives_3_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_3_2_0_0() { return cAccessMustUseKeyword_3_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_3_2_0_1() { return cAccessMustNotUseKeyword_3_2_0_1; }
		
		//'executor'
		public Keyword getExecutorKeyword_3_3() { return cExecutorKeyword_3_3; }
		
		//executor=[DSLExecutor]
		public Assignment getExecutorAssignment_3_4() { return cExecutorAssignment_3_4; }
		
		//[DSLExecutor]
		public CrossReference getExecutorDSLExecutorCrossReference_3_4_0() { return cExecutorDSLExecutorCrossReference_3_4_0; }
		
		//ID
		public RuleCall getExecutorDSLExecutorIDTerminalRuleCall_3_4_0_1() { return cExecutorDSLExecutorIDTerminalRuleCall_3_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3_5() { return cSemicolonKeyword_3_5; }
		
		//'planner' planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'knowledge' knowledge=[DSLKnowledge] ';'
		public Group getGroup_4() { return cGroup_4; }
		
		//'planner'
		public Keyword getPlannerKeyword_4_0() { return cPlannerKeyword_4_0; }
		
		//planner=[DSLPlanner]
		public Assignment getPlannerAssignment_4_1() { return cPlannerAssignment_4_1; }
		
		//[DSLPlanner]
		public CrossReference getPlannerDSLPlannerCrossReference_4_1_0() { return cPlannerDSLPlannerCrossReference_4_1_0; }
		
		//ID
		public RuleCall getPlannerDSLPlannerIDTerminalRuleCall_4_1_0_1() { return cPlannerDSLPlannerIDTerminalRuleCall_4_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_4_2() { return cAccessAssignment_4_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_4_2_0() { return cAccessAlternatives_4_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_4_2_0_0() { return cAccessMustUseKeyword_4_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_4_2_0_1() { return cAccessMustNotUseKeyword_4_2_0_1; }
		
		//'knowledge'
		public Keyword getKnowledgeKeyword_4_3() { return cKnowledgeKeyword_4_3; }
		
		//knowledge=[DSLKnowledge]
		public Assignment getKnowledgeAssignment_4_4() { return cKnowledgeAssignment_4_4; }
		
		//[DSLKnowledge]
		public CrossReference getKnowledgeDSLKnowledgeCrossReference_4_4_0() { return cKnowledgeDSLKnowledgeCrossReference_4_4_0; }
		
		//ID
		public RuleCall getKnowledgeDSLKnowledgeIDTerminalRuleCall_4_4_0_1() { return cKnowledgeDSLKnowledgeIDTerminalRuleCall_4_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_4_5() { return cSemicolonKeyword_4_5; }
		
		//'planner' planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'alternative' shalt=[DSLAlternative] ';'
		public Group getGroup_5() { return cGroup_5; }
		
		//'planner'
		public Keyword getPlannerKeyword_5_0() { return cPlannerKeyword_5_0; }
		
		//planner=[DSLPlanner]
		public Assignment getPlannerAssignment_5_1() { return cPlannerAssignment_5_1; }
		
		//[DSLPlanner]
		public CrossReference getPlannerDSLPlannerCrossReference_5_1_0() { return cPlannerDSLPlannerCrossReference_5_1_0; }
		
		//ID
		public RuleCall getPlannerDSLPlannerIDTerminalRuleCall_5_1_0_1() { return cPlannerDSLPlannerIDTerminalRuleCall_5_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_5_2() { return cAccessAssignment_5_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_5_2_0() { return cAccessAlternatives_5_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_5_2_0_0() { return cAccessMustUseKeyword_5_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_5_2_0_1() { return cAccessMustNotUseKeyword_5_2_0_1; }
		
		//'alternative'
		public Keyword getAlternativeKeyword_5_3() { return cAlternativeKeyword_5_3; }
		
		//shalt=[DSLAlternative]
		public Assignment getShaltAssignment_5_4() { return cShaltAssignment_5_4; }
		
		//[DSLAlternative]
		public CrossReference getShaltDSLAlternativeCrossReference_5_4_0() { return cShaltDSLAlternativeCrossReference_5_4_0; }
		
		//ID
		public RuleCall getShaltDSLAlternativeIDTerminalRuleCall_5_4_0_1() { return cShaltDSLAlternativeIDTerminalRuleCall_5_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5_5() { return cSemicolonKeyword_5_5; }
	}
	public class DSLRuleExecutorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLRuleExecutor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cExecutorKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cExecutorAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cExecutorDSLExecutorCrossReference_0_1_0 = (CrossReference)cExecutorAssignment_0_1.eContents().get(0);
		private final RuleCall cExecutorDSLExecutorIDTerminalRuleCall_0_1_0_1 = (RuleCall)cExecutorDSLExecutorCrossReference_0_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final Alternatives cAccessAlternatives_0_2_0 = (Alternatives)cAccessAssignment_0_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_0_2_0_0 = (Keyword)cAccessAlternatives_0_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_0_2_0_1 = (Keyword)cAccessAlternatives_0_2_0.eContents().get(1);
		private final Keyword cMonitorKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cMonitorAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final CrossReference cMonitorDSLMonitorCrossReference_0_4_0 = (CrossReference)cMonitorAssignment_0_4.eContents().get(0);
		private final RuleCall cMonitorDSLMonitorIDTerminalRuleCall_0_4_0_1 = (RuleCall)cMonitorDSLMonitorCrossReference_0_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cExecutorKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cExecutorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cExecutorDSLExecutorCrossReference_1_1_0 = (CrossReference)cExecutorAssignment_1_1.eContents().get(0);
		private final RuleCall cExecutorDSLExecutorIDTerminalRuleCall_1_1_0_1 = (RuleCall)cExecutorDSLExecutorCrossReference_1_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final Alternatives cAccessAlternatives_1_2_0 = (Alternatives)cAccessAssignment_1_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_1_2_0_0 = (Keyword)cAccessAlternatives_1_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_1_2_0_1 = (Keyword)cAccessAlternatives_1_2_0.eContents().get(1);
		private final Keyword cAnalyzerKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cAnalyzerAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final CrossReference cAnalyzerDSLAnalyzerCrossReference_1_4_0 = (CrossReference)cAnalyzerAssignment_1_4.eContents().get(0);
		private final RuleCall cAnalyzerDSLAnalyzerIDTerminalRuleCall_1_4_0_1 = (RuleCall)cAnalyzerDSLAnalyzerCrossReference_1_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cExecutorKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cExecutorAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cExecutorDSLExecutorCrossReference_2_1_0 = (CrossReference)cExecutorAssignment_2_1.eContents().get(0);
		private final RuleCall cExecutorDSLExecutorIDTerminalRuleCall_2_1_0_1 = (RuleCall)cExecutorDSLExecutorCrossReference_2_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final Alternatives cAccessAlternatives_2_2_0 = (Alternatives)cAccessAssignment_2_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_2_2_0_0 = (Keyword)cAccessAlternatives_2_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_2_2_0_1 = (Keyword)cAccessAlternatives_2_2_0.eContents().get(1);
		private final Keyword cPlannerKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cPlannerAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final CrossReference cPlannerDSLPlannerCrossReference_2_4_0 = (CrossReference)cPlannerAssignment_2_4.eContents().get(0);
		private final RuleCall cPlannerDSLPlannerIDTerminalRuleCall_2_4_0_1 = (RuleCall)cPlannerDSLPlannerCrossReference_2_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cExecutorKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cExecutorAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cExecutorDSLExecutorCrossReference_3_1_0 = (CrossReference)cExecutorAssignment_3_1.eContents().get(0);
		private final RuleCall cExecutorDSLExecutorIDTerminalRuleCall_3_1_0_1 = (RuleCall)cExecutorDSLExecutorCrossReference_3_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final Alternatives cAccessAlternatives_3_2_0 = (Alternatives)cAccessAssignment_3_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_3_2_0_0 = (Keyword)cAccessAlternatives_3_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_3_2_0_1 = (Keyword)cAccessAlternatives_3_2_0.eContents().get(1);
		private final Keyword cExecutorKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cExecutor2Assignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final CrossReference cExecutor2DSLExecutorCrossReference_3_4_0 = (CrossReference)cExecutor2Assignment_3_4.eContents().get(0);
		private final RuleCall cExecutor2DSLExecutorIDTerminalRuleCall_3_4_0_1 = (RuleCall)cExecutor2DSLExecutorCrossReference_3_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cExecutorKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cExecutorAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cExecutorDSLExecutorCrossReference_4_1_0 = (CrossReference)cExecutorAssignment_4_1.eContents().get(0);
		private final RuleCall cExecutorDSLExecutorIDTerminalRuleCall_4_1_0_1 = (RuleCall)cExecutorDSLExecutorCrossReference_4_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final Alternatives cAccessAlternatives_4_2_0 = (Alternatives)cAccessAssignment_4_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_4_2_0_0 = (Keyword)cAccessAlternatives_4_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_4_2_0_1 = (Keyword)cAccessAlternatives_4_2_0.eContents().get(1);
		private final Keyword cKnowledgeKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Assignment cKnowledgeAssignment_4_4 = (Assignment)cGroup_4.eContents().get(4);
		private final CrossReference cKnowledgeDSLKnowledgeCrossReference_4_4_0 = (CrossReference)cKnowledgeAssignment_4_4.eContents().get(0);
		private final RuleCall cKnowledgeDSLKnowledgeIDTerminalRuleCall_4_4_0_1 = (RuleCall)cKnowledgeDSLKnowledgeCrossReference_4_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4_5 = (Keyword)cGroup_4.eContents().get(5);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Keyword cExecutorKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cExecutorAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cExecutorDSLExecutorCrossReference_5_1_0 = (CrossReference)cExecutorAssignment_5_1.eContents().get(0);
		private final RuleCall cExecutorDSLExecutorIDTerminalRuleCall_5_1_0_1 = (RuleCall)cExecutorDSLExecutorCrossReference_5_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final Alternatives cAccessAlternatives_5_2_0 = (Alternatives)cAccessAssignment_5_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_5_2_0_0 = (Keyword)cAccessAlternatives_5_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_5_2_0_1 = (Keyword)cAccessAlternatives_5_2_0.eContents().get(1);
		private final Keyword cEffectorKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Assignment cEffectorAssignment_5_4 = (Assignment)cGroup_5.eContents().get(4);
		private final CrossReference cEffectorDSLEffectorCrossReference_5_4_0 = (CrossReference)cEffectorAssignment_5_4.eContents().get(0);
		private final RuleCall cEffectorDSLEffectorIDTerminalRuleCall_5_4_0_1 = (RuleCall)cEffectorDSLEffectorCrossReference_5_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5_5 = (Keyword)cGroup_5.eContents().get(5);
		
		//DSLRuleExecutor:
		//	'executor' executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'monitor' monitor=[DSLMonitor] ';' | 'executor'
		//	executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'analyzer' analyzer=[DSLAnalyzer] ';' | 'executor'
		//	executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'planner' planner=[DSLPlanner] ';' | 'executor'
		//	executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'executor' executor2=[DSLExecutor] ';' | 'executor'
		//	executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'knowledge' knowledge=[DSLKnowledge] ';' | 'executor'
		//	executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'effector' effector=[DSLEffector] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'executor' executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'monitor' monitor=[DSLMonitor] ';' | 'executor'
		//executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'analyzer' analyzer=[DSLAnalyzer] ';' | 'executor'
		//executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'planner' planner=[DSLPlanner] ';' | 'executor'
		//executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'executor' executor2=[DSLExecutor] ';' | 'executor'
		//executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'knowledge' knowledge=[DSLKnowledge] ';' | 'executor'
		//executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'effector' effector=[DSLEffector] ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'executor' executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'monitor' monitor=[DSLMonitor] ';'
		public Group getGroup_0() { return cGroup_0; }
		
		//'executor'
		public Keyword getExecutorKeyword_0_0() { return cExecutorKeyword_0_0; }
		
		//executor=[DSLExecutor]
		public Assignment getExecutorAssignment_0_1() { return cExecutorAssignment_0_1; }
		
		//[DSLExecutor]
		public CrossReference getExecutorDSLExecutorCrossReference_0_1_0() { return cExecutorDSLExecutorCrossReference_0_1_0; }
		
		//ID
		public RuleCall getExecutorDSLExecutorIDTerminalRuleCall_0_1_0_1() { return cExecutorDSLExecutorIDTerminalRuleCall_0_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_0_2() { return cAccessAssignment_0_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_0_2_0() { return cAccessAlternatives_0_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_0_2_0_0() { return cAccessMustUseKeyword_0_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_0_2_0_1() { return cAccessMustNotUseKeyword_0_2_0_1; }
		
		//'monitor'
		public Keyword getMonitorKeyword_0_3() { return cMonitorKeyword_0_3; }
		
		//monitor=[DSLMonitor]
		public Assignment getMonitorAssignment_0_4() { return cMonitorAssignment_0_4; }
		
		//[DSLMonitor]
		public CrossReference getMonitorDSLMonitorCrossReference_0_4_0() { return cMonitorDSLMonitorCrossReference_0_4_0; }
		
		//ID
		public RuleCall getMonitorDSLMonitorIDTerminalRuleCall_0_4_0_1() { return cMonitorDSLMonitorIDTerminalRuleCall_0_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_0_5() { return cSemicolonKeyword_0_5; }
		
		//'executor' executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'analyzer' analyzer=[DSLAnalyzer] ';'
		public Group getGroup_1() { return cGroup_1; }
		
		//'executor'
		public Keyword getExecutorKeyword_1_0() { return cExecutorKeyword_1_0; }
		
		//executor=[DSLExecutor]
		public Assignment getExecutorAssignment_1_1() { return cExecutorAssignment_1_1; }
		
		//[DSLExecutor]
		public CrossReference getExecutorDSLExecutorCrossReference_1_1_0() { return cExecutorDSLExecutorCrossReference_1_1_0; }
		
		//ID
		public RuleCall getExecutorDSLExecutorIDTerminalRuleCall_1_1_0_1() { return cExecutorDSLExecutorIDTerminalRuleCall_1_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_1_2() { return cAccessAssignment_1_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_1_2_0() { return cAccessAlternatives_1_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_1_2_0_0() { return cAccessMustUseKeyword_1_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_1_2_0_1() { return cAccessMustNotUseKeyword_1_2_0_1; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_1_3() { return cAnalyzerKeyword_1_3; }
		
		//analyzer=[DSLAnalyzer]
		public Assignment getAnalyzerAssignment_1_4() { return cAnalyzerAssignment_1_4; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzerDSLAnalyzerCrossReference_1_4_0() { return cAnalyzerDSLAnalyzerCrossReference_1_4_0; }
		
		//ID
		public RuleCall getAnalyzerDSLAnalyzerIDTerminalRuleCall_1_4_0_1() { return cAnalyzerDSLAnalyzerIDTerminalRuleCall_1_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_5() { return cSemicolonKeyword_1_5; }
		
		//'executor' executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'planner' planner=[DSLPlanner] ';'
		public Group getGroup_2() { return cGroup_2; }
		
		//'executor'
		public Keyword getExecutorKeyword_2_0() { return cExecutorKeyword_2_0; }
		
		//executor=[DSLExecutor]
		public Assignment getExecutorAssignment_2_1() { return cExecutorAssignment_2_1; }
		
		//[DSLExecutor]
		public CrossReference getExecutorDSLExecutorCrossReference_2_1_0() { return cExecutorDSLExecutorCrossReference_2_1_0; }
		
		//ID
		public RuleCall getExecutorDSLExecutorIDTerminalRuleCall_2_1_0_1() { return cExecutorDSLExecutorIDTerminalRuleCall_2_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_2_2() { return cAccessAssignment_2_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_2_2_0() { return cAccessAlternatives_2_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_2_2_0_0() { return cAccessMustUseKeyword_2_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_2_2_0_1() { return cAccessMustNotUseKeyword_2_2_0_1; }
		
		//'planner'
		public Keyword getPlannerKeyword_2_3() { return cPlannerKeyword_2_3; }
		
		//planner=[DSLPlanner]
		public Assignment getPlannerAssignment_2_4() { return cPlannerAssignment_2_4; }
		
		//[DSLPlanner]
		public CrossReference getPlannerDSLPlannerCrossReference_2_4_0() { return cPlannerDSLPlannerCrossReference_2_4_0; }
		
		//ID
		public RuleCall getPlannerDSLPlannerIDTerminalRuleCall_2_4_0_1() { return cPlannerDSLPlannerIDTerminalRuleCall_2_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2_5() { return cSemicolonKeyword_2_5; }
		
		//'executor' executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'executor' executor2=[DSLExecutor] ';'
		public Group getGroup_3() { return cGroup_3; }
		
		//'executor'
		public Keyword getExecutorKeyword_3_0() { return cExecutorKeyword_3_0; }
		
		//executor=[DSLExecutor]
		public Assignment getExecutorAssignment_3_1() { return cExecutorAssignment_3_1; }
		
		//[DSLExecutor]
		public CrossReference getExecutorDSLExecutorCrossReference_3_1_0() { return cExecutorDSLExecutorCrossReference_3_1_0; }
		
		//ID
		public RuleCall getExecutorDSLExecutorIDTerminalRuleCall_3_1_0_1() { return cExecutorDSLExecutorIDTerminalRuleCall_3_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_3_2() { return cAccessAssignment_3_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_3_2_0() { return cAccessAlternatives_3_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_3_2_0_0() { return cAccessMustUseKeyword_3_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_3_2_0_1() { return cAccessMustNotUseKeyword_3_2_0_1; }
		
		//'executor'
		public Keyword getExecutorKeyword_3_3() { return cExecutorKeyword_3_3; }
		
		//executor2=[DSLExecutor]
		public Assignment getExecutor2Assignment_3_4() { return cExecutor2Assignment_3_4; }
		
		//[DSLExecutor]
		public CrossReference getExecutor2DSLExecutorCrossReference_3_4_0() { return cExecutor2DSLExecutorCrossReference_3_4_0; }
		
		//ID
		public RuleCall getExecutor2DSLExecutorIDTerminalRuleCall_3_4_0_1() { return cExecutor2DSLExecutorIDTerminalRuleCall_3_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3_5() { return cSemicolonKeyword_3_5; }
		
		//'executor' executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'knowledge' knowledge=[DSLKnowledge] ';'
		public Group getGroup_4() { return cGroup_4; }
		
		//'executor'
		public Keyword getExecutorKeyword_4_0() { return cExecutorKeyword_4_0; }
		
		//executor=[DSLExecutor]
		public Assignment getExecutorAssignment_4_1() { return cExecutorAssignment_4_1; }
		
		//[DSLExecutor]
		public CrossReference getExecutorDSLExecutorCrossReference_4_1_0() { return cExecutorDSLExecutorCrossReference_4_1_0; }
		
		//ID
		public RuleCall getExecutorDSLExecutorIDTerminalRuleCall_4_1_0_1() { return cExecutorDSLExecutorIDTerminalRuleCall_4_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_4_2() { return cAccessAssignment_4_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_4_2_0() { return cAccessAlternatives_4_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_4_2_0_0() { return cAccessMustUseKeyword_4_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_4_2_0_1() { return cAccessMustNotUseKeyword_4_2_0_1; }
		
		//'knowledge'
		public Keyword getKnowledgeKeyword_4_3() { return cKnowledgeKeyword_4_3; }
		
		//knowledge=[DSLKnowledge]
		public Assignment getKnowledgeAssignment_4_4() { return cKnowledgeAssignment_4_4; }
		
		//[DSLKnowledge]
		public CrossReference getKnowledgeDSLKnowledgeCrossReference_4_4_0() { return cKnowledgeDSLKnowledgeCrossReference_4_4_0; }
		
		//ID
		public RuleCall getKnowledgeDSLKnowledgeIDTerminalRuleCall_4_4_0_1() { return cKnowledgeDSLKnowledgeIDTerminalRuleCall_4_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_4_5() { return cSemicolonKeyword_4_5; }
		
		//'executor' executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'effector' effector=[DSLEffector] ';'
		public Group getGroup_5() { return cGroup_5; }
		
		//'executor'
		public Keyword getExecutorKeyword_5_0() { return cExecutorKeyword_5_0; }
		
		//executor=[DSLExecutor]
		public Assignment getExecutorAssignment_5_1() { return cExecutorAssignment_5_1; }
		
		//[DSLExecutor]
		public CrossReference getExecutorDSLExecutorCrossReference_5_1_0() { return cExecutorDSLExecutorCrossReference_5_1_0; }
		
		//ID
		public RuleCall getExecutorDSLExecutorIDTerminalRuleCall_5_1_0_1() { return cExecutorDSLExecutorIDTerminalRuleCall_5_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_5_2() { return cAccessAssignment_5_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_5_2_0() { return cAccessAlternatives_5_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_5_2_0_0() { return cAccessMustUseKeyword_5_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_5_2_0_1() { return cAccessMustNotUseKeyword_5_2_0_1; }
		
		//'effector'
		public Keyword getEffectorKeyword_5_3() { return cEffectorKeyword_5_3; }
		
		//effector=[DSLEffector]
		public Assignment getEffectorAssignment_5_4() { return cEffectorAssignment_5_4; }
		
		//[DSLEffector]
		public CrossReference getEffectorDSLEffectorCrossReference_5_4_0() { return cEffectorDSLEffectorCrossReference_5_4_0; }
		
		//ID
		public RuleCall getEffectorDSLEffectorIDTerminalRuleCall_5_4_0_1() { return cEffectorDSLEffectorIDTerminalRuleCall_5_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5_5() { return cSemicolonKeyword_5_5; }
	}
	public class DSLRuleKnowledgeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLRuleKnowledge");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cKnowledgeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cKnowledgeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cKnowledgeDSLKnowledgeCrossReference_0_1_0 = (CrossReference)cKnowledgeAssignment_0_1.eContents().get(0);
		private final RuleCall cKnowledgeDSLKnowledgeIDTerminalRuleCall_0_1_0_1 = (RuleCall)cKnowledgeDSLKnowledgeCrossReference_0_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final Alternatives cAccessAlternatives_0_2_0 = (Alternatives)cAccessAssignment_0_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_0_2_0_0 = (Keyword)cAccessAlternatives_0_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_0_2_0_1 = (Keyword)cAccessAlternatives_0_2_0.eContents().get(1);
		private final Keyword cMonitorKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cMonitorAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final CrossReference cMonitorDSLMonitorCrossReference_0_4_0 = (CrossReference)cMonitorAssignment_0_4.eContents().get(0);
		private final RuleCall cMonitorDSLMonitorIDTerminalRuleCall_0_4_0_1 = (RuleCall)cMonitorDSLMonitorCrossReference_0_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cKnowledgeKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cKnowledgeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cKnowledgeDSLKnowledgeCrossReference_1_1_0 = (CrossReference)cKnowledgeAssignment_1_1.eContents().get(0);
		private final RuleCall cKnowledgeDSLKnowledgeIDTerminalRuleCall_1_1_0_1 = (RuleCall)cKnowledgeDSLKnowledgeCrossReference_1_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final Alternatives cAccessAlternatives_1_2_0 = (Alternatives)cAccessAssignment_1_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_1_2_0_0 = (Keyword)cAccessAlternatives_1_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_1_2_0_1 = (Keyword)cAccessAlternatives_1_2_0.eContents().get(1);
		private final Keyword cAnalyzerKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cAnalyzerAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final CrossReference cAnalyzerDSLAnalyzerCrossReference_1_4_0 = (CrossReference)cAnalyzerAssignment_1_4.eContents().get(0);
		private final RuleCall cAnalyzerDSLAnalyzerIDTerminalRuleCall_1_4_0_1 = (RuleCall)cAnalyzerDSLAnalyzerCrossReference_1_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cKnowledgeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cKnowledgeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cKnowledgeDSLKnowledgeCrossReference_2_1_0 = (CrossReference)cKnowledgeAssignment_2_1.eContents().get(0);
		private final RuleCall cKnowledgeDSLKnowledgeIDTerminalRuleCall_2_1_0_1 = (RuleCall)cKnowledgeDSLKnowledgeCrossReference_2_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final Alternatives cAccessAlternatives_2_2_0 = (Alternatives)cAccessAssignment_2_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_2_2_0_0 = (Keyword)cAccessAlternatives_2_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_2_2_0_1 = (Keyword)cAccessAlternatives_2_2_0.eContents().get(1);
		private final Keyword cPlannerKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cPlannerAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final CrossReference cPlannerDSLPlannerCrossReference_2_4_0 = (CrossReference)cPlannerAssignment_2_4.eContents().get(0);
		private final RuleCall cPlannerDSLPlannerIDTerminalRuleCall_2_4_0_1 = (RuleCall)cPlannerDSLPlannerCrossReference_2_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cKnowledgeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cKnowledgeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cKnowledgeDSLKnowledgeCrossReference_3_1_0 = (CrossReference)cKnowledgeAssignment_3_1.eContents().get(0);
		private final RuleCall cKnowledgeDSLKnowledgeIDTerminalRuleCall_3_1_0_1 = (RuleCall)cKnowledgeDSLKnowledgeCrossReference_3_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final Alternatives cAccessAlternatives_3_2_0 = (Alternatives)cAccessAssignment_3_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_3_2_0_0 = (Keyword)cAccessAlternatives_3_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_3_2_0_1 = (Keyword)cAccessAlternatives_3_2_0.eContents().get(1);
		private final Keyword cExecutorKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cExecutorAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final CrossReference cExecutorDSLExecutorCrossReference_3_4_0 = (CrossReference)cExecutorAssignment_3_4.eContents().get(0);
		private final RuleCall cExecutorDSLExecutorIDTerminalRuleCall_3_4_0_1 = (RuleCall)cExecutorDSLExecutorCrossReference_3_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		
		//DSLRuleKnowledge:
		//	'knowledge' knowledge=[DSLKnowledge] access=('must-use' | 'must-not-use') 'monitor' monitor=[DSLMonitor] ';' |
		//	'knowledge' knowledge=[DSLKnowledge] access=('must-use' | 'must-not-use') 'analyzer' analyzer=[DSLAnalyzer] ';' |
		//	'knowledge' knowledge=[DSLKnowledge] access=('must-use' | 'must-not-use') 'planner' planner=[DSLPlanner] ';' |
		//	'knowledge' knowledge=[DSLKnowledge] access=('must-use' | 'must-not-use') 'executor' executor=[DSLExecutor] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'knowledge' knowledge=[DSLKnowledge] access=('must-use' | 'must-not-use') 'monitor' monitor=[DSLMonitor] ';' |
		//'knowledge' knowledge=[DSLKnowledge] access=('must-use' | 'must-not-use') 'analyzer' analyzer=[DSLAnalyzer] ';' |
		//'knowledge' knowledge=[DSLKnowledge] access=('must-use' | 'must-not-use') 'planner' planner=[DSLPlanner] ';' |
		//'knowledge' knowledge=[DSLKnowledge] access=('must-use' | 'must-not-use') 'executor' executor=[DSLExecutor] ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'knowledge' knowledge=[DSLKnowledge] access=('must-use' | 'must-not-use') 'monitor' monitor=[DSLMonitor] ';'
		public Group getGroup_0() { return cGroup_0; }
		
		//'knowledge'
		public Keyword getKnowledgeKeyword_0_0() { return cKnowledgeKeyword_0_0; }
		
		//knowledge=[DSLKnowledge]
		public Assignment getKnowledgeAssignment_0_1() { return cKnowledgeAssignment_0_1; }
		
		//[DSLKnowledge]
		public CrossReference getKnowledgeDSLKnowledgeCrossReference_0_1_0() { return cKnowledgeDSLKnowledgeCrossReference_0_1_0; }
		
		//ID
		public RuleCall getKnowledgeDSLKnowledgeIDTerminalRuleCall_0_1_0_1() { return cKnowledgeDSLKnowledgeIDTerminalRuleCall_0_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_0_2() { return cAccessAssignment_0_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_0_2_0() { return cAccessAlternatives_0_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_0_2_0_0() { return cAccessMustUseKeyword_0_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_0_2_0_1() { return cAccessMustNotUseKeyword_0_2_0_1; }
		
		//'monitor'
		public Keyword getMonitorKeyword_0_3() { return cMonitorKeyword_0_3; }
		
		//monitor=[DSLMonitor]
		public Assignment getMonitorAssignment_0_4() { return cMonitorAssignment_0_4; }
		
		//[DSLMonitor]
		public CrossReference getMonitorDSLMonitorCrossReference_0_4_0() { return cMonitorDSLMonitorCrossReference_0_4_0; }
		
		//ID
		public RuleCall getMonitorDSLMonitorIDTerminalRuleCall_0_4_0_1() { return cMonitorDSLMonitorIDTerminalRuleCall_0_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_0_5() { return cSemicolonKeyword_0_5; }
		
		//'knowledge' knowledge=[DSLKnowledge] access=('must-use' | 'must-not-use') 'analyzer' analyzer=[DSLAnalyzer] ';'
		public Group getGroup_1() { return cGroup_1; }
		
		//'knowledge'
		public Keyword getKnowledgeKeyword_1_0() { return cKnowledgeKeyword_1_0; }
		
		//knowledge=[DSLKnowledge]
		public Assignment getKnowledgeAssignment_1_1() { return cKnowledgeAssignment_1_1; }
		
		//[DSLKnowledge]
		public CrossReference getKnowledgeDSLKnowledgeCrossReference_1_1_0() { return cKnowledgeDSLKnowledgeCrossReference_1_1_0; }
		
		//ID
		public RuleCall getKnowledgeDSLKnowledgeIDTerminalRuleCall_1_1_0_1() { return cKnowledgeDSLKnowledgeIDTerminalRuleCall_1_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_1_2() { return cAccessAssignment_1_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_1_2_0() { return cAccessAlternatives_1_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_1_2_0_0() { return cAccessMustUseKeyword_1_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_1_2_0_1() { return cAccessMustNotUseKeyword_1_2_0_1; }
		
		//'analyzer'
		public Keyword getAnalyzerKeyword_1_3() { return cAnalyzerKeyword_1_3; }
		
		//analyzer=[DSLAnalyzer]
		public Assignment getAnalyzerAssignment_1_4() { return cAnalyzerAssignment_1_4; }
		
		//[DSLAnalyzer]
		public CrossReference getAnalyzerDSLAnalyzerCrossReference_1_4_0() { return cAnalyzerDSLAnalyzerCrossReference_1_4_0; }
		
		//ID
		public RuleCall getAnalyzerDSLAnalyzerIDTerminalRuleCall_1_4_0_1() { return cAnalyzerDSLAnalyzerIDTerminalRuleCall_1_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_5() { return cSemicolonKeyword_1_5; }
		
		//'knowledge' knowledge=[DSLKnowledge] access=('must-use' | 'must-not-use') 'planner' planner=[DSLPlanner] ';'
		public Group getGroup_2() { return cGroup_2; }
		
		//'knowledge'
		public Keyword getKnowledgeKeyword_2_0() { return cKnowledgeKeyword_2_0; }
		
		//knowledge=[DSLKnowledge]
		public Assignment getKnowledgeAssignment_2_1() { return cKnowledgeAssignment_2_1; }
		
		//[DSLKnowledge]
		public CrossReference getKnowledgeDSLKnowledgeCrossReference_2_1_0() { return cKnowledgeDSLKnowledgeCrossReference_2_1_0; }
		
		//ID
		public RuleCall getKnowledgeDSLKnowledgeIDTerminalRuleCall_2_1_0_1() { return cKnowledgeDSLKnowledgeIDTerminalRuleCall_2_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_2_2() { return cAccessAssignment_2_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_2_2_0() { return cAccessAlternatives_2_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_2_2_0_0() { return cAccessMustUseKeyword_2_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_2_2_0_1() { return cAccessMustNotUseKeyword_2_2_0_1; }
		
		//'planner'
		public Keyword getPlannerKeyword_2_3() { return cPlannerKeyword_2_3; }
		
		//planner=[DSLPlanner]
		public Assignment getPlannerAssignment_2_4() { return cPlannerAssignment_2_4; }
		
		//[DSLPlanner]
		public CrossReference getPlannerDSLPlannerCrossReference_2_4_0() { return cPlannerDSLPlannerCrossReference_2_4_0; }
		
		//ID
		public RuleCall getPlannerDSLPlannerIDTerminalRuleCall_2_4_0_1() { return cPlannerDSLPlannerIDTerminalRuleCall_2_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2_5() { return cSemicolonKeyword_2_5; }
		
		//'knowledge' knowledge=[DSLKnowledge] access=('must-use' | 'must-not-use') 'executor' executor=[DSLExecutor] ';'
		public Group getGroup_3() { return cGroup_3; }
		
		//'knowledge'
		public Keyword getKnowledgeKeyword_3_0() { return cKnowledgeKeyword_3_0; }
		
		//knowledge=[DSLKnowledge]
		public Assignment getKnowledgeAssignment_3_1() { return cKnowledgeAssignment_3_1; }
		
		//[DSLKnowledge]
		public CrossReference getKnowledgeDSLKnowledgeCrossReference_3_1_0() { return cKnowledgeDSLKnowledgeCrossReference_3_1_0; }
		
		//ID
		public RuleCall getKnowledgeDSLKnowledgeIDTerminalRuleCall_3_1_0_1() { return cKnowledgeDSLKnowledgeIDTerminalRuleCall_3_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_3_2() { return cAccessAssignment_3_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_3_2_0() { return cAccessAlternatives_3_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_3_2_0_0() { return cAccessMustUseKeyword_3_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_3_2_0_1() { return cAccessMustNotUseKeyword_3_2_0_1; }
		
		//'executor'
		public Keyword getExecutorKeyword_3_3() { return cExecutorKeyword_3_3; }
		
		//executor=[DSLExecutor]
		public Assignment getExecutorAssignment_3_4() { return cExecutorAssignment_3_4; }
		
		//[DSLExecutor]
		public CrossReference getExecutorDSLExecutorCrossReference_3_4_0() { return cExecutorDSLExecutorCrossReference_3_4_0; }
		
		//ID
		public RuleCall getExecutorDSLExecutorIDTerminalRuleCall_3_4_0_1() { return cExecutorDSLExecutorIDTerminalRuleCall_3_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3_5() { return cSemicolonKeyword_3_5; }
	}
	public class DSLRuleMOElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLRuleMO");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSensorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSensorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSensorDSLSensorCrossReference_1_0 = (CrossReference)cSensorAssignment_1.eContents().get(0);
		private final RuleCall cSensorDSLSensorIDTerminalRuleCall_1_0_1 = (RuleCall)cSensorDSLSensorCrossReference_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cAccessAlternatives_2_0 = (Alternatives)cAccessAssignment_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_2_0_0 = (Keyword)cAccessAlternatives_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_2_0_1 = (Keyword)cAccessAlternatives_2_0.eContents().get(1);
		private final Keyword cMeasuredOutputKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMeasuredAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cMeasuredDSLMeasuredOutputCrossReference_4_0 = (CrossReference)cMeasuredAssignment_4.eContents().get(0);
		private final RuleCall cMeasuredDSLMeasuredOutputIDTerminalRuleCall_4_0_1 = (RuleCall)cMeasuredDSLMeasuredOutputCrossReference_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DSLRuleMO:
		//	'sensor' sensor=[DSLSensor] access=('must-use' | 'must-not-use') 'measured-output' measured=[DSLMeasuredOutput] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'sensor' sensor=[DSLSensor] access=('must-use' | 'must-not-use') 'measured-output' measured=[DSLMeasuredOutput] ';'
		public Group getGroup() { return cGroup; }
		
		//'sensor'
		public Keyword getSensorKeyword_0() { return cSensorKeyword_0; }
		
		//sensor=[DSLSensor]
		public Assignment getSensorAssignment_1() { return cSensorAssignment_1; }
		
		//[DSLSensor]
		public CrossReference getSensorDSLSensorCrossReference_1_0() { return cSensorDSLSensorCrossReference_1_0; }
		
		//ID
		public RuleCall getSensorDSLSensorIDTerminalRuleCall_1_0_1() { return cSensorDSLSensorIDTerminalRuleCall_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_2() { return cAccessAssignment_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_2_0() { return cAccessAlternatives_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_2_0_0() { return cAccessMustUseKeyword_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_2_0_1() { return cAccessMustNotUseKeyword_2_0_1; }
		
		//'measured-output'
		public Keyword getMeasuredOutputKeyword_3() { return cMeasuredOutputKeyword_3; }
		
		//measured=[DSLMeasuredOutput]
		public Assignment getMeasuredAssignment_4() { return cMeasuredAssignment_4; }
		
		//[DSLMeasuredOutput]
		public CrossReference getMeasuredDSLMeasuredOutputCrossReference_4_0() { return cMeasuredDSLMeasuredOutputCrossReference_4_0; }
		
		//ID
		public RuleCall getMeasuredDSLMeasuredOutputIDTerminalRuleCall_4_0_1() { return cMeasuredDSLMeasuredOutputIDTerminalRuleCall_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class DSLRuleGenericElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLRuleGeneric");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEffectorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEffectorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cEffectorDSLEffectorCrossReference_1_0 = (CrossReference)cEffectorAssignment_1.eContents().get(0);
		private final RuleCall cEffectorDSLEffectorIDTerminalRuleCall_1_0_1 = (RuleCall)cEffectorDSLEffectorCrossReference_1_0.eContents().get(1);
		private final Assignment cAccessAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cAccessAlternatives_2_0 = (Alternatives)cAccessAssignment_2.eContents().get(0);
		private final Keyword cAccessMustUseKeyword_2_0_0 = (Keyword)cAccessAlternatives_2_0.eContents().get(0);
		private final Keyword cAccessMustNotUseKeyword_2_0_1 = (Keyword)cAccessAlternatives_2_0.eContents().get(1);
		private final Keyword cComponentKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cComponentAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cComponentDCLComponentCrossReference_4_0 = (CrossReference)cComponentAssignment_4.eContents().get(0);
		private final RuleCall cComponentDCLComponentIDTerminalRuleCall_4_0_1 = (RuleCall)cComponentDCLComponentCrossReference_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DSLRuleGeneric:
		//	'effector' effector=[DSLEffector] access=('must-use' | 'must-not-use') 'component' component=[DCLComponent] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'effector' effector=[DSLEffector] access=('must-use' | 'must-not-use') 'component' component=[DCLComponent] ';'
		public Group getGroup() { return cGroup; }
		
		//'effector'
		public Keyword getEffectorKeyword_0() { return cEffectorKeyword_0; }
		
		//effector=[DSLEffector]
		public Assignment getEffectorAssignment_1() { return cEffectorAssignment_1; }
		
		//[DSLEffector]
		public CrossReference getEffectorDSLEffectorCrossReference_1_0() { return cEffectorDSLEffectorCrossReference_1_0; }
		
		//ID
		public RuleCall getEffectorDSLEffectorIDTerminalRuleCall_1_0_1() { return cEffectorDSLEffectorIDTerminalRuleCall_1_0_1; }
		
		//access=('must-use' | 'must-not-use')
		public Assignment getAccessAssignment_2() { return cAccessAssignment_2; }
		
		//('must-use' | 'must-not-use')
		public Alternatives getAccessAlternatives_2_0() { return cAccessAlternatives_2_0; }
		
		//'must-use'
		public Keyword getAccessMustUseKeyword_2_0_0() { return cAccessMustUseKeyword_2_0_0; }
		
		//'must-not-use'
		public Keyword getAccessMustNotUseKeyword_2_0_1() { return cAccessMustNotUseKeyword_2_0_1; }
		
		//'component'
		public Keyword getComponentKeyword_3() { return cComponentKeyword_3; }
		
		//component=[DCLComponent]
		public Assignment getComponentAssignment_4() { return cComponentAssignment_4; }
		
		//[DCLComponent]
		public CrossReference getComponentDCLComponentCrossReference_4_0() { return cComponentDCLComponentCrossReference_4_0; }
		
		//ID
		public RuleCall getComponentDCLComponentIDTerminalRuleCall_4_0_1() { return cComponentDCLComponentIDTerminalRuleCall_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class DSLManagingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLManaging");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cManagingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cManagerControllerAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cManagerControllerDSLManagerControllerParserRuleCall_3_0 = (RuleCall)cManagerControllerAssignment_3.eContents().get(0);
		private final Assignment cControllerAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cControllerDSLControllerParserRuleCall_4_0 = (RuleCall)cControllerAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DSLManaging:
		//	'Managing' name=ID '{'
		//	managerController+=DSLManagerController*
		//	controller+=DSLController*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Managing' name=ID '{' managerController+=DSLManagerController* controller+=DSLController* '}'
		public Group getGroup() { return cGroup; }
		
		//'Managing'
		public Keyword getManagingKeyword_0() { return cManagingKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//managerController+=DSLManagerController*
		public Assignment getManagerControllerAssignment_3() { return cManagerControllerAssignment_3; }
		
		//DSLManagerController
		public RuleCall getManagerControllerDSLManagerControllerParserRuleCall_3_0() { return cManagerControllerDSLManagerControllerParserRuleCall_3_0; }
		
		//controller+=DSLController*
		public Assignment getControllerAssignment_4() { return cControllerAssignment_4; }
		
		//DSLController
		public RuleCall getControllerDSLControllerParserRuleCall_4_0() { return cControllerDSLControllerParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DSLManagedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLManaged");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cManagedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cStructureElementsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cStructureElementsDCLStructureElementParserRuleCall_3_0 = (RuleCall)cStructureElementsAssignment_3.eContents().get(0);
		private final Assignment cSensorAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSensorDSLSensorParserRuleCall_4_0 = (RuleCall)cSensorAssignment_4.eContents().get(0);
		private final Assignment cEffectorAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEffectorDSLEffectorParserRuleCall_5_0 = (RuleCall)cEffectorAssignment_5.eContents().get(0);
		private final Assignment cMeasuredOutputAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMeasuredOutputDSLMeasuredOutputParserRuleCall_6_0 = (RuleCall)cMeasuredOutputAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//DSLManaged:
		//	'Managed' name=ID '{'
		//	structureElements+=DCLStructureElement*
		//	sensor+=DSLSensor*
		//	effector+=DSLEffector*
		//	measuredOutput+=DSLMeasuredOutput*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Managed' name=ID '{' structureElements+=DCLStructureElement* sensor+=DSLSensor* effector+=DSLEffector*
		//measuredOutput+=DSLMeasuredOutput* '}'
		public Group getGroup() { return cGroup; }
		
		//'Managed'
		public Keyword getManagedKeyword_0() { return cManagedKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//structureElements+=DCLStructureElement*
		public Assignment getStructureElementsAssignment_3() { return cStructureElementsAssignment_3; }
		
		//DCLStructureElement
		public RuleCall getStructureElementsDCLStructureElementParserRuleCall_3_0() { return cStructureElementsDCLStructureElementParserRuleCall_3_0; }
		
		//sensor+=DSLSensor*
		public Assignment getSensorAssignment_4() { return cSensorAssignment_4; }
		
		//DSLSensor
		public RuleCall getSensorDSLSensorParserRuleCall_4_0() { return cSensorDSLSensorParserRuleCall_4_0; }
		
		//effector+=DSLEffector*
		public Assignment getEffectorAssignment_5() { return cEffectorAssignment_5; }
		
		//DSLEffector
		public RuleCall getEffectorDSLEffectorParserRuleCall_5_0() { return cEffectorDSLEffectorParserRuleCall_5_0; }
		
		//measuredOutput+=DSLMeasuredOutput*
		public Assignment getMeasuredOutputAssignment_6() { return cMeasuredOutputAssignment_6; }
		
		//DSLMeasuredOutput
		public RuleCall getMeasuredOutputDSLMeasuredOutputParserRuleCall_6_0() { return cMeasuredOutputDSLMeasuredOutputParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class DSLManagerControllerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLManagerController");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLoopManagerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cControllerAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cControllerDSLControllerParserRuleCall_3_0 = (RuleCall)cControllerAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//DSLManagerController:
		//	'LoopManager' name=ID '{'
		//	controller+=DSLController+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'LoopManager' name=ID '{' controller+=DSLController+ '}'
		public Group getGroup() { return cGroup; }
		
		//'LoopManager'
		public Keyword getLoopManagerKeyword_0() { return cLoopManagerKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//controller+=DSLController+
		public Assignment getControllerAssignment_3() { return cControllerAssignment_3; }
		
		//DSLController
		public RuleCall getControllerDSLControllerParserRuleCall_3_0() { return cControllerDSLControllerParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class DSLControllerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLController");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLoopKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDomainAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDomainDSLDomainRuleParserRuleCall_2_0 = (RuleCall)cDomainAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMonitorAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMonitorDSLMonitorParserRuleCall_4_0 = (RuleCall)cMonitorAssignment_4.eContents().get(0);
		private final Assignment cAnalyzerAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAnalyzerDSLAnalyzerParserRuleCall_5_0 = (RuleCall)cAnalyzerAssignment_5.eContents().get(0);
		private final Assignment cPlannerAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPlannerDSLPlannerParserRuleCall_6_0 = (RuleCall)cPlannerAssignment_6.eContents().get(0);
		private final Assignment cExecutorAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cExecutorDSLExecutorParserRuleCall_7_0 = (RuleCall)cExecutorAssignment_7.eContents().get(0);
		private final Assignment cKnowledgeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cKnowledgeDSLKnowledgeParserRuleCall_8_0 = (RuleCall)cKnowledgeAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//DSLController:
		//	'Loop' name=ID domain=DSLDomainRule? '{'
		//	monitor+=DSLMonitor*
		//	analyzer+=DSLAnalyzer*
		//	planner+=DSLPlanner*
		//	executor+=DSLExecutor*
		//	knowledge+=DSLKnowledge*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Loop' name=ID domain=DSLDomainRule? '{' monitor+=DSLMonitor* analyzer+=DSLAnalyzer* planner+=DSLPlanner*
		//executor+=DSLExecutor* knowledge+=DSLKnowledge* '}'
		public Group getGroup() { return cGroup; }
		
		//'Loop'
		public Keyword getLoopKeyword_0() { return cLoopKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//domain=DSLDomainRule?
		public Assignment getDomainAssignment_2() { return cDomainAssignment_2; }
		
		//DSLDomainRule
		public RuleCall getDomainDSLDomainRuleParserRuleCall_2_0() { return cDomainDSLDomainRuleParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//monitor+=DSLMonitor*
		public Assignment getMonitorAssignment_4() { return cMonitorAssignment_4; }
		
		//DSLMonitor
		public RuleCall getMonitorDSLMonitorParserRuleCall_4_0() { return cMonitorDSLMonitorParserRuleCall_4_0; }
		
		//analyzer+=DSLAnalyzer*
		public Assignment getAnalyzerAssignment_5() { return cAnalyzerAssignment_5; }
		
		//DSLAnalyzer
		public RuleCall getAnalyzerDSLAnalyzerParserRuleCall_5_0() { return cAnalyzerDSLAnalyzerParserRuleCall_5_0; }
		
		//planner+=DSLPlanner*
		public Assignment getPlannerAssignment_6() { return cPlannerAssignment_6; }
		
		//DSLPlanner
		public RuleCall getPlannerDSLPlannerParserRuleCall_6_0() { return cPlannerDSLPlannerParserRuleCall_6_0; }
		
		//executor+=DSLExecutor*
		public Assignment getExecutorAssignment_7() { return cExecutorAssignment_7; }
		
		//DSLExecutor
		public RuleCall getExecutorDSLExecutorParserRuleCall_7_0() { return cExecutorDSLExecutorParserRuleCall_7_0; }
		
		//knowledge+=DSLKnowledge*
		public Assignment getKnowledgeAssignment_8() { return cKnowledgeAssignment_8; }
		
		//DSLKnowledge
		public RuleCall getKnowledgeDSLKnowledgeParserRuleCall_8_0() { return cKnowledgeDSLKnowledgeParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class DSLDomainRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLDomainRule");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cValueAlternatives_0 = (Alternatives)cValueAssignment.eContents().get(0);
		private final RuleCall cValueIDTerminalRuleCall_0_0 = (RuleCall)cValueAlternatives_0.eContents().get(0);
		private final Keyword cValueWithDomainRulesKeyword_0_1 = (Keyword)cValueAlternatives_0.eContents().get(1);
		
		//DSLDomainRule:
		//	value=(ID | 'withDomainRules');
		@Override public ParserRule getRule() { return rule; }
		
		//value=(ID | 'withDomainRules')
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//(ID | 'withDomainRules')
		public Alternatives getValueAlternatives_0() { return cValueAlternatives_0; }
		
		//ID
		public RuleCall getValueIDTerminalRuleCall_0_0() { return cValueIDTerminalRuleCall_0_0; }
		
		//'withDomainRules'
		public Keyword getValueWithDomainRulesKeyword_0_1() { return cValueWithDomainRulesKeyword_0_1; }
	}
	public class DSLMonitorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLMonitor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMonitorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DSLMonitor:
		//	'Monitor' name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Monitor' name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'Monitor'
		public Keyword getMonitorKeyword_0() { return cMonitorKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class DSLAnalyzerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLAnalyzer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnalyzerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DSLAnalyzer:
		//	'Analyzer' name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Analyzer' name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'Analyzer'
		public Keyword getAnalyzerKeyword_0() { return cAnalyzerKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class DSLPlannerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLPlanner");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPlannerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DSLPlanner:
		//	'Planner' name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Planner' name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'Planner'
		public Keyword getPlannerKeyword_0() { return cPlannerKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class DSLExecutorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLExecutor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExecutorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DSLExecutor:
		//	'Executor' name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Executor' name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'Executor'
		public Keyword getExecutorKeyword_0() { return cExecutorKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class DSLKnowledgeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLKnowledge");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cKnowledgeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cReferenceInputAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cReferenceInputDSLReferenceInputParserRuleCall_3_0 = (RuleCall)cReferenceInputAssignment_3.eContents().get(0);
		private final Assignment cShaltAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cShaltDSLAlternativeParserRuleCall_4_0 = (RuleCall)cShaltAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DSLKnowledge:
		//	'Knowledge' name=ID '{'
		//	referenceInput+=DSLReferenceInput*
		//	shalt+=DSLAlternative*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Knowledge' name=ID '{' referenceInput+=DSLReferenceInput* shalt+=DSLAlternative* '}'
		public Group getGroup() { return cGroup; }
		
		//'Knowledge'
		public Keyword getKnowledgeKeyword_0() { return cKnowledgeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//referenceInput+=DSLReferenceInput*
		public Assignment getReferenceInputAssignment_3() { return cReferenceInputAssignment_3; }
		
		//DSLReferenceInput
		public RuleCall getReferenceInputDSLReferenceInputParserRuleCall_3_0() { return cReferenceInputDSLReferenceInputParserRuleCall_3_0; }
		
		//shalt+=DSLAlternative*
		public Assignment getShaltAssignment_4() { return cShaltAssignment_4; }
		
		//DSLAlternative
		public RuleCall getShaltDSLAlternativeParserRuleCall_4_0() { return cShaltDSLAlternativeParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DSLSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSensorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cCommaKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Keyword cInLayerKeyword_2_0_1 = (Keyword)cGroup_2_0.eContents().get(1);
		private final Assignment cLayerAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final CrossReference cLayerDCLStructureElementCrossReference_2_0_2_0 = (CrossReference)cLayerAssignment_2_0_2.eContents().get(0);
		private final RuleCall cLayerDCLStructureElementIDTerminalRuleCall_2_0_2_0_1 = (RuleCall)cLayerDCLStructureElementCrossReference_2_0_2_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cInSubSystemKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		private final Assignment cSubSystemAssignment_2_1_2 = (Assignment)cGroup_2_1.eContents().get(2);
		private final CrossReference cSubSystemDCLStructureElementCrossReference_2_1_2_0 = (CrossReference)cSubSystemAssignment_2_1_2.eContents().get(0);
		private final RuleCall cSubSystemDCLStructureElementIDTerminalRuleCall_2_1_2_0_1 = (RuleCall)cSubSystemDCLStructureElementCrossReference_2_1_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//DSLSensor:
		//	'Sensor' name=ID (',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:' subSystem=[DCLStructureElement])?
		//	';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Sensor' name=ID (',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:' subSystem=[DCLStructureElement])? ';'
		public Group getGroup() { return cGroup; }
		
		//'Sensor'
		public Keyword getSensorKeyword_0() { return cSensorKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:' subSystem=[DCLStructureElement])?
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//',' 'inLayer:' layer=[DCLStructureElement]
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//','
		public Keyword getCommaKeyword_2_0_0() { return cCommaKeyword_2_0_0; }
		
		//'inLayer:'
		public Keyword getInLayerKeyword_2_0_1() { return cInLayerKeyword_2_0_1; }
		
		//layer=[DCLStructureElement]
		public Assignment getLayerAssignment_2_0_2() { return cLayerAssignment_2_0_2; }
		
		//[DCLStructureElement]
		public CrossReference getLayerDCLStructureElementCrossReference_2_0_2_0() { return cLayerDCLStructureElementCrossReference_2_0_2_0; }
		
		//ID
		public RuleCall getLayerDCLStructureElementIDTerminalRuleCall_2_0_2_0_1() { return cLayerDCLStructureElementIDTerminalRuleCall_2_0_2_0_1; }
		
		//',' 'inSubSystem:' subSystem=[DCLStructureElement]
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//'inSubSystem:'
		public Keyword getInSubSystemKeyword_2_1_1() { return cInSubSystemKeyword_2_1_1; }
		
		//subSystem=[DCLStructureElement]
		public Assignment getSubSystemAssignment_2_1_2() { return cSubSystemAssignment_2_1_2; }
		
		//[DCLStructureElement]
		public CrossReference getSubSystemDCLStructureElementCrossReference_2_1_2_0() { return cSubSystemDCLStructureElementCrossReference_2_1_2_0; }
		
		//ID
		public RuleCall getSubSystemDCLStructureElementIDTerminalRuleCall_2_1_2_0_1() { return cSubSystemDCLStructureElementIDTerminalRuleCall_2_1_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class DSLEffectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLEffector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEffectorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cCommaKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Keyword cInLayerKeyword_2_0_1 = (Keyword)cGroup_2_0.eContents().get(1);
		private final Assignment cLayerAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final CrossReference cLayerDCLStructureElementCrossReference_2_0_2_0 = (CrossReference)cLayerAssignment_2_0_2.eContents().get(0);
		private final RuleCall cLayerDCLStructureElementIDTerminalRuleCall_2_0_2_0_1 = (RuleCall)cLayerDCLStructureElementCrossReference_2_0_2_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cInSubSystemKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		private final Assignment cSubSystemAssignment_2_1_2 = (Assignment)cGroup_2_1.eContents().get(2);
		private final CrossReference cSubSystemDCLStructureElementCrossReference_2_1_2_0 = (CrossReference)cSubSystemAssignment_2_1_2.eContents().get(0);
		private final RuleCall cSubSystemDCLStructureElementIDTerminalRuleCall_2_1_2_0_1 = (RuleCall)cSubSystemDCLStructureElementCrossReference_2_1_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//DSLEffector:
		//	'Effector' name=ID (',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:' subSystem=[DCLStructureElement])?
		//	';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Effector' name=ID (',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:' subSystem=[DCLStructureElement])?
		//';'
		public Group getGroup() { return cGroup; }
		
		//'Effector'
		public Keyword getEffectorKeyword_0() { return cEffectorKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:' subSystem=[DCLStructureElement])?
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//',' 'inLayer:' layer=[DCLStructureElement]
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//','
		public Keyword getCommaKeyword_2_0_0() { return cCommaKeyword_2_0_0; }
		
		//'inLayer:'
		public Keyword getInLayerKeyword_2_0_1() { return cInLayerKeyword_2_0_1; }
		
		//layer=[DCLStructureElement]
		public Assignment getLayerAssignment_2_0_2() { return cLayerAssignment_2_0_2; }
		
		//[DCLStructureElement]
		public CrossReference getLayerDCLStructureElementCrossReference_2_0_2_0() { return cLayerDCLStructureElementCrossReference_2_0_2_0; }
		
		//ID
		public RuleCall getLayerDCLStructureElementIDTerminalRuleCall_2_0_2_0_1() { return cLayerDCLStructureElementIDTerminalRuleCall_2_0_2_0_1; }
		
		//',' 'inSubSystem:' subSystem=[DCLStructureElement]
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//'inSubSystem:'
		public Keyword getInSubSystemKeyword_2_1_1() { return cInSubSystemKeyword_2_1_1; }
		
		//subSystem=[DCLStructureElement]
		public Assignment getSubSystemAssignment_2_1_2() { return cSubSystemAssignment_2_1_2; }
		
		//[DCLStructureElement]
		public CrossReference getSubSystemDCLStructureElementCrossReference_2_1_2_0() { return cSubSystemDCLStructureElementCrossReference_2_1_2_0; }
		
		//ID
		public RuleCall getSubSystemDCLStructureElementIDTerminalRuleCall_2_1_2_0_1() { return cSubSystemDCLStructureElementIDTerminalRuleCall_2_1_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class DSLReferenceInputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLReferenceInput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReferenceInputKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DSLReferenceInput:
		//	'ReferenceInput' name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'ReferenceInput' name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'ReferenceInput'
		public Keyword getReferenceInputKeyword_0() { return cReferenceInputKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class DSLMeasuredOutputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLMeasuredOutput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMeasuredOutputKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cCommaKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Keyword cInLayerKeyword_2_0_1 = (Keyword)cGroup_2_0.eContents().get(1);
		private final Assignment cLayerAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final CrossReference cLayerDCLStructureElementCrossReference_2_0_2_0 = (CrossReference)cLayerAssignment_2_0_2.eContents().get(0);
		private final RuleCall cLayerDCLStructureElementIDTerminalRuleCall_2_0_2_0_1 = (RuleCall)cLayerDCLStructureElementCrossReference_2_0_2_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cInSubSystemKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		private final Assignment cSubSystemAssignment_2_1_2 = (Assignment)cGroup_2_1.eContents().get(2);
		private final CrossReference cSubSystemDCLStructureElementCrossReference_2_1_2_0 = (CrossReference)cSubSystemAssignment_2_1_2.eContents().get(0);
		private final RuleCall cSubSystemDCLStructureElementIDTerminalRuleCall_2_1_2_0_1 = (RuleCall)cSubSystemDCLStructureElementCrossReference_2_1_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//DSLMeasuredOutput:
		//	'MeasuredOutput' name=ID (',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:'
		//	subSystem=[DCLStructureElement])? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'MeasuredOutput' name=ID (',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:'
		//subSystem=[DCLStructureElement])? ';'
		public Group getGroup() { return cGroup; }
		
		//'MeasuredOutput'
		public Keyword getMeasuredOutputKeyword_0() { return cMeasuredOutputKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:' subSystem=[DCLStructureElement])?
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//',' 'inLayer:' layer=[DCLStructureElement]
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//','
		public Keyword getCommaKeyword_2_0_0() { return cCommaKeyword_2_0_0; }
		
		//'inLayer:'
		public Keyword getInLayerKeyword_2_0_1() { return cInLayerKeyword_2_0_1; }
		
		//layer=[DCLStructureElement]
		public Assignment getLayerAssignment_2_0_2() { return cLayerAssignment_2_0_2; }
		
		//[DCLStructureElement]
		public CrossReference getLayerDCLStructureElementCrossReference_2_0_2_0() { return cLayerDCLStructureElementCrossReference_2_0_2_0; }
		
		//ID
		public RuleCall getLayerDCLStructureElementIDTerminalRuleCall_2_0_2_0_1() { return cLayerDCLStructureElementIDTerminalRuleCall_2_0_2_0_1; }
		
		//',' 'inSubSystem:' subSystem=[DCLStructureElement]
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//'inSubSystem:'
		public Keyword getInSubSystemKeyword_2_1_1() { return cInSubSystemKeyword_2_1_1; }
		
		//subSystem=[DCLStructureElement]
		public Assignment getSubSystemAssignment_2_1_2() { return cSubSystemAssignment_2_1_2; }
		
		//[DCLStructureElement]
		public CrossReference getSubSystemDCLStructureElementCrossReference_2_1_2_0() { return cSubSystemDCLStructureElementCrossReference_2_1_2_0; }
		
		//ID
		public RuleCall getSubSystemDCLStructureElementIDTerminalRuleCall_2_1_2_0_1() { return cSubSystemDCLStructureElementIDTerminalRuleCall_2_1_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class DSLAlternativeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DSLAlternative");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAlternativeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DSLAlternative:
		//	'Alternative' name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Alternative' name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'Alternative'
		public Keyword getAlternativeKeyword_0() { return cAlternativeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class DCLStructureElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DCLStructureElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDCLLayerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDCLComponentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDCLSubSystemParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDCLModuleParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cDCLComponentInterfaceParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//DCLStructureElement:
		//	DCLLayer | DCLComponent | DCLSubSystem | DCLModule | DCLComponentInterface;
		@Override public ParserRule getRule() { return rule; }
		
		//DCLLayer | DCLComponent | DCLSubSystem | DCLModule | DCLComponentInterface
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DCLLayer
		public RuleCall getDCLLayerParserRuleCall_0() { return cDCLLayerParserRuleCall_0; }
		
		//DCLComponent
		public RuleCall getDCLComponentParserRuleCall_1() { return cDCLComponentParserRuleCall_1; }
		
		//DCLSubSystem
		public RuleCall getDCLSubSystemParserRuleCall_2() { return cDCLSubSystemParserRuleCall_2; }
		
		//DCLModule
		public RuleCall getDCLModuleParserRuleCall_3() { return cDCLModuleParserRuleCall_3; }
		
		//DCLComponentInterface
		public RuleCall getDCLComponentInterfaceParserRuleCall_4() { return cDCLComponentInterfaceParserRuleCall_4; }
	}
	public class DCLLayerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DCLLayer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLayerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLevelKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLevelAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLevelINTTerminalRuleCall_4_0 = (RuleCall)cLevelAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cAlternatives_5.eContents().get(0);
		private final Keyword cCommaKeyword_5_0_0 = (Keyword)cGroup_5_0.eContents().get(0);
		private final Keyword cInLayerKeyword_5_0_1 = (Keyword)cGroup_5_0.eContents().get(1);
		private final Assignment cLayerAssignment_5_0_2 = (Assignment)cGroup_5_0.eContents().get(2);
		private final CrossReference cLayerDCLStructureElementCrossReference_5_0_2_0 = (CrossReference)cLayerAssignment_5_0_2.eContents().get(0);
		private final RuleCall cLayerDCLStructureElementIDTerminalRuleCall_5_0_2_0_1 = (RuleCall)cLayerDCLStructureElementCrossReference_5_0_2_0.eContents().get(1);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final Keyword cCommaKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Keyword cInSubSystemKeyword_5_1_1 = (Keyword)cGroup_5_1.eContents().get(1);
		private final Assignment cSubSystemAssignment_5_1_2 = (Assignment)cGroup_5_1.eContents().get(2);
		private final CrossReference cSubSystemDCLStructureElementCrossReference_5_1_2_0 = (CrossReference)cSubSystemAssignment_5_1_2.eContents().get(0);
		private final RuleCall cSubSystemDCLStructureElementIDTerminalRuleCall_5_1_2_0_1 = (RuleCall)cSubSystemDCLStructureElementCrossReference_5_1_2_0.eContents().get(1);
		private final Group cGroup_5_2 = (Group)cAlternatives_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Keyword cInComponentKeyword_5_2_1 = (Keyword)cGroup_5_2.eContents().get(1);
		private final Assignment cComponentAssignment_5_2_2 = (Assignment)cGroup_5_2.eContents().get(2);
		private final CrossReference cComponentDCLStructureElementCrossReference_5_2_2_0 = (CrossReference)cComponentAssignment_5_2_2.eContents().get(0);
		private final RuleCall cComponentDCLStructureElementIDTerminalRuleCall_5_2_2_0_1 = (RuleCall)cComponentDCLStructureElementCrossReference_5_2_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//DCLLayer:
		//	'layer' name=ID ',' 'level' level=INT (',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:'
		//	subSystem=[DCLStructureElement] | ',' 'inComponent:' component=[DCLStructureElement])? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'layer' name=ID ',' 'level' level=INT (',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:'
		//subSystem=[DCLStructureElement] | ',' 'inComponent:' component=[DCLStructureElement])? ';'
		public Group getGroup() { return cGroup; }
		
		//'layer'
		public Keyword getLayerKeyword_0() { return cLayerKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//','
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }
		
		//'level'
		public Keyword getLevelKeyword_3() { return cLevelKeyword_3; }
		
		//level=INT
		public Assignment getLevelAssignment_4() { return cLevelAssignment_4; }
		
		//INT
		public RuleCall getLevelINTTerminalRuleCall_4_0() { return cLevelINTTerminalRuleCall_4_0; }
		
		//(',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:' subSystem=[DCLStructureElement] | ',' 'inComponent:'
		//component=[DCLStructureElement])?
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//',' 'inLayer:' layer=[DCLStructureElement]
		public Group getGroup_5_0() { return cGroup_5_0; }
		
		//','
		public Keyword getCommaKeyword_5_0_0() { return cCommaKeyword_5_0_0; }
		
		//'inLayer:'
		public Keyword getInLayerKeyword_5_0_1() { return cInLayerKeyword_5_0_1; }
		
		//layer=[DCLStructureElement]
		public Assignment getLayerAssignment_5_0_2() { return cLayerAssignment_5_0_2; }
		
		//[DCLStructureElement]
		public CrossReference getLayerDCLStructureElementCrossReference_5_0_2_0() { return cLayerDCLStructureElementCrossReference_5_0_2_0; }
		
		//ID
		public RuleCall getLayerDCLStructureElementIDTerminalRuleCall_5_0_2_0_1() { return cLayerDCLStructureElementIDTerminalRuleCall_5_0_2_0_1; }
		
		//',' 'inSubSystem:' subSystem=[DCLStructureElement]
		public Group getGroup_5_1() { return cGroup_5_1; }
		
		//','
		public Keyword getCommaKeyword_5_1_0() { return cCommaKeyword_5_1_0; }
		
		//'inSubSystem:'
		public Keyword getInSubSystemKeyword_5_1_1() { return cInSubSystemKeyword_5_1_1; }
		
		//subSystem=[DCLStructureElement]
		public Assignment getSubSystemAssignment_5_1_2() { return cSubSystemAssignment_5_1_2; }
		
		//[DCLStructureElement]
		public CrossReference getSubSystemDCLStructureElementCrossReference_5_1_2_0() { return cSubSystemDCLStructureElementCrossReference_5_1_2_0; }
		
		//ID
		public RuleCall getSubSystemDCLStructureElementIDTerminalRuleCall_5_1_2_0_1() { return cSubSystemDCLStructureElementIDTerminalRuleCall_5_1_2_0_1; }
		
		//',' 'inComponent:' component=[DCLStructureElement]
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//','
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//'inComponent:'
		public Keyword getInComponentKeyword_5_2_1() { return cInComponentKeyword_5_2_1; }
		
		//component=[DCLStructureElement]
		public Assignment getComponentAssignment_5_2_2() { return cComponentAssignment_5_2_2; }
		
		//[DCLStructureElement]
		public CrossReference getComponentDCLStructureElementCrossReference_5_2_2_0() { return cComponentDCLStructureElementCrossReference_5_2_2_0; }
		
		//ID
		public RuleCall getComponentDCLStructureElementIDTerminalRuleCall_5_2_2_0_1() { return cComponentDCLStructureElementIDTerminalRuleCall_5_2_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class DCLComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DCLComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComponentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cCommaKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Keyword cInLayerKeyword_2_0_1 = (Keyword)cGroup_2_0.eContents().get(1);
		private final Assignment cLayerAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final CrossReference cLayerDCLStructureElementCrossReference_2_0_2_0 = (CrossReference)cLayerAssignment_2_0_2.eContents().get(0);
		private final RuleCall cLayerDCLStructureElementIDTerminalRuleCall_2_0_2_0_1 = (RuleCall)cLayerDCLStructureElementCrossReference_2_0_2_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cInSubSystemKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		private final Assignment cSubSystemAssignment_2_1_2 = (Assignment)cGroup_2_1.eContents().get(2);
		private final CrossReference cSubSystemDCLStructureElementCrossReference_2_1_2_0 = (CrossReference)cSubSystemAssignment_2_1_2.eContents().get(0);
		private final RuleCall cSubSystemDCLStructureElementIDTerminalRuleCall_2_1_2_0_1 = (RuleCall)cSubSystemDCLStructureElementCrossReference_2_1_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//DCLComponent:
		//	'component' name=ID (',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:' subSystem=[DCLStructureElement])?
		//	';';
		@Override public ParserRule getRule() { return rule; }
		
		//'component' name=ID (',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:' subSystem=[DCLStructureElement])?
		//';'
		public Group getGroup() { return cGroup; }
		
		//'component'
		public Keyword getComponentKeyword_0() { return cComponentKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:' subSystem=[DCLStructureElement])?
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//',' 'inLayer:' layer=[DCLStructureElement]
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//','
		public Keyword getCommaKeyword_2_0_0() { return cCommaKeyword_2_0_0; }
		
		//'inLayer:'
		public Keyword getInLayerKeyword_2_0_1() { return cInLayerKeyword_2_0_1; }
		
		//layer=[DCLStructureElement]
		public Assignment getLayerAssignment_2_0_2() { return cLayerAssignment_2_0_2; }
		
		//[DCLStructureElement]
		public CrossReference getLayerDCLStructureElementCrossReference_2_0_2_0() { return cLayerDCLStructureElementCrossReference_2_0_2_0; }
		
		//ID
		public RuleCall getLayerDCLStructureElementIDTerminalRuleCall_2_0_2_0_1() { return cLayerDCLStructureElementIDTerminalRuleCall_2_0_2_0_1; }
		
		//',' 'inSubSystem:' subSystem=[DCLStructureElement]
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//'inSubSystem:'
		public Keyword getInSubSystemKeyword_2_1_1() { return cInSubSystemKeyword_2_1_1; }
		
		//subSystem=[DCLStructureElement]
		public Assignment getSubSystemAssignment_2_1_2() { return cSubSystemAssignment_2_1_2; }
		
		//[DCLStructureElement]
		public CrossReference getSubSystemDCLStructureElementCrossReference_2_1_2_0() { return cSubSystemDCLStructureElementCrossReference_2_1_2_0; }
		
		//ID
		public RuleCall getSubSystemDCLStructureElementIDTerminalRuleCall_2_1_2_0_1() { return cSubSystemDCLStructureElementIDTerminalRuleCall_2_1_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class DCLComponentInterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DCLComponentInterface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInterfaceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cOfComponentKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cComponentAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cComponentDCLStructureElementCrossReference_3_0 = (CrossReference)cComponentAssignment_3.eContents().get(0);
		private final RuleCall cComponentDCLStructureElementIDTerminalRuleCall_3_0_1 = (RuleCall)cComponentDCLStructureElementCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cTypeKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cInterfaceTypeAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cInterfaceTypeInterfaceTypeParserRuleCall_4_2_0 = (RuleCall)cInterfaceTypeAssignment_4_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DCLComponentInterface:
		//	'interface' name=ID 'ofComponent' component=[DCLStructureElement] (',' 'type:' interfaceType=InterfaceType) ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'interface' name=ID 'ofComponent' component=[DCLStructureElement] (',' 'type:' interfaceType=InterfaceType) ';'
		public Group getGroup() { return cGroup; }
		
		//'interface'
		public Keyword getInterfaceKeyword_0() { return cInterfaceKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'ofComponent'
		public Keyword getOfComponentKeyword_2() { return cOfComponentKeyword_2; }
		
		//component=[DCLStructureElement]
		public Assignment getComponentAssignment_3() { return cComponentAssignment_3; }
		
		//[DCLStructureElement]
		public CrossReference getComponentDCLStructureElementCrossReference_3_0() { return cComponentDCLStructureElementCrossReference_3_0; }
		
		//ID
		public RuleCall getComponentDCLStructureElementIDTerminalRuleCall_3_0_1() { return cComponentDCLStructureElementIDTerminalRuleCall_3_0_1; }
		
		//(',' 'type:' interfaceType=InterfaceType)
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//'type:'
		public Keyword getTypeKeyword_4_1() { return cTypeKeyword_4_1; }
		
		//interfaceType=InterfaceType
		public Assignment getInterfaceTypeAssignment_4_2() { return cInterfaceTypeAssignment_4_2; }
		
		//InterfaceType
		public RuleCall getInterfaceTypeInterfaceTypeParserRuleCall_4_2_0() { return cInterfaceTypeInterfaceTypeParserRuleCall_4_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class InterfaceTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.InterfaceType");
		private final Assignment cInterfaceTypeNameAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cInterfaceTypeNameAlternatives_0 = (Alternatives)cInterfaceTypeNameAssignment.eContents().get(0);
		private final Keyword cInterfaceTypeNameProvidedKeyword_0_0 = (Keyword)cInterfaceTypeNameAlternatives_0.eContents().get(0);
		private final Keyword cInterfaceTypeNameRequiredKeyword_0_1 = (Keyword)cInterfaceTypeNameAlternatives_0.eContents().get(1);
		
		//InterfaceType:
		//	interfaceTypeName=('provided' | 'required');
		@Override public ParserRule getRule() { return rule; }
		
		//interfaceTypeName=('provided' | 'required')
		public Assignment getInterfaceTypeNameAssignment() { return cInterfaceTypeNameAssignment; }
		
		//('provided' | 'required')
		public Alternatives getInterfaceTypeNameAlternatives_0() { return cInterfaceTypeNameAlternatives_0; }
		
		//'provided'
		public Keyword getInterfaceTypeNameProvidedKeyword_0_0() { return cInterfaceTypeNameProvidedKeyword_0_0; }
		
		//'required'
		public Keyword getInterfaceTypeNameRequiredKeyword_0_1() { return cInterfaceTypeNameRequiredKeyword_0_1; }
	}
	public class DCLSubSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DCLSubSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubSystemKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cInSubSystemKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cSubSystemAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cSubSystemDCLStructureElementCrossReference_2_2_0 = (CrossReference)cSubSystemAssignment_2_2.eContents().get(0);
		private final RuleCall cSubSystemDCLStructureElementIDTerminalRuleCall_2_2_0_1 = (RuleCall)cSubSystemDCLStructureElementCrossReference_2_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//DCLSubSystem:
		//	'subSystem' name=ID (',' 'inSubSystem:' subSystem=[DCLStructureElement])? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'subSystem' name=ID (',' 'inSubSystem:' subSystem=[DCLStructureElement])? ';'
		public Group getGroup() { return cGroup; }
		
		//'subSystem'
		public Keyword getSubSystemKeyword_0() { return cSubSystemKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(',' 'inSubSystem:' subSystem=[DCLStructureElement])?
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//'inSubSystem:'
		public Keyword getInSubSystemKeyword_2_1() { return cInSubSystemKeyword_2_1; }
		
		//subSystem=[DCLStructureElement]
		public Assignment getSubSystemAssignment_2_2() { return cSubSystemAssignment_2_2; }
		
		//[DCLStructureElement]
		public CrossReference getSubSystemDCLStructureElementCrossReference_2_2_0() { return cSubSystemDCLStructureElementCrossReference_2_2_0; }
		
		//ID
		public RuleCall getSubSystemDCLStructureElementIDTerminalRuleCall_2_2_0_1() { return cSubSystemDCLStructureElementIDTerminalRuleCall_2_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class DCLModuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DCLModule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModuleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DCLModule:
		//	'module' name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'module' name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'module'
		public Keyword getModuleKeyword_0() { return cModuleKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class DCDeclElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.DCDecl");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cOnlyAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOnlyOnlyParserRuleCall_0_0_0 = (RuleCall)cOnlyAssignment_0_0.eContents().get(0);
		private final Assignment cTAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cTDCLStructureElementCrossReference_0_1_0 = (CrossReference)cTAssignment_0_1.eContents().get(0);
		private final RuleCall cTDCLStructureElementFQNParserRuleCall_0_1_0_1 = (RuleCall)cTDCLStructureElementCrossReference_0_1_0.eContents().get(1);
		private final Assignment cCanAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cCanCanParserRuleCall_0_2_0 = (RuleCall)cCanAssignment_0_2.eContents().get(0);
		private final Assignment cElementTypeAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cElementTypeElementTypeParserRuleCall_0_3_0 = (RuleCall)cElementTypeAssignment_0_3.eContents().get(0);
		private final Assignment cTypeAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final CrossReference cTypeDCLStructureElementCrossReference_0_4_0 = (CrossReference)cTypeAssignment_0_4.eContents().get(0);
		private final RuleCall cTypeDCLStructureElementFQNParserRuleCall_0_4_0_1 = (RuleCall)cTypeDCLStructureElementCrossReference_0_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cTAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final CrossReference cTDCLStructureElementCrossReference_1_0_0 = (CrossReference)cTAssignment_1_0.eContents().get(0);
		private final RuleCall cTDCLStructureElementFQNParserRuleCall_1_0_0_1 = (RuleCall)cTDCLStructureElementCrossReference_1_0_0.eContents().get(1);
		private final Assignment cCannotAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cCannotCannotParserRuleCall_1_1_0 = (RuleCall)cCannotAssignment_1_1.eContents().get(0);
		private final Assignment cElementTypeAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cElementTypeElementTypeParserRuleCall_1_2_0 = (RuleCall)cElementTypeAssignment_1_2.eContents().get(0);
		private final Assignment cTypeAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final CrossReference cTypeDCLStructureElementCrossReference_1_3_0 = (CrossReference)cTypeAssignment_1_3.eContents().get(0);
		private final RuleCall cTypeDCLStructureElementFQNParserRuleCall_1_3_0_1 = (RuleCall)cTypeDCLStructureElementCrossReference_1_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cTAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final CrossReference cTDCLStructureElementCrossReference_2_0_0 = (CrossReference)cTAssignment_2_0.eContents().get(0);
		private final RuleCall cTDCLStructureElementFQNParserRuleCall_2_0_0_1 = (RuleCall)cTDCLStructureElementCrossReference_2_0_0.eContents().get(1);
		private final Assignment cCanAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cCanCanParserRuleCall_2_1_0 = (RuleCall)cCanAssignment_2_1.eContents().get(0);
		private final Assignment cElementTypeAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cElementTypeElementTypeParserRuleCall_2_2_0 = (RuleCall)cElementTypeAssignment_2_2.eContents().get(0);
		private final Assignment cTypeAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final CrossReference cTypeDCLStructureElementCrossReference_2_3_0 = (CrossReference)cTypeAssignment_2_3.eContents().get(0);
		private final RuleCall cTypeDCLStructureElementFQNParserRuleCall_2_3_0_1 = (RuleCall)cTypeDCLStructureElementCrossReference_2_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cTAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final CrossReference cTDCLStructureElementCrossReference_3_0_0 = (CrossReference)cTAssignment_3_0.eContents().get(0);
		private final RuleCall cTDCLStructureElementFQNParserRuleCall_3_0_0_1 = (RuleCall)cTDCLStructureElementCrossReference_3_0_0.eContents().get(1);
		private final Assignment cCanAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCanCanParserRuleCall_3_1_0 = (RuleCall)cCanAssignment_3_1.eContents().get(0);
		private final Assignment cElementTypeAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cElementTypeElementTypeParserRuleCall_3_2_0 = (RuleCall)cElementTypeAssignment_3_2.eContents().get(0);
		private final Assignment cOnly2Assignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cOnly2Only2ParserRuleCall_3_3_0 = (RuleCall)cOnly2Assignment_3_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final CrossReference cTypeDCLStructureElementCrossReference_3_4_0 = (CrossReference)cTypeAssignment_3_4.eContents().get(0);
		private final RuleCall cTypeDCLStructureElementFQNParserRuleCall_3_4_0_1 = (RuleCall)cTypeDCLStructureElementCrossReference_3_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Assignment cTAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final CrossReference cTDCLStructureElementCrossReference_4_0_0 = (CrossReference)cTAssignment_4_0.eContents().get(0);
		private final RuleCall cTDCLStructureElementFQNParserRuleCall_4_0_0_1 = (RuleCall)cTDCLStructureElementCrossReference_4_0_0.eContents().get(1);
		private final Assignment cMustAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cMustMustParserRuleCall_4_1_0 = (RuleCall)cMustAssignment_4_1.eContents().get(0);
		private final Assignment cEntityTypeAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cEntityTypeEntityTypeParserRuleCall_4_2_0 = (RuleCall)cEntityTypeAssignment_4_2.eContents().get(0);
		private final Assignment cTypeAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final CrossReference cTypeDCLStructureElementCrossReference_4_3_0 = (CrossReference)cTypeAssignment_4_3.eContents().get(0);
		private final RuleCall cTypeDCLStructureElementFQNParserRuleCall_4_3_0_1 = (RuleCall)cTypeDCLStructureElementCrossReference_4_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		
		//DCDecl:
		//	only=Only t=[DCLStructureElement|FQN] can=Can elementType=ElementType type=[DCLStructureElement|FQN] ';' |
		//	t=[DCLStructureElement|FQN] cannot=Cannot elementType=ElementType type=[DCLStructureElement|FQN] ';' |
		//	t=[DCLStructureElement|FQN] can=Can elementType=ElementType type=[DCLStructureElement|FQN] ';' |
		//	t=[DCLStructureElement|FQN] can=Can elementType=ElementType only2=Only2 type=[DCLStructureElement|FQN] ';' |
		//	t=[DCLStructureElement|FQN] must=Must entityType=EntityType type=[DCLStructureElement|FQN] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//only=Only t=[DCLStructureElement|FQN] can=Can elementType=ElementType type=[DCLStructureElement|FQN] ';' |
		//t=[DCLStructureElement|FQN] cannot=Cannot elementType=ElementType type=[DCLStructureElement|FQN] ';' |
		//t=[DCLStructureElement|FQN] can=Can elementType=ElementType type=[DCLStructureElement|FQN] ';' |
		//t=[DCLStructureElement|FQN] can=Can elementType=ElementType only2=Only2 type=[DCLStructureElement|FQN] ';' |
		//t=[DCLStructureElement|FQN] must=Must entityType=EntityType type=[DCLStructureElement|FQN] ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//only=Only t=[DCLStructureElement|FQN] can=Can elementType=ElementType type=[DCLStructureElement|FQN] ';'
		public Group getGroup_0() { return cGroup_0; }
		
		//only=Only
		public Assignment getOnlyAssignment_0_0() { return cOnlyAssignment_0_0; }
		
		//Only
		public RuleCall getOnlyOnlyParserRuleCall_0_0_0() { return cOnlyOnlyParserRuleCall_0_0_0; }
		
		//t=[DCLStructureElement|FQN]
		public Assignment getTAssignment_0_1() { return cTAssignment_0_1; }
		
		//[DCLStructureElement|FQN]
		public CrossReference getTDCLStructureElementCrossReference_0_1_0() { return cTDCLStructureElementCrossReference_0_1_0; }
		
		//FQN
		public RuleCall getTDCLStructureElementFQNParserRuleCall_0_1_0_1() { return cTDCLStructureElementFQNParserRuleCall_0_1_0_1; }
		
		//can=Can
		public Assignment getCanAssignment_0_2() { return cCanAssignment_0_2; }
		
		//Can
		public RuleCall getCanCanParserRuleCall_0_2_0() { return cCanCanParserRuleCall_0_2_0; }
		
		//elementType=ElementType
		public Assignment getElementTypeAssignment_0_3() { return cElementTypeAssignment_0_3; }
		
		//ElementType
		public RuleCall getElementTypeElementTypeParserRuleCall_0_3_0() { return cElementTypeElementTypeParserRuleCall_0_3_0; }
		
		//type=[DCLStructureElement|FQN]
		public Assignment getTypeAssignment_0_4() { return cTypeAssignment_0_4; }
		
		//[DCLStructureElement|FQN]
		public CrossReference getTypeDCLStructureElementCrossReference_0_4_0() { return cTypeDCLStructureElementCrossReference_0_4_0; }
		
		//FQN
		public RuleCall getTypeDCLStructureElementFQNParserRuleCall_0_4_0_1() { return cTypeDCLStructureElementFQNParserRuleCall_0_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_0_5() { return cSemicolonKeyword_0_5; }
		
		//t=[DCLStructureElement|FQN] cannot=Cannot elementType=ElementType type=[DCLStructureElement|FQN] ';'
		public Group getGroup_1() { return cGroup_1; }
		
		//t=[DCLStructureElement|FQN]
		public Assignment getTAssignment_1_0() { return cTAssignment_1_0; }
		
		//[DCLStructureElement|FQN]
		public CrossReference getTDCLStructureElementCrossReference_1_0_0() { return cTDCLStructureElementCrossReference_1_0_0; }
		
		//FQN
		public RuleCall getTDCLStructureElementFQNParserRuleCall_1_0_0_1() { return cTDCLStructureElementFQNParserRuleCall_1_0_0_1; }
		
		//cannot=Cannot
		public Assignment getCannotAssignment_1_1() { return cCannotAssignment_1_1; }
		
		//Cannot
		public RuleCall getCannotCannotParserRuleCall_1_1_0() { return cCannotCannotParserRuleCall_1_1_0; }
		
		//elementType=ElementType
		public Assignment getElementTypeAssignment_1_2() { return cElementTypeAssignment_1_2; }
		
		//ElementType
		public RuleCall getElementTypeElementTypeParserRuleCall_1_2_0() { return cElementTypeElementTypeParserRuleCall_1_2_0; }
		
		//type=[DCLStructureElement|FQN]
		public Assignment getTypeAssignment_1_3() { return cTypeAssignment_1_3; }
		
		//[DCLStructureElement|FQN]
		public CrossReference getTypeDCLStructureElementCrossReference_1_3_0() { return cTypeDCLStructureElementCrossReference_1_3_0; }
		
		//FQN
		public RuleCall getTypeDCLStructureElementFQNParserRuleCall_1_3_0_1() { return cTypeDCLStructureElementFQNParserRuleCall_1_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_4() { return cSemicolonKeyword_1_4; }
		
		//t=[DCLStructureElement|FQN] can=Can elementType=ElementType type=[DCLStructureElement|FQN] ';'
		public Group getGroup_2() { return cGroup_2; }
		
		//t=[DCLStructureElement|FQN]
		public Assignment getTAssignment_2_0() { return cTAssignment_2_0; }
		
		//[DCLStructureElement|FQN]
		public CrossReference getTDCLStructureElementCrossReference_2_0_0() { return cTDCLStructureElementCrossReference_2_0_0; }
		
		//FQN
		public RuleCall getTDCLStructureElementFQNParserRuleCall_2_0_0_1() { return cTDCLStructureElementFQNParserRuleCall_2_0_0_1; }
		
		//can=Can
		public Assignment getCanAssignment_2_1() { return cCanAssignment_2_1; }
		
		//Can
		public RuleCall getCanCanParserRuleCall_2_1_0() { return cCanCanParserRuleCall_2_1_0; }
		
		//elementType=ElementType
		public Assignment getElementTypeAssignment_2_2() { return cElementTypeAssignment_2_2; }
		
		//ElementType
		public RuleCall getElementTypeElementTypeParserRuleCall_2_2_0() { return cElementTypeElementTypeParserRuleCall_2_2_0; }
		
		//type=[DCLStructureElement|FQN]
		public Assignment getTypeAssignment_2_3() { return cTypeAssignment_2_3; }
		
		//[DCLStructureElement|FQN]
		public CrossReference getTypeDCLStructureElementCrossReference_2_3_0() { return cTypeDCLStructureElementCrossReference_2_3_0; }
		
		//FQN
		public RuleCall getTypeDCLStructureElementFQNParserRuleCall_2_3_0_1() { return cTypeDCLStructureElementFQNParserRuleCall_2_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2_4() { return cSemicolonKeyword_2_4; }
		
		//t=[DCLStructureElement|FQN] can=Can elementType=ElementType only2=Only2 type=[DCLStructureElement|FQN] ';'
		public Group getGroup_3() { return cGroup_3; }
		
		//t=[DCLStructureElement|FQN]
		public Assignment getTAssignment_3_0() { return cTAssignment_3_0; }
		
		//[DCLStructureElement|FQN]
		public CrossReference getTDCLStructureElementCrossReference_3_0_0() { return cTDCLStructureElementCrossReference_3_0_0; }
		
		//FQN
		public RuleCall getTDCLStructureElementFQNParserRuleCall_3_0_0_1() { return cTDCLStructureElementFQNParserRuleCall_3_0_0_1; }
		
		//can=Can
		public Assignment getCanAssignment_3_1() { return cCanAssignment_3_1; }
		
		//Can
		public RuleCall getCanCanParserRuleCall_3_1_0() { return cCanCanParserRuleCall_3_1_0; }
		
		//elementType=ElementType
		public Assignment getElementTypeAssignment_3_2() { return cElementTypeAssignment_3_2; }
		
		//ElementType
		public RuleCall getElementTypeElementTypeParserRuleCall_3_2_0() { return cElementTypeElementTypeParserRuleCall_3_2_0; }
		
		//only2=Only2
		public Assignment getOnly2Assignment_3_3() { return cOnly2Assignment_3_3; }
		
		//Only2
		public RuleCall getOnly2Only2ParserRuleCall_3_3_0() { return cOnly2Only2ParserRuleCall_3_3_0; }
		
		//type=[DCLStructureElement|FQN]
		public Assignment getTypeAssignment_3_4() { return cTypeAssignment_3_4; }
		
		//[DCLStructureElement|FQN]
		public CrossReference getTypeDCLStructureElementCrossReference_3_4_0() { return cTypeDCLStructureElementCrossReference_3_4_0; }
		
		//FQN
		public RuleCall getTypeDCLStructureElementFQNParserRuleCall_3_4_0_1() { return cTypeDCLStructureElementFQNParserRuleCall_3_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3_5() { return cSemicolonKeyword_3_5; }
		
		//t=[DCLStructureElement|FQN] must=Must entityType=EntityType type=[DCLStructureElement|FQN] ';'
		public Group getGroup_4() { return cGroup_4; }
		
		//t=[DCLStructureElement|FQN]
		public Assignment getTAssignment_4_0() { return cTAssignment_4_0; }
		
		//[DCLStructureElement|FQN]
		public CrossReference getTDCLStructureElementCrossReference_4_0_0() { return cTDCLStructureElementCrossReference_4_0_0; }
		
		//FQN
		public RuleCall getTDCLStructureElementFQNParserRuleCall_4_0_0_1() { return cTDCLStructureElementFQNParserRuleCall_4_0_0_1; }
		
		//must=Must
		public Assignment getMustAssignment_4_1() { return cMustAssignment_4_1; }
		
		//Must
		public RuleCall getMustMustParserRuleCall_4_1_0() { return cMustMustParserRuleCall_4_1_0; }
		
		//entityType=EntityType
		public Assignment getEntityTypeAssignment_4_2() { return cEntityTypeAssignment_4_2; }
		
		//EntityType
		public RuleCall getEntityTypeEntityTypeParserRuleCall_4_2_0() { return cEntityTypeEntityTypeParserRuleCall_4_2_0; }
		
		//type=[DCLStructureElement|FQN]
		public Assignment getTypeAssignment_4_3() { return cTypeAssignment_4_3; }
		
		//[DCLStructureElement|FQN]
		public CrossReference getTypeDCLStructureElementCrossReference_4_3_0() { return cTypeDCLStructureElementCrossReference_4_3_0; }
		
		//FQN
		public RuleCall getTypeDCLStructureElementFQNParserRuleCall_4_3_0_1() { return cTypeDCLStructureElementFQNParserRuleCall_4_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_4_4() { return cSemicolonKeyword_4_4; }
	}
	public class FQNElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.FQN");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//FQN:
		//	ID ("." ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ("." ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class OnlyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.Only");
		private final Assignment cOnlyAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cOnlyOnlyKeyword_0 = (Keyword)cOnlyAssignment.eContents().get(0);
		
		//Only:
		//	only='only';
		@Override public ParserRule getRule() { return rule; }
		
		//only='only'
		public Assignment getOnlyAssignment() { return cOnlyAssignment; }
		
		//'only'
		public Keyword getOnlyOnlyKeyword_0() { return cOnlyOnlyKeyword_0; }
	}
	public class CanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.Can");
		private final Assignment cCanAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cCanCanKeyword_0 = (Keyword)cCanAssignment.eContents().get(0);
		
		//Can:
		//	can='can-';
		@Override public ParserRule getRule() { return rule; }
		
		//can='can-'
		public Assignment getCanAssignment() { return cCanAssignment; }
		
		//'can-'
		public Keyword getCanCanKeyword_0() { return cCanCanKeyword_0; }
	}
	public class CannotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.Cannot");
		private final Assignment cCannotAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cCannotCannotKeyword_0 = (Keyword)cCannotAssignment.eContents().get(0);
		
		//Cannot:
		//	cannot='cannot-';
		@Override public ParserRule getRule() { return rule; }
		
		//cannot='cannot-'
		public Assignment getCannotAssignment() { return cCannotAssignment; }
		
		//'cannot-'
		public Keyword getCannotCannotKeyword_0() { return cCannotCannotKeyword_0; }
	}
	public class Only2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.Only2");
		private final Assignment cOnly2Assignment = (Assignment)rule.eContents().get(1);
		private final Keyword cOnly2OnlyKeyword_0 = (Keyword)cOnly2Assignment.eContents().get(0);
		
		//Only2:
		//	only2='-only';
		@Override public ParserRule getRule() { return rule; }
		
		//only2='-only'
		public Assignment getOnly2Assignment() { return cOnly2Assignment; }
		
		//'-only'
		public Keyword getOnly2OnlyKeyword_0() { return cOnly2OnlyKeyword_0; }
	}
	public class MustElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.Must");
		private final Assignment cMustAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cMustMustKeyword_0 = (Keyword)cMustAssignment.eContents().get(0);
		
		//Must:
		//	must='must-';
		@Override public ParserRule getRule() { return rule; }
		
		//must='must-'
		public Assignment getMustAssignment() { return cMustAssignment; }
		
		//'must-'
		public Keyword getMustMustKeyword_0() { return cMustMustKeyword_0; }
	}
	public class ElementTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.ElementType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBasicTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEntityTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ElementType:
		//	BasicType | EntityType;
		@Override public ParserRule getRule() { return rule; }
		
		//BasicType | EntityType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BasicType
		public RuleCall getBasicTypeParserRuleCall_0() { return cBasicTypeParserRuleCall_0; }
		
		//EntityType
		public RuleCall getEntityTypeParserRuleCall_1() { return cEntityTypeParserRuleCall_1; }
	}
	public class BasicTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.BasicType");
		private final Assignment cTypeNameAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cTypeNameAlternatives_0 = (Alternatives)cTypeNameAssignment.eContents().get(0);
		private final Keyword cTypeNameAccessKeyword_0_0 = (Keyword)cTypeNameAlternatives_0.eContents().get(0);
		private final Keyword cTypeNameDeclareKeyword_0_1 = (Keyword)cTypeNameAlternatives_0.eContents().get(1);
		private final Keyword cTypeNameHandleKeyword_0_2 = (Keyword)cTypeNameAlternatives_0.eContents().get(2);
		private final Keyword cTypeNameCreateKeyword_0_3 = (Keyword)cTypeNameAlternatives_0.eContents().get(3);
		private final Keyword cTypeNameDependKeyword_0_4 = (Keyword)cTypeNameAlternatives_0.eContents().get(4);
		
		//BasicType:
		//	typeName=('access' | 'declare' | 'handle' | 'create' | 'depend');
		@Override public ParserRule getRule() { return rule; }
		
		//typeName=('access' | 'declare' | 'handle' | 'create' | 'depend')
		public Assignment getTypeNameAssignment() { return cTypeNameAssignment; }
		
		//('access' | 'declare' | 'handle' | 'create' | 'depend')
		public Alternatives getTypeNameAlternatives_0() { return cTypeNameAlternatives_0; }
		
		//'access'
		public Keyword getTypeNameAccessKeyword_0_0() { return cTypeNameAccessKeyword_0_0; }
		
		//'declare'
		public Keyword getTypeNameDeclareKeyword_0_1() { return cTypeNameDeclareKeyword_0_1; }
		
		//'handle'
		public Keyword getTypeNameHandleKeyword_0_2() { return cTypeNameHandleKeyword_0_2; }
		
		//'create'
		public Keyword getTypeNameCreateKeyword_0_3() { return cTypeNameCreateKeyword_0_3; }
		
		//'depend'
		public Keyword getTypeNameDependKeyword_0_4() { return cTypeNameDependKeyword_0_4; }
	}
	public class EntityTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufscar.sas.xtext.sasdsl.SasDsl.EntityType");
		private final Assignment cEntityAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cEntityAlternatives_0 = (Alternatives)cEntityAssignment.eContents().get(0);
		private final Keyword cEntityExtendKeyword_0_0 = (Keyword)cEntityAlternatives_0.eContents().get(0);
		private final Keyword cEntityImplementKeyword_0_1 = (Keyword)cEntityAlternatives_0.eContents().get(1);
		private final Keyword cEntityDeriveKeyword_0_2 = (Keyword)cEntityAlternatives_0.eContents().get(2);
		private final Keyword cEntityThrowKeyword_0_3 = (Keyword)cEntityAlternatives_0.eContents().get(3);
		private final Keyword cEntityUseannotationKeyword_0_4 = (Keyword)cEntityAlternatives_0.eContents().get(4);
		
		//EntityType:
		//	entity=('extend' | 'implement' | 'derive' | 'throw' | 'useannotation');
		@Override public ParserRule getRule() { return rule; }
		
		//entity=('extend' | 'implement' | 'derive' | 'throw' | 'useannotation')
		public Assignment getEntityAssignment() { return cEntityAssignment; }
		
		//('extend' | 'implement' | 'derive' | 'throw' | 'useannotation')
		public Alternatives getEntityAlternatives_0() { return cEntityAlternatives_0; }
		
		//'extend'
		public Keyword getEntityExtendKeyword_0_0() { return cEntityExtendKeyword_0_0; }
		
		//'implement'
		public Keyword getEntityImplementKeyword_0_1() { return cEntityImplementKeyword_0_1; }
		
		//'derive'
		public Keyword getEntityDeriveKeyword_0_2() { return cEntityDeriveKeyword_0_2; }
		
		//'throw'
		public Keyword getEntityThrowKeyword_0_3() { return cEntityThrowKeyword_0_3; }
		
		//'useannotation'
		public Keyword getEntityUseannotationKeyword_0_4() { return cEntityUseannotationKeyword_0_4; }
	}
	
	
	private final ArchitectureDefinitionElements pArchitectureDefinition;
	private final DSLRulesElements pDSLRules;
	private final DSLRuleMControllerElements pDSLRuleMController;
	private final DSLRuleControllerElements pDSLRuleController;
	private final DSLRuleMonitorElements pDSLRuleMonitor;
	private final DSLRuleAnalyzerElements pDSLRuleAnalyzer;
	private final DSLRulePlannerElements pDSLRulePlanner;
	private final DSLRuleExecutorElements pDSLRuleExecutor;
	private final DSLRuleKnowledgeElements pDSLRuleKnowledge;
	private final DSLRuleMOElements pDSLRuleMO;
	private final DSLRuleGenericElements pDSLRuleGeneric;
	private final DSLManagingElements pDSLManaging;
	private final DSLManagedElements pDSLManaged;
	private final DSLManagerControllerElements pDSLManagerController;
	private final DSLControllerElements pDSLController;
	private final DSLDomainRuleElements pDSLDomainRule;
	private final DSLMonitorElements pDSLMonitor;
	private final DSLAnalyzerElements pDSLAnalyzer;
	private final DSLPlannerElements pDSLPlanner;
	private final DSLExecutorElements pDSLExecutor;
	private final DSLKnowledgeElements pDSLKnowledge;
	private final DSLSensorElements pDSLSensor;
	private final DSLEffectorElements pDSLEffector;
	private final DSLReferenceInputElements pDSLReferenceInput;
	private final DSLMeasuredOutputElements pDSLMeasuredOutput;
	private final DSLAlternativeElements pDSLAlternative;
	private final DCLStructureElementElements pDCLStructureElement;
	private final DCLLayerElements pDCLLayer;
	private final DCLComponentElements pDCLComponent;
	private final DCLComponentInterfaceElements pDCLComponentInterface;
	private final InterfaceTypeElements pInterfaceType;
	private final DCLSubSystemElements pDCLSubSystem;
	private final DCLModuleElements pDCLModule;
	private final DCDeclElements pDCDecl;
	private final FQNElements pFQN;
	private final OnlyElements pOnly;
	private final CanElements pCan;
	private final CannotElements pCannot;
	private final Only2Elements pOnly2;
	private final MustElements pMust;
	private final ElementTypeElements pElementType;
	private final BasicTypeElements pBasicType;
	private final EntityTypeElements pEntityType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public SasDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pArchitectureDefinition = new ArchitectureDefinitionElements();
		this.pDSLRules = new DSLRulesElements();
		this.pDSLRuleMController = new DSLRuleMControllerElements();
		this.pDSLRuleController = new DSLRuleControllerElements();
		this.pDSLRuleMonitor = new DSLRuleMonitorElements();
		this.pDSLRuleAnalyzer = new DSLRuleAnalyzerElements();
		this.pDSLRulePlanner = new DSLRulePlannerElements();
		this.pDSLRuleExecutor = new DSLRuleExecutorElements();
		this.pDSLRuleKnowledge = new DSLRuleKnowledgeElements();
		this.pDSLRuleMO = new DSLRuleMOElements();
		this.pDSLRuleGeneric = new DSLRuleGenericElements();
		this.pDSLManaging = new DSLManagingElements();
		this.pDSLManaged = new DSLManagedElements();
		this.pDSLManagerController = new DSLManagerControllerElements();
		this.pDSLController = new DSLControllerElements();
		this.pDSLDomainRule = new DSLDomainRuleElements();
		this.pDSLMonitor = new DSLMonitorElements();
		this.pDSLAnalyzer = new DSLAnalyzerElements();
		this.pDSLPlanner = new DSLPlannerElements();
		this.pDSLExecutor = new DSLExecutorElements();
		this.pDSLKnowledge = new DSLKnowledgeElements();
		this.pDSLSensor = new DSLSensorElements();
		this.pDSLEffector = new DSLEffectorElements();
		this.pDSLReferenceInput = new DSLReferenceInputElements();
		this.pDSLMeasuredOutput = new DSLMeasuredOutputElements();
		this.pDSLAlternative = new DSLAlternativeElements();
		this.pDCLStructureElement = new DCLStructureElementElements();
		this.pDCLLayer = new DCLLayerElements();
		this.pDCLComponent = new DCLComponentElements();
		this.pDCLComponentInterface = new DCLComponentInterfaceElements();
		this.pInterfaceType = new InterfaceTypeElements();
		this.pDCLSubSystem = new DCLSubSystemElements();
		this.pDCLModule = new DCLModuleElements();
		this.pDCDecl = new DCDeclElements();
		this.pFQN = new FQNElements();
		this.pOnly = new OnlyElements();
		this.pCan = new CanElements();
		this.pCannot = new CannotElements();
		this.pOnly2 = new Only2Elements();
		this.pMust = new MustElements();
		this.pElementType = new ElementTypeElements();
		this.pBasicType = new BasicTypeElements();
		this.pEntityType = new EntityTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("br.ufscar.sas.xtext.sasdsl.SasDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ArchitectureDefinition:
	//	'Architecture' name=ID '{'
	//	managing+=DSLManaging+
	//	managed+=DSLManaged+
	//	'}'
	//	'Rules' '{'
	//	rules+=DSLRules*
	//	dCDecl+=DCDecl*
	//	'}';
	public ArchitectureDefinitionElements getArchitectureDefinitionAccess() {
		return pArchitectureDefinition;
	}
	
	public ParserRule getArchitectureDefinitionRule() {
		return getArchitectureDefinitionAccess().getRule();
	}
	
	//DSLRules:
	//	DSLRuleController | DSLRuleMonitor | DSLRuleAnalyzer | DSLRulePlanner | DSLRuleExecutor | DSLRuleMO |
	//	DSLRuleMController | DSLRuleKnowledge | DSLRuleGeneric;
	public DSLRulesElements getDSLRulesAccess() {
		return pDSLRules;
	}
	
	public ParserRule getDSLRulesRule() {
		return getDSLRulesAccess().getRule();
	}
	
	//DSLRuleMController:
	//	'loopManager' mcontroller1=[DSLManagerController] access=('must-use' | 'must-not-use') 'loopManager'
	//	mcontroller2=[DSLManagerController] ';';
	public DSLRuleMControllerElements getDSLRuleMControllerAccess() {
		return pDSLRuleMController;
	}
	
	public ParserRule getDSLRuleMControllerRule() {
		return getDSLRuleMControllerAccess().getRule();
	}
	
	//DSLRuleController:
	//	'loop' controller1=[DSLController] access=('must-use' | 'must-not-use') 'loop' controller2=[DSLController] ';';
	public DSLRuleControllerElements getDSLRuleControllerAccess() {
		return pDSLRuleController;
	}
	
	public ParserRule getDSLRuleControllerRule() {
		return getDSLRuleControllerAccess().getRule();
	}
	
	//DSLRuleMonitor:
	//	'monitor' monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'monitor' monitor2=[DSLMonitor] ';' | 'monitor'
	//	monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'analyzer' analyzer=[DSLAnalyzer] ';' | 'monitor'
	//	monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'planner' planner=[DSLPlanner] ';' | 'monitor'
	//	monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'executor' executor=[DSLExecutor] ';' | 'monitor'
	//	monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'knowledge' knowledge=[DSLKnowledge] ';' | 'monitor'
	//	monitor=[DSLMonitor] access=('must-use' | 'must-not-use') 'sensor' sensor=[DSLSensor] ';';
	public DSLRuleMonitorElements getDSLRuleMonitorAccess() {
		return pDSLRuleMonitor;
	}
	
	public ParserRule getDSLRuleMonitorRule() {
		return getDSLRuleMonitorAccess().getRule();
	}
	
	//DSLRuleAnalyzer:
	//	'analyzer' analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'monitor' monitor=[DSLMonitor] ';' | 'analyzer'
	//	analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'analyzer' analyzer2=[DSLAnalyzer] ';' | 'analyzer'
	//	analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'planner' planner=[DSLPlanner] ';' | 'analyzer'
	//	analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'executor' executor=[DSLExecutor] ';' | 'analyzer'
	//	analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'knowledge' knowledge=[DSLKnowledge] ';' | 'analyzer'
	//	analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'reference-input' rreference=[DSLReferenceInput] ';' |
	//	'analyzer' analyzer=[DSLAnalyzer] access=('must-use' | 'must-not-use') 'alternative' shalt=[DSLAlternative] ';';
	public DSLRuleAnalyzerElements getDSLRuleAnalyzerAccess() {
		return pDSLRuleAnalyzer;
	}
	
	public ParserRule getDSLRuleAnalyzerRule() {
		return getDSLRuleAnalyzerAccess().getRule();
	}
	
	//DSLRulePlanner:
	//	'planner' planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'monitor' monitor=[DSLMonitor] ';' | 'planner'
	//	planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'analyzer' analyzer=[DSLAnalyzer] ';' | 'planner'
	//	planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'planner' planner2=[DSLPlanner] ';' | 'planner'
	//	planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'executor' executor=[DSLExecutor] ';' | 'planner'
	//	planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'knowledge' knowledge=[DSLKnowledge] ';' | 'planner'
	//	planner=[DSLPlanner] access=('must-use' | 'must-not-use') 'alternative' shalt=[DSLAlternative] ';';
	public DSLRulePlannerElements getDSLRulePlannerAccess() {
		return pDSLRulePlanner;
	}
	
	public ParserRule getDSLRulePlannerRule() {
		return getDSLRulePlannerAccess().getRule();
	}
	
	//DSLRuleExecutor:
	//	'executor' executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'monitor' monitor=[DSLMonitor] ';' | 'executor'
	//	executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'analyzer' analyzer=[DSLAnalyzer] ';' | 'executor'
	//	executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'planner' planner=[DSLPlanner] ';' | 'executor'
	//	executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'executor' executor2=[DSLExecutor] ';' | 'executor'
	//	executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'knowledge' knowledge=[DSLKnowledge] ';' | 'executor'
	//	executor=[DSLExecutor] access=('must-use' | 'must-not-use') 'effector' effector=[DSLEffector] ';';
	public DSLRuleExecutorElements getDSLRuleExecutorAccess() {
		return pDSLRuleExecutor;
	}
	
	public ParserRule getDSLRuleExecutorRule() {
		return getDSLRuleExecutorAccess().getRule();
	}
	
	//DSLRuleKnowledge:
	//	'knowledge' knowledge=[DSLKnowledge] access=('must-use' | 'must-not-use') 'monitor' monitor=[DSLMonitor] ';' |
	//	'knowledge' knowledge=[DSLKnowledge] access=('must-use' | 'must-not-use') 'analyzer' analyzer=[DSLAnalyzer] ';' |
	//	'knowledge' knowledge=[DSLKnowledge] access=('must-use' | 'must-not-use') 'planner' planner=[DSLPlanner] ';' |
	//	'knowledge' knowledge=[DSLKnowledge] access=('must-use' | 'must-not-use') 'executor' executor=[DSLExecutor] ';';
	public DSLRuleKnowledgeElements getDSLRuleKnowledgeAccess() {
		return pDSLRuleKnowledge;
	}
	
	public ParserRule getDSLRuleKnowledgeRule() {
		return getDSLRuleKnowledgeAccess().getRule();
	}
	
	//DSLRuleMO:
	//	'sensor' sensor=[DSLSensor] access=('must-use' | 'must-not-use') 'measured-output' measured=[DSLMeasuredOutput] ';';
	public DSLRuleMOElements getDSLRuleMOAccess() {
		return pDSLRuleMO;
	}
	
	public ParserRule getDSLRuleMORule() {
		return getDSLRuleMOAccess().getRule();
	}
	
	//DSLRuleGeneric:
	//	'effector' effector=[DSLEffector] access=('must-use' | 'must-not-use') 'component' component=[DCLComponent] ';';
	public DSLRuleGenericElements getDSLRuleGenericAccess() {
		return pDSLRuleGeneric;
	}
	
	public ParserRule getDSLRuleGenericRule() {
		return getDSLRuleGenericAccess().getRule();
	}
	
	//DSLManaging:
	//	'Managing' name=ID '{'
	//	managerController+=DSLManagerController*
	//	controller+=DSLController*
	//	'}';
	public DSLManagingElements getDSLManagingAccess() {
		return pDSLManaging;
	}
	
	public ParserRule getDSLManagingRule() {
		return getDSLManagingAccess().getRule();
	}
	
	//DSLManaged:
	//	'Managed' name=ID '{'
	//	structureElements+=DCLStructureElement*
	//	sensor+=DSLSensor*
	//	effector+=DSLEffector*
	//	measuredOutput+=DSLMeasuredOutput*
	//	'}';
	public DSLManagedElements getDSLManagedAccess() {
		return pDSLManaged;
	}
	
	public ParserRule getDSLManagedRule() {
		return getDSLManagedAccess().getRule();
	}
	
	//DSLManagerController:
	//	'LoopManager' name=ID '{'
	//	controller+=DSLController+
	//	'}';
	public DSLManagerControllerElements getDSLManagerControllerAccess() {
		return pDSLManagerController;
	}
	
	public ParserRule getDSLManagerControllerRule() {
		return getDSLManagerControllerAccess().getRule();
	}
	
	//DSLController:
	//	'Loop' name=ID domain=DSLDomainRule? '{'
	//	monitor+=DSLMonitor*
	//	analyzer+=DSLAnalyzer*
	//	planner+=DSLPlanner*
	//	executor+=DSLExecutor*
	//	knowledge+=DSLKnowledge*
	//	'}';
	public DSLControllerElements getDSLControllerAccess() {
		return pDSLController;
	}
	
	public ParserRule getDSLControllerRule() {
		return getDSLControllerAccess().getRule();
	}
	
	//DSLDomainRule:
	//	value=(ID | 'withDomainRules');
	public DSLDomainRuleElements getDSLDomainRuleAccess() {
		return pDSLDomainRule;
	}
	
	public ParserRule getDSLDomainRuleRule() {
		return getDSLDomainRuleAccess().getRule();
	}
	
	//DSLMonitor:
	//	'Monitor' name=ID ';';
	public DSLMonitorElements getDSLMonitorAccess() {
		return pDSLMonitor;
	}
	
	public ParserRule getDSLMonitorRule() {
		return getDSLMonitorAccess().getRule();
	}
	
	//DSLAnalyzer:
	//	'Analyzer' name=ID ';';
	public DSLAnalyzerElements getDSLAnalyzerAccess() {
		return pDSLAnalyzer;
	}
	
	public ParserRule getDSLAnalyzerRule() {
		return getDSLAnalyzerAccess().getRule();
	}
	
	//DSLPlanner:
	//	'Planner' name=ID ';';
	public DSLPlannerElements getDSLPlannerAccess() {
		return pDSLPlanner;
	}
	
	public ParserRule getDSLPlannerRule() {
		return getDSLPlannerAccess().getRule();
	}
	
	//DSLExecutor:
	//	'Executor' name=ID ';';
	public DSLExecutorElements getDSLExecutorAccess() {
		return pDSLExecutor;
	}
	
	public ParserRule getDSLExecutorRule() {
		return getDSLExecutorAccess().getRule();
	}
	
	//DSLKnowledge:
	//	'Knowledge' name=ID '{'
	//	referenceInput+=DSLReferenceInput*
	//	shalt+=DSLAlternative*
	//	'}';
	public DSLKnowledgeElements getDSLKnowledgeAccess() {
		return pDSLKnowledge;
	}
	
	public ParserRule getDSLKnowledgeRule() {
		return getDSLKnowledgeAccess().getRule();
	}
	
	//DSLSensor:
	//	'Sensor' name=ID (',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:' subSystem=[DCLStructureElement])?
	//	';';
	public DSLSensorElements getDSLSensorAccess() {
		return pDSLSensor;
	}
	
	public ParserRule getDSLSensorRule() {
		return getDSLSensorAccess().getRule();
	}
	
	//DSLEffector:
	//	'Effector' name=ID (',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:' subSystem=[DCLStructureElement])?
	//	';';
	public DSLEffectorElements getDSLEffectorAccess() {
		return pDSLEffector;
	}
	
	public ParserRule getDSLEffectorRule() {
		return getDSLEffectorAccess().getRule();
	}
	
	//DSLReferenceInput:
	//	'ReferenceInput' name=ID ';';
	public DSLReferenceInputElements getDSLReferenceInputAccess() {
		return pDSLReferenceInput;
	}
	
	public ParserRule getDSLReferenceInputRule() {
		return getDSLReferenceInputAccess().getRule();
	}
	
	//DSLMeasuredOutput:
	//	'MeasuredOutput' name=ID (',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:'
	//	subSystem=[DCLStructureElement])? ';';
	public DSLMeasuredOutputElements getDSLMeasuredOutputAccess() {
		return pDSLMeasuredOutput;
	}
	
	public ParserRule getDSLMeasuredOutputRule() {
		return getDSLMeasuredOutputAccess().getRule();
	}
	
	//DSLAlternative:
	//	'Alternative' name=ID ';';
	public DSLAlternativeElements getDSLAlternativeAccess() {
		return pDSLAlternative;
	}
	
	public ParserRule getDSLAlternativeRule() {
		return getDSLAlternativeAccess().getRule();
	}
	
	//DCLStructureElement:
	//	DCLLayer | DCLComponent | DCLSubSystem | DCLModule | DCLComponentInterface;
	public DCLStructureElementElements getDCLStructureElementAccess() {
		return pDCLStructureElement;
	}
	
	public ParserRule getDCLStructureElementRule() {
		return getDCLStructureElementAccess().getRule();
	}
	
	//DCLLayer:
	//	'layer' name=ID ',' 'level' level=INT (',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:'
	//	subSystem=[DCLStructureElement] | ',' 'inComponent:' component=[DCLStructureElement])? ';';
	public DCLLayerElements getDCLLayerAccess() {
		return pDCLLayer;
	}
	
	public ParserRule getDCLLayerRule() {
		return getDCLLayerAccess().getRule();
	}
	
	//DCLComponent:
	//	'component' name=ID (',' 'inLayer:' layer=[DCLStructureElement] | ',' 'inSubSystem:' subSystem=[DCLStructureElement])?
	//	';';
	public DCLComponentElements getDCLComponentAccess() {
		return pDCLComponent;
	}
	
	public ParserRule getDCLComponentRule() {
		return getDCLComponentAccess().getRule();
	}
	
	//DCLComponentInterface:
	//	'interface' name=ID 'ofComponent' component=[DCLStructureElement] (',' 'type:' interfaceType=InterfaceType) ';';
	public DCLComponentInterfaceElements getDCLComponentInterfaceAccess() {
		return pDCLComponentInterface;
	}
	
	public ParserRule getDCLComponentInterfaceRule() {
		return getDCLComponentInterfaceAccess().getRule();
	}
	
	//InterfaceType:
	//	interfaceTypeName=('provided' | 'required');
	public InterfaceTypeElements getInterfaceTypeAccess() {
		return pInterfaceType;
	}
	
	public ParserRule getInterfaceTypeRule() {
		return getInterfaceTypeAccess().getRule();
	}
	
	//DCLSubSystem:
	//	'subSystem' name=ID (',' 'inSubSystem:' subSystem=[DCLStructureElement])? ';';
	public DCLSubSystemElements getDCLSubSystemAccess() {
		return pDCLSubSystem;
	}
	
	public ParserRule getDCLSubSystemRule() {
		return getDCLSubSystemAccess().getRule();
	}
	
	//DCLModule:
	//	'module' name=ID ';';
	public DCLModuleElements getDCLModuleAccess() {
		return pDCLModule;
	}
	
	public ParserRule getDCLModuleRule() {
		return getDCLModuleAccess().getRule();
	}
	
	//DCDecl:
	//	only=Only t=[DCLStructureElement|FQN] can=Can elementType=ElementType type=[DCLStructureElement|FQN] ';' |
	//	t=[DCLStructureElement|FQN] cannot=Cannot elementType=ElementType type=[DCLStructureElement|FQN] ';' |
	//	t=[DCLStructureElement|FQN] can=Can elementType=ElementType type=[DCLStructureElement|FQN] ';' |
	//	t=[DCLStructureElement|FQN] can=Can elementType=ElementType only2=Only2 type=[DCLStructureElement|FQN] ';' |
	//	t=[DCLStructureElement|FQN] must=Must entityType=EntityType type=[DCLStructureElement|FQN] ';';
	public DCDeclElements getDCDeclAccess() {
		return pDCDecl;
	}
	
	public ParserRule getDCDeclRule() {
		return getDCDeclAccess().getRule();
	}
	
	//FQN:
	//	ID ("." ID)*;
	public FQNElements getFQNAccess() {
		return pFQN;
	}
	
	public ParserRule getFQNRule() {
		return getFQNAccess().getRule();
	}
	
	//Only:
	//	only='only';
	public OnlyElements getOnlyAccess() {
		return pOnly;
	}
	
	public ParserRule getOnlyRule() {
		return getOnlyAccess().getRule();
	}
	
	//Can:
	//	can='can-';
	public CanElements getCanAccess() {
		return pCan;
	}
	
	public ParserRule getCanRule() {
		return getCanAccess().getRule();
	}
	
	//Cannot:
	//	cannot='cannot-';
	public CannotElements getCannotAccess() {
		return pCannot;
	}
	
	public ParserRule getCannotRule() {
		return getCannotAccess().getRule();
	}
	
	//Only2:
	//	only2='-only';
	public Only2Elements getOnly2Access() {
		return pOnly2;
	}
	
	public ParserRule getOnly2Rule() {
		return getOnly2Access().getRule();
	}
	
	//Must:
	//	must='must-';
	public MustElements getMustAccess() {
		return pMust;
	}
	
	public ParserRule getMustRule() {
		return getMustAccess().getRule();
	}
	
	//ElementType:
	//	BasicType | EntityType;
	public ElementTypeElements getElementTypeAccess() {
		return pElementType;
	}
	
	public ParserRule getElementTypeRule() {
		return getElementTypeAccess().getRule();
	}
	
	//BasicType:
	//	typeName=('access' | 'declare' | 'handle' | 'create' | 'depend');
	public BasicTypeElements getBasicTypeAccess() {
		return pBasicType;
	}
	
	public ParserRule getBasicTypeRule() {
		return getBasicTypeAccess().getRule();
	}
	
	//EntityType:
	//	entity=('extend' | 'implement' | 'derive' | 'throw' | 'useannotation');
	public EntityTypeElements getEntityTypeAccess() {
		return pEntityType;
	}
	
	public ParserRule getEntityTypeRule() {
		return getEntityTypeAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
