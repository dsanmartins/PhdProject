/**
 * generated by Xtext 2.21.0
 */
package br.ufscar.sas.xtext.sasdsl.sasDsl.impl;

import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLController;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLRuleController;
import br.ufscar.sas.xtext.sasdsl.sasDsl.SasDslPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>DSL Rule Controller</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufscar.sas.xtext.sasdsl.sasDsl.impl.DSLRuleControllerImpl#getController1 <em>Controller1</em>}</li>
 *   <li>{@link br.ufscar.sas.xtext.sasdsl.sasDsl.impl.DSLRuleControllerImpl#getController2 <em>Controller2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DSLRuleControllerImpl extends DSLRulesImpl implements DSLRuleController
{
  /**
   * The cached value of the '{@link #getController1() <em>Controller1</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getController1()
   * @generated
   * @ordered
   */
  protected DSLController controller1;

  /**
   * The cached value of the '{@link #getController2() <em>Controller2</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getController2()
   * @generated
   * @ordered
   */
  protected DSLController controller2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DSLRuleControllerImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SasDslPackage.Literals.DSL_RULE_CONTROLLER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DSLController getController1()
  {
    if (controller1 != null && controller1.eIsProxy())
    {
      InternalEObject oldController1 = (InternalEObject)controller1;
      controller1 = (DSLController)eResolveProxy(oldController1);
      if (controller1 != oldController1)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SasDslPackage.DSL_RULE_CONTROLLER__CONTROLLER1, oldController1, controller1));
      }
    }
    return controller1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLController basicGetController1()
  {
    return controller1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setController1(DSLController newController1)
  {
    DSLController oldController1 = controller1;
    controller1 = newController1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SasDslPackage.DSL_RULE_CONTROLLER__CONTROLLER1, oldController1, controller1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DSLController getController2()
  {
    if (controller2 != null && controller2.eIsProxy())
    {
      InternalEObject oldController2 = (InternalEObject)controller2;
      controller2 = (DSLController)eResolveProxy(oldController2);
      if (controller2 != oldController2)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SasDslPackage.DSL_RULE_CONTROLLER__CONTROLLER2, oldController2, controller2));
      }
    }
    return controller2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLController basicGetController2()
  {
    return controller2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setController2(DSLController newController2)
  {
    DSLController oldController2 = controller2;
    controller2 = newController2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SasDslPackage.DSL_RULE_CONTROLLER__CONTROLLER2, oldController2, controller2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_RULE_CONTROLLER__CONTROLLER1:
        if (resolve) return getController1();
        return basicGetController1();
      case SasDslPackage.DSL_RULE_CONTROLLER__CONTROLLER2:
        if (resolve) return getController2();
        return basicGetController2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_RULE_CONTROLLER__CONTROLLER1:
        setController1((DSLController)newValue);
        return;
      case SasDslPackage.DSL_RULE_CONTROLLER__CONTROLLER2:
        setController2((DSLController)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_RULE_CONTROLLER__CONTROLLER1:
        setController1((DSLController)null);
        return;
      case SasDslPackage.DSL_RULE_CONTROLLER__CONTROLLER2:
        setController2((DSLController)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_RULE_CONTROLLER__CONTROLLER1:
        return controller1 != null;
      case SasDslPackage.DSL_RULE_CONTROLLER__CONTROLLER2:
        return controller2 != null;
    }
    return super.eIsSet(featureID);
  }

} //DSLRuleControllerImpl
